(|AnnotatedProgramSemantics|
 (|update_PState_TCC1| 0
  (|update_PState_TCC1-1| NIL 3390796236 3403271984 ("" (SUBTYPE-TCC) NIL NIL)
   PROVED
   ((|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL))
   24 24 NIL NIL))
 (|update_GhostVars_TCC1| 0
  (|update_GhostVars_TCC1-1| NIL 3390796236 3403271984
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL))
   5 4 T NIL))
 (|initial_AP_state_TCC1| 0
  (|initial_AP_state_TCC1-1| NIL 3389427978 3403271985
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   69 70 NIL NIL))
 (|body_has_no_side_effects_TCC1| 0
  (|body_has_no_side_effects_TCC1-1| NIL 3403271979 3403271985
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL))
   41 42 NIL NIL))
 (|run_annotated_program_TCC1| 0
  (|run_annotated_program_TCC1-1| NIL 3401609002 3403271986
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)) 35 36 NIL NIL))
 (|IMP_SemanticsProofs_TCC1| 0
  (|IMP_SemanticsProofs_TCC1-1| NIL 3390796236 3403271988
   ("" (SKOSIMP*)
    (("" (EXPAND "on_method_entry")
      (("" (SPLIT -3)
        (("1" (FLATTEN)
          (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (ASSERT)
            (("2" (SKOSIMP*)
              (("2" (EXPAND "check_assertion")
                (("2" (SKOSIMP*)
                  (("2" (REPLACE -2 :DIR RL)
                    (("2" (REPLACE -13)
                      (("2"
                        (INST-CP -11 "inv!1" "v!4" "v!2" "s!1" "tau1!5"
                         "tau1!3" "m1!2" "m1!1" "m1!2 - 1" "m1!1 - 1")
                        (("1" (ASSERT)
                          (("1" (FLATTEN)
                            (("1" (REPLACE -12)
                              (("1" (REPLACE -13)
                                (("1" (REPLACE -14)
                                  (("1" (REPLACE -5 :DIR RL)
                                    (("1" (REPLACE -19)
                                      (("1"
                                        (INST-CP -11 "pre(m!1)" "v!5" "v!3"
                                         "tau1!1" "tau1!6" "tau1!4" "m2!2"
                                         "m2!1" "m2!2 - 1" "m2!1 - 1")
                                        (("1" (ASSERT)
                                          (("1" (FLATTEN)
                                            (("1" (REPLACE -12)
                                              (("1" (REPLACE -13)
                                                (("1" (REPLACE -14)
                                                  (("1" (REPLACE -8 :DIR RL)
                                                    (("1" (REPLACE -25)
                                                      (("1"
                                                        (INST -11
                                                         "pre_set(m!1)" "Unit"
                                                         "Unit" "tau2!1" "s1!1"
                                                         "s2!1" "n1!1" "n2!1"
                                                         "m3!2" "m3!1")
                                                        (("1" (ASSERT)
                                                          (("1" (FLATTEN)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|m1!2| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|m1!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   244 243 T NIL))
 (|IMP_SemanticsProofs_TCC2| 0
  (|IMP_SemanticsProofs_TCC2-1| NIL 3390796236 3403271990
   ("" (SKOSIMP*)
    (("" (EXPAND "on_method_exit_normal")
      (("" (SPLIT -3)
        (("1" (FLATTEN)
          (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (ASSERT)
            (("2" (SKOSIMP*)
              (("2" (EXPAND "check_assertion")
                (("2" (SKOSIMP*)
                  (("2"
                    (INST-CP -11 "post_set(m!1)" "Unit" "Unit" "s!1" "tau1!2"
                     "tau1!1" "n1!1" "n2!1" "m1!2" "m1!1")
                    (("2" (ASSERT)
                      (("2" (FLATTEN)
                        (("2" (REPLACE -12)
                          (("2" (REPLACE -13)
                            (("2" (REPLACE -3 :DIR RL)
                              (("2" (REPLACE -16)
                                (("2"
                                  (INST-CP -11 "inv!1" "v!4" "v!2" "tau1!1"
                                   "tau1!5" "tau1!3" "m2!2" "m2!1" "m2!2 - 1"
                                   "m2!1 - 1")
                                  (("2" (ASSERT)
                                    (("2" (FLATTEN)
                                      (("2" (REPLACE -12)
                                        (("2" (REPLACE -13)
                                          (("2" (REPLACE -14)
                                            (("2" (ASSERT)
                                              (("2" (REPLACE -22 :DIR RL)
                                                (("2" (REPLACE -6)
                                                  (("2"
                                                    (INST -11 "post(m!1)" "v!5"
                                                     "v!3" "tau2!1" "tau1!6"
                                                     "tau1!4" "m3!2" "m3!1"
                                                     "m3!2 - 1" "m3!1 - 1")
                                                    (("2" (ASSERT)
                                                      (("2" (FLATTEN)
                                                        (("2" (REPLACE -11)
                                                          (("2" (REPLACE -12)
                                                            (("2" (REPLACE -13)
                                                              (("2"
                                                                (REPLACE -27
                                                                         :DIR RL)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   193 193 T NIL))
 (|IMP_SemanticsProofs_TCC3| 0
  (|IMP_SemanticsProofs_TCC3-1| NIL 3390796236 3403271991
   ("" (SKOSIMP*)
    (("" (EXPAND "on_method_exit_exceptional")
      (("" (SPLIT -3)
        (("1" (FLATTEN)
          (("1" (ASSERT)
            (("1" (EXPAND "check_assertion")
              (("1" (SKOSIMP*)
                (("1"
                  (INST-CP -10 "exc_set(m!1)" "Unit" "Unit"
                   "update_PState(s!1, catch)" "tau1!3" "tau1!1" "n1!1" "n2!1"
                   "m1!2" "m1!1")
                  (("1" (ASSERT)
                    (("1" (FLATTEN)
                      (("1" (REPLACE -11)
                        (("1" (REPLACE -15 :DIR RL)
                          (("1" (REPLACE -4)
                            (("1"
                              (INST -10 "inv!2" "v!3" "v!2" "tau1!3" "tau1!4"
                               "tau1!2" "m2!2" "m2!1" "m2!2 - 1" "m2!1 - 1")
                              (("1" (ASSERT)
                                (("1" (FLATTEN)
                                  (("1" (REPLACE -10)
                                    (("1" (REPLACE -11)
                                      (("1" (REPLACE -12)
                                        (("1" (REPLACE -7 :DIR RL)
                                          (("1" (REPLACE -20)
                                            (("1" (REPLACE -21 :DIR RL)
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|catch| CONST-DECL "PState" |State| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL))
   102 101 T NIL))
 (|IMP_SemanticsProofs_TCC4| 0
  (|IMP_SemanticsProofs_TCC4-1| NIL 3390796236 3403271992
   ("" (SKOSIMP*)
    (("" (EXPAND "execute_CaseJML")
      (("" (LIFT-IF)
        (("" (SPLIT -3)
          (("1" (FLATTEN)
            (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (ASSERT)
              (("2" (FLATTEN)
                (("2" (ASSERT)
                  (("2"
                    (INST -4
                     "IfThenElse(PROJ_1(car(branches!1)), PROJ_2(car(branches!1)),
                           CaseJML(cdr(branches!1)))"
                     "Unit" "Unit" "s!1" "s1!1" "s2!1" "n1!1" "n2!1" "n1!1 - 1"
                     "n2!1 - 1")
                    (("2" (ASSERT)
                      (("2" (SPLIT -4)
                        (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)
                         ("3" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|CaseJML| ADT-CONSTRUCTOR-DECL "[list[[BoolExpr, Stmt]] -> (CaseJML?)]"
     |Body_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|IfThenElse| ADT-CONSTRUCTOR-DECL
     "[[BoolExpr, Stmt, Stmt] -> (IfThenElse?)]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL))
   97 96 T NIL))
 (|IMP_SemanticsProofs_TCC5| 0
  (|IMP_SemanticsProofs_TCC5-1| NIL 3390796236 3403271993
   ("" (SKOSIMP*)
    (("" (EXPAND "execute_set")
      (("" (SKOSIMP*)
        ((""
          (INST -1 "e!1" "v!1" "v!2" "s!1" "tau!1" "tau!2" "n1!1" "n2!1"
           "n1!1 - 1" "n2!1 - 1")
          (("1" (ASSERT)
            (("1" (FLATTEN)
              (("1" (REPLACE -2)
                (("1" (REPLACE -3)
                  (("1" (REPLACE -1)
                    (("1" (ASSERT)
                      (("1" (REPLACE -6 :DIR RL) (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|n2!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|n1!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   34 35 T NIL))
 (|IMP_SemanticsProofs_TCC6| 0
  (|IMP_SemanticsProofs_TCC6-1| NIL 3397385547 3403271993
   ("" (SKOSIMP*)
    (("" (EXPAND "execute_assert")
      (("" (SPLIT -2)
        (("1" (FLATTEN)
          (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (ASSERT)
            (("2" (FLATTEN)
              (("2" (EXPAND "check_assertion")
                (("2" (SKOSIMP*)
                  (("2" (APPLY (REPEAT (INST? -5 :WHERE (-2 -7))))
                    (("1" (ASSERT)
                      (("1" (FLATTEN)
                        (("1" (REPLACE -5)
                          (("1" (REPLACE -7)
                            (("1" (LIFT-IF)
                              (("1" (ASSERT)
                                (("1" (SPLIT -3)
                                  (("1" (FLATTEN)
                                    (("1" (ASSERT)
                                      (("1" (SPLIT -2)
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (FLATTEN)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|n2!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|n1!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   65 66 T NIL))
 (|wf_state_vars_tricotomy| 0
  (|wf_state_vars_tricotomy-1| NIL 3395147174 3403271994
   ("" (SKOSIMP)
    (("" (EXPAND* "wf_state" "ext_declared_var_names")
      (("" (EXPAND* "wf_state" "wf_ghoststate" "id")
        (("" (EXPAND "union")
          (("" (EXPAND "member")
            (("" (FLATTEN)
              (("" (INST?) (("" (INST?) (("" (PROP) NIL NIL)) NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL))
   45 45 T SHOSTAK))
 (|wf_state_ghost_not_local_or_field| 0
  (|wf_state_ghost_not_local_or_field-1| NIL 3390125110 3403271996
   ("" (SKOSIMP)
    (("" (EXPAND "wf_state")
      ((""
        (EXPAND* "wf_state" "wf_ghoststate" "id" "is_ghost" "is_field"
         "is_local")
        (("" (FLATTEN)
          (("" (USE "wf_program_variables_disjoint")
            (("" (USE "wf_program_variables_not_reserved_words")
              (("" (ASSERT)
                (("" (FLATTEN)
                  (("" (CASE-REPLACE "vn!1 = This")
                    (("1" (HIDE -3 -4 -5)
                      (("1"
                        (EXPAND* "disjoint?" "intersection" "empty?" "member"
                         "declared_var_names")
                        (("1" (INST? -)
                          (("1" (SPLIT)
                            (("1" (INST? -3)
                              (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL))
                              NIL)
                             ("2" (EXPAND "reserved_words")
                              (("2" (FLATTEN) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE -1)
                      (("2"
                        (EXPAND* "disjoint?" "empty?" "intersection" "member")
                        (("2" (INST - "vn!1")
                          (("2" (INST - "vn!1")
                            (("2" (INST - "vn!1")
                              (("2" (INST - "vn!1")
                                (("2" (INST - "vn!1") (("2" (GROUND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|wf_program_variables_not_reserved_words| FORMULA-DECL NIL
     |WellFormedProgram| NIL)
    (|reserved_words| CONST-DECL "finite_set[Name]" |Program| NIL)
    (|disjoint?| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|wf_program_variables_disjoint| FORMULA-DECL NIL |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL))
   252 249 T SHOSTAK))
 (|wf_update_PState| 0
  (|wf_update_PState-2| NIL 3392375532 3403271997 ("" (GRIND) NIL NIL) PROVED
   ((|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   48 48 NIL NIL)
  (|wf_update_PState-1| NIL 3391156508 3392371192 ("" (GRIND) NIL NIL)
   UNCHECKED
   ((|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   468 420 T SHOSTAK))
 (|wf_update_GhostVars| 0
  (|wf_update_GhostVars-1| NIL 3391169512 3403271997
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_state")
      (("" (EXPAND "update_GhostVars")
        (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL))
   21 21 T SHOSTAK))
 (|wf_state_update_stack| 0
  (|wf_state_update_stack-1| NIL 3391162146 3403272001
   ("" (SKOSIMP*)
    (("" (EXPAND "update_stack")
      (("" (SPLIT 1)
        (("1" (SKOSIMP*)
          (("1" (LEMMA "wf_update_PState")
            (("1"
              (CASE "is_finite[[Name, Val[Name]]]
                        ({x: [Name, Val[Name]] |
                            EXISTS (l: LocalVarDecl[Name]):
                              lvds!1(l) AND
                               name(l) = PROJ_1(x) AND
                                default_value[Name](jtype(l)) = PROJ_2(x)})")
              (("1" (INST? -2 :WHERE 1)
                (("1" (INST -2 "p!1")
                  (("1" (ASSERT)
                    (("1" (HIDE 2)
                      (("1" (EXPAND "update_PState")
                        (("1" (EXPAND "o" 1 2)
                          (("1" (EXPAND "o")
                            (("1" (SKOSIMP*)
                              (("1" (USE "wf_state_update_local")
                                (("1"
                                  (CASE "wf_state(p!1)
                                (update_local(name(arg!1), param_val!1)
                                             (update_locals({x: [Name, Val[Name]]
                                                             |
                                                             EXISTS
                                                             (l: LocalVarDecl[Name]):
                                                             lvds!1(l)
                                                             AND
                                                             name(l) = PROJ_1(x)
                                                             AND
                                                             default_value(jtype(l))
                                                             =
                                                             PROJ_2(x)})
                                                           (pstate(s!1))))")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "wf_state" -1)
                                      (("1" (INST -1 "This")
                                        (("1" (FLATTEN) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (HIDE 2)
                                      (("2" (USE "wf_state_update_local")
                                        (("2"
                                          (CASE "wf_state(p!1)
                                    (update_locals({x: [Name, Val[Name]] |
                                                      EXISTS (l: LocalVarDecl[Name]):
                                                        lvds!1(l) AND
                                                         name(l) = PROJ_1(x) AND
                                                          default_value(jtype(l)) = PROJ_2(x)})
                                                  (pstate(s!1)))")
                                          (("1" (ASSERT)
                                            (("1" (TYPEPRED "arg!1")
                                              (("1" (EXPAND "wf_state" -2)
                                                (("1" (INST -2 "name(arg!1)")
                                                  (("1" (ASSERT)
                                                    (("1" (FLATTEN)
                                                      (("1"
                                                        (EXPAND "var_names")
                                                        (("1" (INST?) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (HIDE -1 -2)
                                              (("2"
                                                (USE "wf_state_update_locals")
                                                (("2" (ASSERT)
                                                  (("2" (HIDE 2 3)
                                                    (("2" (SKOSIMP*)
                                                      (("2"
                                                        (REPLACE -3 :DIR RL)
                                                        (("2"
                                                          (EXPAND
                                                           "default_value")
                                                          (("2" (HIDE -3)
                                                            (("2"
                                                              (EXPAND
                                                               "wf_state"
                                                               -4)
                                                              (("2"
                                                                (INST -4
                                                                 "name(l!1)")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (INST? -8)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "var_names")
                                                                          (("2"
                                                                            (INST?)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (TYPEPRED "lvds!1")
                (("2" (HIDE 2 -2)
                  (("2" (EXPAND "is_finite")
                    (("2" (SKOSIMP*)
                      (("2"
                        (INST 1 "N!1" "LAMBDA(x : ({x: [Name, Val[Name]] |
                               EXISTS (l: LocalVarDecl[Name]):
                                 lvds!1(l) AND
                                  name(l) = PROJ_1(x) AND
                                   default_value[Name](jtype(l)) = PROJ_2(x)})) : f!1(choose({l : LocalVarDecl[Name] |
                                 lvds!1(l) AND
                                  name(l) = PROJ_1(x) AND
                                   default_value[Name](jtype(l)) = PROJ_2(x)}))")
                        (("1" (EXPAND "injective?")
                          (("1" (SKOSIMP*)
                            (("1" (INST?)
                              (("1" (ASSERT)
                                (("1" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL))
                                NIL)
                               ("2" (REWRITE "nonempty_exists")
                                (("2" (TYPEPRED "x2!1")
                                  (("2" (SKOSIMP*)
                                    (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (REWRITE "nonempty_exists")
                                (("3" (TYPEPRED "x1!1")
                                  (("3" (SKOSIMP*)
                                    (("3" (INST?) (("3" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP*)
                          (("2" (TYPEPRED "x!1")
                            (("2" (REWRITE "nonempty_exists")
                              (("2" (SKOSIMP*)
                                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKOSIMP*) NIL NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|update_stack| CONST-DECL "FullState" |Semantics| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|default_value| CONST-DECL "(defined?)" |ValProp| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|wf_state_update_locals| FORMULA-DECL NIL |State| NIL)
    (|wf_state_update_local| FORMULA-DECL NIL |State| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|lvds!1| SKOLEM-CONST-DECL "finite_set[LocalVarDecl[Name]]"
     |AnnotatedProgramSemantics| NIL)
    (|update_locals| DEF-DECL "PState" |State| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|x!1| SKOLEM-CONST-DECL "({x: [Name, Val[Name]] |
    EXISTS (l: LocalVarDecl[Name]):
      lvds!1(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     |AnnotatedProgramSemantics| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |AnnotatedProgramSemantics|
     NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|x2!1| SKOLEM-CONST-DECL "({x: [Name, Val[Name]] |
    EXISTS (l: LocalVarDecl[Name]):
      lvds!1(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     |AnnotatedProgramSemantics| NIL)
    (|x1!1| SKOLEM-CONST-DECL "({x: [Name, Val[Name]] |
    EXISTS (l: LocalVarDecl[Name]):
      lvds!1(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     |AnnotatedProgramSemantics| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |AnnotatedProgramSemantics|
     NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |AnnotatedProgramSemantics|
     NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_update_PState| FORMULA-DECL NIL |AnnotatedProgramSemantics| NIL))
   351 350 T SHOSTAK))
 (|wf_initial_AP_state| 0
  (|wf_initial_AP_state-1| NIL 3390075578 3403272001
   ("" (SKOSIMP*)
    (("" (EXPAND "initial_AP_state")
      (("" (EXPAND "wf_state")
        (("" (SPLIT 1)
          (("1" (LEMMA "wf_initial_Program_state")
            (("1" (INST -1 "p!1" "this_val!1") (("1" (ASSERT) NIL NIL)) NIL))
            NIL)
           ("2" (USE "wf_initial_ghost_state")
            (("1" (EXPAND "id") (("1" (PROPAX) NIL NIL)) NIL)
             ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|initial_AP_state| CONST-DECL "APState" |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|wf_initial_Program_state| FORMULA-DECL NIL |State| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|wf_initial_ghost_state| FORMULA-DECL NIL |SemanticsJML| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bottom?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|get_GhostDecl| CONST-DECL "lift[FieldDecl]" |ProgramFunctions| NIL)
    (|p!1| SKOLEM-CONST-DECL "Program[Name]" |AnnotatedProgramSemantics| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|Bottom| ADT-CONSTRUCTOR-DECL "(Bottom?)" |Val_adt| NIL)
    (|Bottom?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)
    (|initial_Program_state| CONST-DECL "PState" |State| NIL)
    (|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL))
   29 30 T SHOSTAK))
 (|derive_yields_wf_state_AP| 0
  (|derive_yields_wf_state_AP-1| NIL 3401776689 3403272860
   ("" (LEMMA "wf_induction[nat, LAMBDA(i, j : nat) : i < j]")
    (("1"
      (INST -1 "LAMBDA(n : nat) : FORALL (p: Program, b: (wf_Body(p)), v: Val)
                 (sigma1, sigma2: APState):
            wf_Program(p) IMPLIES
             wf_state(p)(sigma1) IMPLIES
              derive(p)(b, sigma1, v, sigma2)(n) IMPLIES wf_state(p)(sigma2)")
      (("1" (SPLIT -1)
        (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (HIDE 2)
          (("2" (SKOSIMP*)
            (("2" (EXPAND "derive" -4)
              (("2" (SPLIT -4)
                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (ASSERT)
                    (("2" (LIFT-IF)
                      (("2" (LEMMA "wf_Body_preserved_by_proper_subterm")
                        (("2" (INST -1 "p!1" "b!1" _)
                          (("2"
                            (APPLY
                             (BRANCH (SPLIT -2) ((THEN (FLATTEN) (ASSERT)))))
                            (("2"
                              (APPLY
                               (BRANCH (SPLIT -1) ((THEN (FLATTEN) (ASSERT)))))
                              (("1" (SKOSIMP*)
                                (("1" (INST-CP -7 "m2!1")
                                  (("1" (INST -7 "m1!1")
                                    (("1" (ASSERT)
                                      (("1"
                                        (APPLY (REPEAT (INST? -7 :WHERE -3)))
                                        (("1"
                                          (APPLY (REPEAT (INST? -8 :WHERE -4)))
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (INST?)
                                            (("2" (ASSERT)
                                              (("2" (EXPAND "<<")
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (INST?)
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "<<")
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2"
                                (APPLY
                                 (BRANCH (SPLIT -1)
                                  ((THEN (FLATTEN) (ASSERT)))))
                                (("2"
                                  (APPLY
                                   (BRANCH (SPLIT -1)
                                    ((THEN (FLATTEN) (ASSERT)))))
                                  (("2"
                                    (APPLY
                                     (BRANCH (SPLIT -1)
                                      ((THEN (FLATTEN) (ASSERT)))))
                                    (("2"
                                      (APPLY
                                       (BRANCH (SPLIT -1)
                                        ((THEN (FLATTEN) (ASSERT)))))
                                      (("1" (SKOSIMP*)
                                        (("1" (INST -6 "x!1 - 1")
                                          (("1" (ASSERT)
                                            (("1"
                                              (APPLY
                                               (REPEAT (INST? -6 :WHERE -3)))
                                              (("1" (ASSERT) NIL NIL)
                                               ("2"
                                                (APPLY
                                                 (THEN (INST?) (ASSERT)
                                                  (EXPAND "<<")))
                                                NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (APPLY
                                         (BRANCH (SPLIT -1)
                                          ((THEN (FLATTEN) (ASSERT)))))
                                        (("1" (SKOSIMP*)
                                          (("1" (INST-CP -7 "m2!1")
                                            (("1" (INST -7 "m1!1")
                                              (("1" (ASSERT)
                                                (("1"
                                                  (APPLY
                                                   (REPEAT
                                                    (INST? -7 :WHERE -3)))
                                                  (("1"
                                                    (APPLY
                                                     (REPEAT
                                                      (INST? -8 :WHERE -4)))
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2"
                                                      (APPLY
                                                       (THEN (INST?) (ASSERT)
                                                        (EXPAND "<<")))
                                                      NIL NIL))
                                                    NIL)
                                                   ("2"
                                                    (APPLY
                                                     (THEN (INST?) (ASSERT)
                                                      (EXPAND "<<")))
                                                    NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2"
                                          (APPLY
                                           (BRANCH (SPLIT -1)
                                            ((THEN (FLATTEN) (ASSERT)))))
                                          (("1" (SKOSIMP*)
                                            (("1" (INST-CP -7 "m2!1")
                                              (("1" (INST -7 "m1!1")
                                                (("1" (ASSERT)
                                                  (("1"
                                                    (APPLY
                                                     (REPEAT
                                                      (INST? -7 :WHERE -3)))
                                                    (("1"
                                                      (APPLY
                                                       (REPEAT
                                                        (INST? -8 :WHERE -4)))
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2"
                                                        (APPLY
                                                         (THEN (INST?) (ASSERT)
                                                          (EXPAND "<<")))
                                                        NIL NIL))
                                                      NIL)
                                                     ("2"
                                                      (APPLY
                                                       (THEN (INST?) (ASSERT)
                                                        (EXPAND "<<")))
                                                      NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2"
                                            (APPLY
                                             (BRANCH (SPLIT -1)
                                              ((THEN (FLATTEN) (ASSERT)))))
                                            (("2"
                                              (APPLY
                                               (BRANCH (SPLIT -1)
                                                ((THEN (FLATTEN) (ASSERT)))))
                                              (("2"
                                                (APPLY
                                                 (BRANCH (SPLIT -1)
                                                  ((THEN (FLATTEN) (ASSERT)))))
                                                (("2"
                                                  (APPLY
                                                   (BRANCH (SPLIT -1)
                                                    ((THEN (FLATTEN)
                                                      (ASSERT)))))
                                                  (("1" (SKOSIMP*)
                                                    (("1" (INST -6 "x!1 - 1")
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (APPLY
                                                           (REPEAT
                                                            (INST? -6 :WHERE
                                                             -3)))
                                                          (("1" (ASSERT)
                                                            (("1" (REPLACE -4)
                                                              (("1" (LIFT-IF)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (SPLIT 13)
                                                                    (("1"
                                                                      (PROPAX)
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (SKOSIMP*)
                                                                      (("2"
                                                                        (USE
                                                                         "wf_update_PState")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (SKOSIMP*)
                                                                            (("2"
                                                                              (EXPAND
                                                                               "update_PState")
                                                                              (("2"
                                                                                (USE
                                                                                 "wf_state_update")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (USE
                                                                                   "derive_bottom_iff_exception_step")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "defined?")
                                                                                      (("2"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (APPLY
                                                             (THEN (INST?)
                                                              (ASSERT)
                                                              (EXPAND "<<")))
                                                            NIL NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (APPLY
                                                     (BRANCH (SPLIT -1)
                                                      ((THEN (FLATTEN)
                                                        (ASSERT)))))
                                                    (("1" (INST -5 "x!1 - 1")
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (APPLY
                                                           (REPEAT
                                                            (INST? -5 :WHERE
                                                             -3)))
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (APPLY
                                                             (THEN (INST?)
                                                              (ASSERT)
                                                              (EXPAND "<<")))
                                                            NIL NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2"
                                                      (APPLY
                                                       (BRANCH (SPLIT -1)
                                                        ((THEN (FLATTEN)
                                                          (ASSERT)))))
                                                      (("1" (SKOSIMP*)
                                                        (("1"
                                                          (INST-CP -6 "m2!1")
                                                          (("1"
                                                            (INST -6 "m1!1")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (EXPAND
                                                                 "check_for_exception")
                                                                (("1"
                                                                  (APPLY
                                                                   (REPEAT
                                                                    (INST? -6
                                                                     :WHERE
                                                                     -3)))
                                                                  (("1"
                                                                    (APPLY
                                                                     (REPEAT
                                                                      (INST? -7
                                                                       :WHERE
                                                                       -4)))
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (SPLIT
                                                                         -4)
                                                                        (("1"
                                                                          (FLATTEN)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (FLATTEN)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (SKOSIMP*)
                                                                      (("2"
                                                                        (APPLY
                                                                         (THEN
                                                                          (INST?)
                                                                          (ASSERT)
                                                                          (EXPAND
                                                                           "<<")))
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("3"
                                                                      (SKOSIMP*)
                                                                      (("3"
                                                                        (APPLY
                                                                         (THEN
                                                                          (INST?)
                                                                          (ASSERT)
                                                                          (EXPAND
                                                                           "<<")))
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("4"
                                                                      (USE
                                                                       "derive_boolean_expr_type")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (FLATTEN)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (EXPAND
                                                                         "id")
                                                                        (("2"
                                                                          (EXPAND
                                                                           "wf_BoolExpr")
                                                                          (("2"
                                                                            (APPLY
                                                                             (THEN
                                                                              (INST?)
                                                                              (ASSERT)
                                                                              (EXPAND
                                                                               "<<")))
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (APPLY
                                                                     (THEN
                                                                      (INST?)
                                                                      (ASSERT)
                                                                      (EXPAND
                                                                       "<<")))
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (APPLY
                                                         (BRANCH (SPLIT -1)
                                                          ((THEN (FLATTEN)
                                                            (ASSERT)))))
                                                        (("1" (SKOSIMP*)
                                                          (("1"
                                                            (INST-CP -16
                                                             "m5!1")
                                                            (("1"
                                                              (INST-CP -16
                                                               "m4!1")
                                                              (("1"
                                                                (INST-CP -16
                                                                 "m2!1")
                                                                (("1"
                                                                  (INST-CP -16
                                                                   "m1!1")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (APPLY
                                                                       (REPEAT
                                                                        (INST?
                                                                         -17
                                                                         :WHERE
                                                                         -3)))
                                                                      (("1"
                                                                        (APPLY
                                                                         (REPEAT
                                                                          (INST?
                                                                           -18
                                                                           :WHERE
                                                                           -4)))
                                                                        (("1"
                                                                          (APPLY
                                                                           (REPEAT
                                                                            (INST?
                                                                             -19
                                                                             :WHERE
                                                                             -10)))
                                                                          (("1"
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -20
                                                                               :WHERE
                                                                               -11)))
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "lookup_mthd")
                                                                                (("1"
                                                                                  (LIFT-IF
                                                                                   -6)
                                                                                  (("1"
                                                                                    (AUTO-REWRITE
                                                                                     "id")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (SPLIT
                                                                                         -6)
                                                                                        (("1"
                                                                                          (FLATTEN)
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            (("1"
                                                                                              (CASE
                                                                                                  "wf_state(p!1)(tau3!1)")
                                                                                              (("1"
                                                                                                (CASE
                                                                                                    "wf_state(p!1)(tau4!1)")
                                                                                                (("1"
                                                                                                  (USE
                                                                                                   "wf_state_arg_is_local"
                                                                                                   ("s"
                                                                                                    "pstate(tau4!1)"))
                                                                                                  (("1"
                                                                                                    (USE
                                                                                                     "get_class_in_classes")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (EXPAND
                                                                                                         "method_names")
                                                                                                        (("1"
                                                                                                          (SKOSIMP*)
                                                                                                          (("1"
                                                                                                            (CASE-REPLACE
                                                                                                             "m!1 = md!1")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (SPLIT
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (CASE
                                                                                                                      "wf_state(p!1)(tau5!1)")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    (("1"
                                                                                                                      (CASE
                                                                                                                          "wf_state(p!1)(tau7!1)")
                                                                                                                      (("1"
                                                                                                                        (CASE
                                                                                                                            "wf_state(p!1)(tau8!1)")
                                                                                                                        (("1"
                                                                                                                          (REPLACE
                                                                                                                           -25)
                                                                                                                          (("1"
                                                                                                                            (LEMMA
                                                                                                                             "wf_update_PState")
                                                                                                                            (("1"
                                                                                                                              (INST?
                                                                                                                               -1
                                                                                                                               :WHERE
                                                                                                                               16)
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                (("1"
                                                                                                                                  (INST
                                                                                                                                   -1
                                                                                                                                   "p!1")
                                                                                                                                  (("1"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("1"
                                                                                                                                      (SKOSIMP*)
                                                                                                                                      (("1"
                                                                                                                                        (EXPAND
                                                                                                                                         "update_PState")
                                                                                                                                        (("1"
                                                                                                                                          (USE
                                                                                                                                           "wf_state_update_local")
                                                                                                                                          (("1"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("1"
                                                                                                                                              (USE
                                                                                                                                               "wf_state_arg_is_local")
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                NIL
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (EXPAND*
                                                                                                                                             "is_local"
                                                                                                                                             "lookup_local"
                                                                                                                                             "defined?")
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              NIL
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (SPLIT
                                                                                                                           -22)
                                                                                                                          (("1"
                                                                                                                            (FLATTEN)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (EXPAND
                                                                                                                                 "on_method_exit_normal")
                                                                                                                                (("1"
                                                                                                                                  (SKOSIMP*)
                                                                                                                                  (("1"
                                                                                                                                    (EXPAND
                                                                                                                                     "check_assertion")
                                                                                                                                    (("1"
                                                                                                                                      (SKOSIMP*)
                                                                                                                                      (("1"
                                                                                                                                        (INST-CP
                                                                                                                                         -36
                                                                                                                                         "m3!2 - 1")
                                                                                                                                        (("1"
                                                                                                                                          (INST-CP
                                                                                                                                           -36
                                                                                                                                           "m2!2 - 1")
                                                                                                                                          (("1"
                                                                                                                                            (INST
                                                                                                                                             -36
                                                                                                                                             "m1!2")
                                                                                                                                            (("1"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("1"
                                                                                                                                                (APPLY
                                                                                                                                                 (REPEAT
                                                                                                                                                  (INST?
                                                                                                                                                   -36
                                                                                                                                                   :WHERE
                                                                                                                                                   -3)))
                                                                                                                                                (("1"
                                                                                                                                                  (ASSERT)
                                                                                                                                                  (("1"
                                                                                                                                                    (APPLY
                                                                                                                                                     (REPEAT
                                                                                                                                                      (INST?
                                                                                                                                                       -37
                                                                                                                                                       :WHERE
                                                                                                                                                       -6)))
                                                                                                                                                    (("1"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("1"
                                                                                                                                                        (APPLY
                                                                                                                                                         (REPEAT
                                                                                                                                                          (INST?
                                                                                                                                                           -38
                                                                                                                                                           :WHERE
                                                                                                                                                           -9)))
                                                                                                                                                        (("1"
                                                                                                                                                          (ASSERT)
                                                                                                                                                          (("1"
                                                                                                                                                            (SPLIT
                                                                                                                                                             -38)
                                                                                                                                                            (("1"
                                                                                                                                                              (REPLACE
                                                                                                                                                               -11)
                                                                                                                                                              (("1"
                                                                                                                                                                (LIFT-IF)
                                                                                                                                                                (("1"
                                                                                                                                                                  (ASSERT)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (APPLY
                                                                                                                                                                     (THEN
                                                                                                                                                                      (SPLIT
                                                                                                                                                                       1)
                                                                                                                                                                      (SKOSIMP*)
                                                                                                                                                                      (SPLIT
                                                                                                                                                                       1)
                                                                                                                                                                      (SKOSIMP*)))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (APPLY
                                                                                                                                                                       (THEN
                                                                                                                                                                        (USE
                                                                                                                                                                         "wf_update_PState")
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        (SKOSIMP*)
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "update_PState")))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (APPLY
                                                                                                                                                                         (THEN
                                                                                                                                                                          (USE
                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                          (ASSERT)))
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL)
                                                                                                                                                             ("2"
                                                                                                                                                              (REPLACE
                                                                                                                                                               -7)
                                                                                                                                                              (("2"
                                                                                                                                                                (LIFT-IF)
                                                                                                                                                                (("2"
                                                                                                                                                                  (ASSERT)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (APPLY
                                                                                                                                                                     (THEN
                                                                                                                                                                      (SPLIT
                                                                                                                                                                       1)
                                                                                                                                                                      (SKOSIMP*)
                                                                                                                                                                      (SPLIT
                                                                                                                                                                       1)
                                                                                                                                                                      (SKOSIMP*)))
                                                                                                                                                                    (("2"
                                                                                                                                                                      (APPLY
                                                                                                                                                                       (THEN
                                                                                                                                                                        (USE
                                                                                                                                                                         "wf_update_PState")
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        (SKOSIMP*)
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "update_PState")))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (APPLY
                                                                                                                                                                         (THEN
                                                                                                                                                                          (USE
                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                          (ASSERT)))
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL)
                                                                                                                                                         ("2"
                                                                                                                                                          (APPLY
                                                                                                                                                           (THEN
                                                                                                                                                            (TYPEPRED
                                                                                                                                                             "md!1")
                                                                                                                                                            (EXPAND
                                                                                                                                                             "wf_Method")
                                                                                                                                                            (ASSERT)))
                                                                                                                                                          NIL
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL)
                                                                                                                                                     ("2"
                                                                                                                                                      (APPLY
                                                                                                                                                       (THEN
                                                                                                                                                        (TYPEPRED
                                                                                                                                                         "p!1")
                                                                                                                                                        (EXPAND*
                                                                                                                                                         "wf_Program"
                                                                                                                                                         "wf_Classes"
                                                                                                                                                         "wf_Class"
                                                                                                                                                         "lookup_inv")
                                                                                                                                                        (FLATTEN)
                                                                                                                                                        (INST
                                                                                                                                                         -4
                                                                                                                                                         "down(get_class(p!1)(a!1))")
                                                                                                                                                        (ASSERT)))
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL)
                                                                                                                                                 ("2"
                                                                                                                                                  (APPLY
                                                                                                                                                   (THEN
                                                                                                                                                    (TYPEPRED
                                                                                                                                                     "md!1")
                                                                                                                                                    (EXPAND
                                                                                                                                                     "wf_Method")
                                                                                                                                                    (ASSERT)))
                                                                                                                                                  NIL
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL)
                                                                                                                                         ("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (FLATTEN)
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "on_method_exit_exceptional")
                                                                                                                              (("2"
                                                                                                                                (ASSERT)
                                                                                                                                (("2"
                                                                                                                                  (SKOSIMP*)
                                                                                                                                  (("2"
                                                                                                                                    (EXPAND
                                                                                                                                     "check_assertion")
                                                                                                                                    (("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (SKOSIMP*)
                                                                                                                                        (("2"
                                                                                                                                          (INST-CP
                                                                                                                                           -33
                                                                                                                                           "m2!2 - 1")
                                                                                                                                          (("1"
                                                                                                                                            (INST
                                                                                                                                             -33
                                                                                                                                             "m1!2")
                                                                                                                                            (("1"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("1"
                                                                                                                                                (APPLY
                                                                                                                                                 (REPEAT
                                                                                                                                                  (INST?
                                                                                                                                                   -33
                                                                                                                                                   :WHERE
                                                                                                                                                   -2)))
                                                                                                                                                (("1"
                                                                                                                                                  (APPLY
                                                                                                                                                   (REPEAT
                                                                                                                                                    (INST?
                                                                                                                                                     -34
                                                                                                                                                     :WHERE
                                                                                                                                                     -5)))
                                                                                                                                                  (("1"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    (("1"
                                                                                                                                                      (SPLIT
                                                                                                                                                       -33)
                                                                                                                                                      (("1"
                                                                                                                                                        (ASSERT)
                                                                                                                                                        (("1"
                                                                                                                                                          (CASE
                                                                                                                                                              "wf_state(p!1)(tau2!2)")
                                                                                                                                                          (("1"
                                                                                                                                                            (REPLACE
                                                                                                                                                             -9)
                                                                                                                                                            (("1"
                                                                                                                                                              (LIFT-IF)
                                                                                                                                                              (("1"
                                                                                                                                                                (ASSERT)
                                                                                                                                                                (("1"
                                                                                                                                                                  (SPLIT
                                                                                                                                                                   2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (PROPAX)
                                                                                                                                                                    NIL
                                                                                                                                                                    NIL)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (SKOSIMP*)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (APPLY
                                                                                                                                                                       (THEN
                                                                                                                                                                        (USE
                                                                                                                                                                         "wf_update_PState")
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        (SKOSIMP*)
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "update_PState")))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (APPLY
                                                                                                                                                                         (THEN
                                                                                                                                                                          (USE
                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                          (ASSERT)))
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL)
                                                                                                                                                           ("2"
                                                                                                                                                            (REPLACE
                                                                                                                                                             -7)
                                                                                                                                                            (("2"
                                                                                                                                                              (LIFT-IF)
                                                                                                                                                              (("2"
                                                                                                                                                                (ASSERT)
                                                                                                                                                                (("2"
                                                                                                                                                                  (APPLY
                                                                                                                                                                   (THEN
                                                                                                                                                                    (SPLIT
                                                                                                                                                                     1)
                                                                                                                                                                    (SKOSIMP*)
                                                                                                                                                                    (SPLIT
                                                                                                                                                                     1)
                                                                                                                                                                    (SKOSIMP*)))
                                                                                                                                                                  (("2"
                                                                                                                                                                    (APPLY
                                                                                                                                                                     (THEN
                                                                                                                                                                      (USE
                                                                                                                                                                       "wf_update_PState")
                                                                                                                                                                      (ASSERT)
                                                                                                                                                                      (SKOSIMP*)
                                                                                                                                                                      (EXPAND
                                                                                                                                                                       "update_PState")))
                                                                                                                                                                    (("2"
                                                                                                                                                                      (APPLY
                                                                                                                                                                       (THEN
                                                                                                                                                                        (USE
                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                        (ASSERT)))
                                                                                                                                                                      NIL
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL)
                                                                                                                                                       ("2"
                                                                                                                                                        (APPLY
                                                                                                                                                         (THEN
                                                                                                                                                          (USE
                                                                                                                                                           "wf_update_PState")
                                                                                                                                                          (ASSERT)
                                                                                                                                                          (SKOSIMP*)
                                                                                                                                                          (EXPAND
                                                                                                                                                           "update_PState")))
                                                                                                                                                        (("2"
                                                                                                                                                          (APPLY
                                                                                                                                                           (THEN
                                                                                                                                                            (USE
                                                                                                                                                             "wf_state_catch")
                                                                                                                                                            (ASSERT)))
                                                                                                                                                          NIL
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (APPLY
                                                                                                                                                     (THEN
                                                                                                                                                      (TYPEPRED
                                                                                                                                                       "p!1")
                                                                                                                                                      (EXPAND*
                                                                                                                                                       "wf_Program"
                                                                                                                                                       "wf_Classes"
                                                                                                                                                       "wf_Class"
                                                                                                                                                       "lookup_inv")
                                                                                                                                                      (FLATTEN)
                                                                                                                                                      (INST
                                                                                                                                                       -4
                                                                                                                                                       "down(get_class(p!1)(a!1))")
                                                                                                                                                      (ASSERT)))
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL)
                                                                                                                                                 ("2"
                                                                                                                                                  (APPLY
                                                                                                                                                   (THEN
                                                                                                                                                    (TYPEPRED
                                                                                                                                                     "md!1")
                                                                                                                                                    (EXPAND
                                                                                                                                                     "wf_Method")
                                                                                                                                                    (ASSERT)))
                                                                                                                                                  NIL
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (SPLIT
                                                                                                                         -20)
                                                                                                                        (("1"
                                                                                                                          (FLATTEN)
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (FLATTEN)
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (REPLACE
                                                                                                                     -17)
                                                                                                                    (("2"
                                                                                                                      (USE
                                                                                                                       "wf_state_update_stack")
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        (("1"
                                                                                                                          (SKOSIMP*)
                                                                                                                          (("1"
                                                                                                                            (EXPAND
                                                                                                                             "getLocalDecls")
                                                                                                                            (("1"
                                                                                                                              (INST
                                                                                                                               1
                                                                                                                               "down(get_class(p!1)(a!1))")
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "getLocalDecls")
                                                                                                                                  (("1"
                                                                                                                                    (INST
                                                                                                                                     1
                                                                                                                                     "md!1")
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (EXPAND
                                                                                                                         "getLocalDecls")
                                                                                                                        (("2"
                                                                                                                          (INST
                                                                                                                           1
                                                                                                                           "down(get_class(p!1)(a!1))")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "getLocalDecls")
                                                                                                                              (("2"
                                                                                                                                (INST?)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (EXPAND
                                                                                                                   "wf_state"
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (FLATTEN)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (TYPEPRED
                                                                                                               "choose({m: Method[Name] |
                 classes(p!1)(down(get_class(p!1)(a!1))) AND
                  methods(down(get_class(p!1)(a!1)))(m) AND
                   name(m) = name(b!1)})")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (REPLACE
                                                                                                                   -11
                                                                                                                   :DIR RL)
                                                                                                                  (("1"
                                                                                                                    (TYPEPRED
                                                                                                                     "p!1")
                                                                                                                    (("1"
                                                                                                                      (EXPAND*
                                                                                                                       "wf_Program"
                                                                                                                       "wf_Classes"
                                                                                                                       "wf_Class")
                                                                                                                      (("1"
                                                                                                                        (FLATTEN)
                                                                                                                        (("1"
                                                                                                                          (INST
                                                                                                                           -4
                                                                                                                           "down(get_class(p!1)(a!1))")
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            (("1"
                                                                                                                              (FLATTEN)
                                                                                                                              (("1"
                                                                                                                                (INST
                                                                                                                                 -4
                                                                                                                                 "m!1"
                                                                                                                                 "md!1")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  NIL
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (REWRITE
                                                                                                                 "nonempty_exists")
                                                                                                                (("2"
                                                                                                                  (INST?)
                                                                                                                  (("2"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (EXPAND
                                                                                                   "on_method_entry")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "check_assertion")
                                                                                                    (("2"
                                                                                                      (SPLIT
                                                                                                       -10)
                                                                                                      (("1"
                                                                                                        (FLATTEN)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (FLATTEN)
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (SKOSIMP*)
                                                                                                            (("2"
                                                                                                              (INST-CP
                                                                                                               -28
                                                                                                               "m3!2")
                                                                                                              (("2"
                                                                                                                (INST-CP
                                                                                                                 -28
                                                                                                                 "m2!2 - 1")
                                                                                                                (("1"
                                                                                                                  (INST
                                                                                                                   -28
                                                                                                                   "m1!2 - 1")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    (("1"
                                                                                                                      (APPLY
                                                                                                                       (REPEAT
                                                                                                                        (INST?
                                                                                                                         -28
                                                                                                                         :WHERE
                                                                                                                         -4)))
                                                                                                                      (("1"
                                                                                                                        (APPLY
                                                                                                                         (REPEAT
                                                                                                                          (INST?
                                                                                                                           -29
                                                                                                                           :WHERE
                                                                                                                           -7)))
                                                                                                                        (("1"
                                                                                                                          (APPLY
                                                                                                                           (REPEAT
                                                                                                                            (INST?
                                                                                                                             -30
                                                                                                                             :WHERE
                                                                                                                             -9)))
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            (("1"
                                                                                                                              (CASE
                                                                                                                                  "wf_state(p!1)(tau1!2)")
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                (("1"
                                                                                                                                  (REPLACE
                                                                                                                                   -9)
                                                                                                                                  (("1"
                                                                                                                                    (LIFT-IF)
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      (("1"
                                                                                                                                        (APPLY
                                                                                                                                         (THEN
                                                                                                                                          (SPLIT
                                                                                                                                           18)
                                                                                                                                          (SKOSIMP*)
                                                                                                                                          (SPLIT
                                                                                                                                           1)
                                                                                                                                          (SKOSIMP*)))
                                                                                                                                        (("1"
                                                                                                                                          (APPLY
                                                                                                                                           (THEN
                                                                                                                                            (USE
                                                                                                                                             "wf_update_PState")
                                                                                                                                            (ASSERT)
                                                                                                                                            (SKOSIMP*)
                                                                                                                                            (EXPAND
                                                                                                                                             "update_PState")))
                                                                                                                                          (("1"
                                                                                                                                            (APPLY
                                                                                                                                             (THEN
                                                                                                                                              (USE
                                                                                                                                               "wf_state_raise")
                                                                                                                                              (ASSERT)))
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL)
                                                                                                                               ("2"
                                                                                                                                (REPLACE
                                                                                                                                 -5)
                                                                                                                                (("2"
                                                                                                                                  (LIFT-IF)
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (APPLY
                                                                                                                                       (THEN
                                                                                                                                        (SPLIT
                                                                                                                                         1)
                                                                                                                                        (SKOSIMP*)
                                                                                                                                        (SPLIT
                                                                                                                                         1)
                                                                                                                                        (SKOSIMP*)))
                                                                                                                                      (("2"
                                                                                                                                        (APPLY
                                                                                                                                         (THEN
                                                                                                                                          (USE
                                                                                                                                           "wf_update_PState")
                                                                                                                                          (ASSERT)
                                                                                                                                          (SKOSIMP*)
                                                                                                                                          (EXPAND
                                                                                                                                           "update_PState")))
                                                                                                                                        (("2"
                                                                                                                                          (APPLY
                                                                                                                                           (THEN
                                                                                                                                            (USE
                                                                                                                                             "wf_state_raise")
                                                                                                                                            (ASSERT)))
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (APPLY
                                                                                                                             (THEN
                                                                                                                              (TYPEPRED
                                                                                                                               "md!1")
                                                                                                                              (EXPAND
                                                                                                                               "wf_Method")
                                                                                                                              (ASSERT)))
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (APPLY
                                                                                                                           (THEN
                                                                                                                            (TYPEPRED
                                                                                                                             "md!1")
                                                                                                                            (EXPAND
                                                                                                                             "wf_Method")
                                                                                                                            (ASSERT)))
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (APPLY
                                                                                                                         (THEN
                                                                                                                          (TYPEPRED
                                                                                                                           "p!1")
                                                                                                                          (EXPAND*
                                                                                                                           "wf_Program"
                                                                                                                           "wf_Classes"
                                                                                                                           "wf_Class"
                                                                                                                           "lookup_inv")
                                                                                                                          (FLATTEN)
                                                                                                                          (INST
                                                                                                                           -4
                                                                                                                           "down(get_class(p!1)(a!1))")
                                                                                                                          (ASSERT)))
                                                                                                                        (("2"
                                                                                                                          (USE
                                                                                                                           "get_class_in_classes")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (REPLACE
                                                                                                 -8)
                                                                                                (("2"
                                                                                                  (LIFT-IF)
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    (("2"
                                                                                                      (SPLIT
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (SKOSIMP*)
                                                                                                        (("1"
                                                                                                          (APPLY
                                                                                                           (THEN
                                                                                                            (USE
                                                                                                             "wf_update_PState")
                                                                                                            (ASSERT)
                                                                                                            (SKOSIMP*)
                                                                                                            (EXPAND
                                                                                                             "update_PState")))
                                                                                                          (("1"
                                                                                                            (APPLY
                                                                                                             (THEN
                                                                                                              (USE
                                                                                                               "wf_state_raise")
                                                                                                              (ASSERT)))
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (PROPAX)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (PROPAX)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (APPLY
                                                                               (THEN
                                                                                (TYPEPRED
                                                                                 "md!1")
                                                                                (EXPAND
                                                                                 "wf_Method")
                                                                                (ASSERT)))
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "id")
                                                                                (("2"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (APPLY
                                                                               (THEN
                                                                                (TYPEPRED
                                                                                 "md!1")
                                                                                (EXPAND*
                                                                                 "wf_Method"
                                                                                 "id")
                                                                                (ASSERT)))
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (APPLY
                                                                           (THEN
                                                                            (INST?
                                                                             -15)
                                                                            (ASSERT)
                                                                            (EXPAND
                                                                             "<<")))
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (APPLY
                                                                         (THEN
                                                                          (INST?
                                                                           -15)
                                                                          (ASSERT)
                                                                          (EXPAND
                                                                           "<<")))
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (APPLY
                                                           (BRANCH (SPLIT -1)
                                                            ((THEN (FLATTEN)
                                                              (ASSERT)))))
                                                          (("1"
                                                            (INST -5 "x!1 - 1")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (APPLY
                                                                 (REPEAT
                                                                  (INST? -5
                                                                   :WHERE -3)))
                                                                (("1" (ASSERT)
                                                                  NIL NIL)
                                                                 ("2"
                                                                  (APPLY
                                                                   (THEN
                                                                    (INST?)
                                                                    (ASSERT)
                                                                    (EXPAND
                                                                     "<<")))
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (APPLY
                                                             (BRANCH (SPLIT -1)
                                                              ((THEN (FLATTEN)
                                                                (ASSERT)))))
                                                            (("1"
                                                              (INST -5
                                                               "x!1 - 1")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (APPLY
                                                                   (REPEAT
                                                                    (INST? -5
                                                                     :WHERE
                                                                     -3)))
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (APPLY
                                                                     (THEN
                                                                      (INST?)
                                                                      (ASSERT)
                                                                      (EXPAND
                                                                       "<<")))
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (APPLY
                                                               (BRANCH
                                                                (SPLIT -1)
                                                                ((THEN
                                                                  (FLATTEN)
                                                                  (ASSERT)))))
                                                              (("1"
                                                                (AUTO-REWRITE
                                                                 "id")
                                                                (("1"
                                                                  (CASE
                                                                      " FORALL (branches: (wf_Branches(id(p!1))), s1, s2: APState, x: nat):
        execute_CaseJML(p!1, branches, s1, s2, x,
                        LAMBDA (k: upto(x))(p: Program)
                               (b: (wf_Body(id(p))), sigma1: APState,
                                v: Val[Name], sigma2: APState)
                               (m: below(k)):
                          derive(p)(b, sigma1, v, sigma2)(m))
         IMPLIES
         wf_state(p!1)(s1) IMPLIES
          (FORALL (y: nat):
             y < x IMPLIES
              (FORALL (p: Program, b: (wf_Body(id(p))), v: Val)
                      (sigma1, sigma2: APState):
                 wf_state(p)(sigma1) IMPLIES
                  derive(p)(b, sigma1, v, sigma2)(y) IMPLIES
                   wf_state(p)(sigma2)))
           IMPLIES wf_state(p!1)(s2)")
                                                                  (("1" (INST?)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (SKOSIMP*)
                                                                        (("1"
                                                                          (INST?
                                                                           -9)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (APPLY
                                                                               (REPEAT
                                                                                (INST?
                                                                                 -9
                                                                                 :WHERE
                                                                                 -3)))
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (TYPEPRED
                                                                                 "b!2")
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (HIDE-ALL-BUT
                                                                     (1 -7))
                                                                    (("2"
                                                                      (INDUCT
                                                                       "branches")
                                                                      (("1"
                                                                        (TYPEPRED
                                                                         "branches!1")
                                                                        (("1"
                                                                          (PROPAX)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (SKOSIMP*)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "execute_CaseJML")
                                                                          (("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("3"
                                                                        (SKOSIMP*)
                                                                        (("3"
                                                                          (EXPAND
                                                                           "wf_Branches")
                                                                          (("3"
                                                                            (EXPAND
                                                                             "every"
                                                                             -2)
                                                                            (("3"
                                                                              (FLATTEN)
                                                                              (("3"
                                                                                (ASSERT)
                                                                                (("3"
                                                                                  (EXPAND
                                                                                   "execute_CaseJML"
                                                                                   -5)
                                                                                  (("3"
                                                                                    (FLATTEN)
                                                                                    (("3"
                                                                                      (REWRITE
                                                                                       "derive"
                                                                                       -6)
                                                                                      (("3"
                                                                                        (SPLIT
                                                                                         -6)
                                                                                        (("1"
                                                                                          (PROPAX)
                                                                                          NIL
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (FLATTEN)
                                                                                          (("2"
                                                                                            (SKOSIMP*)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "check_for_exception")
                                                                                              (("2"
                                                                                                (SPLIT
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (PROPAX)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (FLATTEN)
                                                                                                  (("2"
                                                                                                    (LIFT-IF)
                                                                                                    (("2"
                                                                                                      (CASE
                                                                                                          "wf_state(p!1)(tau!1)")
                                                                                                      (("1"
                                                                                                        (SPLIT
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (FLATTEN)
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -15
                                                                                                             "m2!1")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (APPLY
                                                                                                                 (REPEAT
                                                                                                                  (INST?
                                                                                                                   -15
                                                                                                                   :WHERE
                                                                                                                   -2)))
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (INST
                                                                                                             -7
                                                                                                             "tau!1"
                                                                                                             "s2!1"
                                                                                                             "m2!1")
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              (("2"
                                                                                                                (SPLIT
                                                                                                                 -7)
                                                                                                                (("1"
                                                                                                                  (SKOSIMP*)
                                                                                                                  (("1"
                                                                                                                    (INST
                                                                                                                     -16
                                                                                                                     "y!1")
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (APPLY
                                                                                                                         (REPEAT
                                                                                                                          (INST?
                                                                                                                           -16
                                                                                                                           :WHERE
                                                                                                                           -3)))
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (EXPAND
                                                                                                                   "derive"
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (FLATTEN)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (INST
                                                                                                         -13
                                                                                                         "m1!1")
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (APPLY
                                                                                                             (REPEAT
                                                                                                              (INST?
                                                                                                               -13
                                                                                                               :WHERE
                                                                                                               -5)))
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (APPLY
                                                                 (BRANCH
                                                                  (SPLIT -1)
                                                                  ((THEN
                                                                    (FLATTEN)
                                                                    (ASSERT)))))
                                                                (("1"
                                                                  (SKOSIMP*)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (INST-CP
                                                                       -7
                                                                       "m2!1")
                                                                      (("1"
                                                                        (INST
                                                                         -7
                                                                         "m1!1")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -7
                                                                               :WHERE
                                                                               -4)))
                                                                            (("1"
                                                                              (APPLY
                                                                               (REPEAT
                                                                                (INST?
                                                                                 -8
                                                                                 :WHERE
                                                                                 -5)))
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (SPLIT
                                                                                   -5)
                                                                                  (("1"
                                                                                    (FLATTEN)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (FLATTEN)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (SKOSIMP*)
                                                                                (("2"
                                                                                  (APPLY
                                                                                   (THEN
                                                                                    (INST?)
                                                                                    (ASSERT)
                                                                                    (EXPAND
                                                                                     "<<")))
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (SKOSIMP*)
                                                                                (("3"
                                                                                  (APPLY
                                                                                   (THEN
                                                                                    (INST?)
                                                                                    (ASSERT)
                                                                                    (EXPAND
                                                                                     "<<")))
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("4"
                                                                                (USE
                                                                                 "derive_boolean_expr_type")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (FLATTEN)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (EXPAND
                                                                                   "id")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "wf_BoolExpr")
                                                                                    (("2"
                                                                                      (APPLY
                                                                                       (THEN
                                                                                        (INST?)
                                                                                        (ASSERT)
                                                                                        (EXPAND
                                                                                         "<<")))
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (APPLY
                                                                               (THEN
                                                                                (INST?)
                                                                                (ASSERT)
                                                                                (EXPAND
                                                                                 "<<")))
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (APPLY
                                                                   (BRANCH
                                                                    (SPLIT -1)
                                                                    ((THEN
                                                                      (FLATTEN)
                                                                      (ASSERT)))))
                                                                  (("1"
                                                                    (SKOSIMP*)
                                                                    (("1"
                                                                      (INST-CP
                                                                       -7
                                                                       "m2!1")
                                                                      (("1"
                                                                        (INST
                                                                         -7
                                                                         "m1!1")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -7
                                                                               :WHERE
                                                                               -4)))
                                                                            (("1"
                                                                              (APPLY
                                                                               (REPEAT
                                                                                (INST?
                                                                                 -8
                                                                                 :WHERE
                                                                                 -5)))
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (APPLY
                                                                                 (THEN
                                                                                  (INST?)
                                                                                  (ASSERT)
                                                                                  (EXPAND
                                                                                   "<<")))
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (APPLY
                                                                               (THEN
                                                                                (INST?)
                                                                                (ASSERT)
                                                                                (EXPAND
                                                                                 "<<")))
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (APPLY
                                                                     (BRANCH
                                                                      (SPLIT
                                                                       -1)
                                                                      ((THEN
                                                                        (FLATTEN)
                                                                        (ASSERT)))))
                                                                    (("1"
                                                                      (EXPAND
                                                                       "execute_set")
                                                                      (("1"
                                                                        (SKOSIMP*)
                                                                        (("1"
                                                                          (INST
                                                                           -8
                                                                           "x!1 - 1")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (APPLY
                                                                               (REPEAT
                                                                                (INST?
                                                                                 -8
                                                                                 :WHERE
                                                                                 -4)))
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -5)
                                                                                  (("1"
                                                                                    (LIFT-IF)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (SPLIT
                                                                                         22)
                                                                                        (("1"
                                                                                          (PROPAX)
                                                                                          NIL
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (SKOSIMP*)
                                                                                          (("2"
                                                                                            (USE
                                                                                             "wf_update_GhostVars")
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              (("2"
                                                                                                (SKOSIMP*)
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "wf_ghoststate")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "id")
                                                                                                    (("2"
                                                                                                      (EXPAND
                                                                                                       "is_ghost")
                                                                                                      (("2"
                                                                                                        (EXPAND
                                                                                                         "defined?")
                                                                                                        (("2"
                                                                                                          (EXPAND
                                                                                                           "update_GhostVars")
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "update_store")
                                                                                                            (("2"
                                                                                                              (SKOSIMP*)
                                                                                                              (("2"
                                                                                                                (LIFT-IF)
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  (("2"
                                                                                                                    (INST?)
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      (("2"
                                                                                                                        (SPLIT
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (SKOSIMP*)
                                                                                                                          (("1"
                                                                                                                            (TYPEPRED
                                                                                                                             "b!1")
                                                                                                                            (("1"
                                                                                                                              (EXPAND
                                                                                                                               "wf_Body")
                                                                                                                              (("1"
                                                                                                                                (FLATTEN)
                                                                                                                                (("1"
                                                                                                                                  (INST
                                                                                                                                   -2
                                                                                                                                   "b!1")
                                                                                                                                  (("1"
                                                                                                                                    (EXPAND
                                                                                                                                     "subterm"
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      (("1"
                                                                                                                                        (LEMMA
                                                                                                                                         "derive_bottom_iff_exception_step")
                                                                                                                                        (("1"
                                                                                                                                          (INST?
                                                                                                                                           -1
                                                                                                                                           :WHERE
                                                                                                                                           -10)
                                                                                                                                          (("1"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (SKOSIMP*)
                                                                                                                          (("2"
                                                                                                                            (PROP)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (APPLY
                                                                                 (THEN
                                                                                  (INST?)
                                                                                  (ASSERT)
                                                                                  (EXPAND
                                                                                   "<<")))
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (APPLY
                                                                       (BRANCH
                                                                        (SPLIT
                                                                         -1)
                                                                        ((THEN
                                                                          (FLATTEN)
                                                                          (ASSERT)))))
                                                                      (("2"
                                                                        (APPLY
                                                                         (BRANCH
                                                                          (SPLIT
                                                                           -1)
                                                                          ((THEN
                                                                            (FLATTEN)
                                                                            (ASSERT)))))
                                                                        (("1"
                                                                          (SKOSIMP*)
                                                                          (("1"
                                                                            (INST
                                                                             -6
                                                                             "x!1 - 1")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (APPLY
                                                                                 (REPEAT
                                                                                  (INST?
                                                                                   -6
                                                                                   :WHERE
                                                                                   -4)))
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (APPLY
                                                                                   (THEN
                                                                                    (INST?)
                                                                                    (ASSERT)
                                                                                    (EXPAND
                                                                                     "<<")))
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (APPLY
                                                                           (BRANCH
                                                                            (SPLIT
                                                                             -1)
                                                                            ((THEN
                                                                              (FLATTEN)
                                                                              (ASSERT)))))
                                                                          (("1"
                                                                            (REPLACE
                                                                             -4)
                                                                            (("1"
                                                                              (USE
                                                                               "wf_update_PState")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (SKOSIMP*)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "update_PState")
                                                                                    (("1"
                                                                                      (USE
                                                                                       "wf_state_raise")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (APPLY
                                                                             (BRANCH
                                                                              (SPLIT
                                                                               -1)
                                                                              ((THEN
                                                                                (FLATTEN)
                                                                                (ASSERT)))))
                                                                            (("1"
                                                                              (SKOSIMP*)
                                                                              (("1"
                                                                                (INST-CP
                                                                                 -9
                                                                                 "m3!1")
                                                                                (("1"
                                                                                  (INST-CP
                                                                                   -9
                                                                                   "m2!1")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -9
                                                                                     "m1!1")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (APPLY
                                                                                         (REPEAT
                                                                                          (INST?
                                                                                           -9
                                                                                           :WHERE
                                                                                           -4)))
                                                                                        (("1"
                                                                                          (APPLY
                                                                                           (REPEAT
                                                                                            (INST?
                                                                                             -10
                                                                                             :WHERE
                                                                                             -5)))
                                                                                          (("1"
                                                                                            (APPLY
                                                                                             (REPEAT
                                                                                              (INST?
                                                                                               -11
                                                                                               :WHERE
                                                                                               -6)))
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (SPLIT
                                                                                                 -10)
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (SPLIT
                                                                                                     -11)
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -9)
                                                                                                      (("1"
                                                                                                        (LIFT-IF)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (SPLIT
                                                                                                             26)
                                                                                                            (("1"
                                                                                                              (SKOSIMP*)
                                                                                                              (("1"
                                                                                                                (USE
                                                                                                                 "wf_update_PState")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("1"
                                                                                                                      (EXPAND
                                                                                                                       "update_PState")
                                                                                                                      (("1"
                                                                                                                        (USE
                                                                                                                         "wf_state_raise")
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (PROPAX)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (USE
                                                                                                       "wf_update_PState")
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (SKOSIMP*)
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "update_PState")
                                                                                                            (("2"
                                                                                                              (USE
                                                                                                               "wf_state_catch")
                                                                                                              (("2"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (PROPAX)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("3"
                                                                                                  (USE
                                                                                                   "wf_update_PState")
                                                                                                  (("3"
                                                                                                    (ASSERT)
                                                                                                    (("3"
                                                                                                      (SKOSIMP*)
                                                                                                      (("3"
                                                                                                        (EXPAND
                                                                                                         "update_PState")
                                                                                                        (("3"
                                                                                                          (USE
                                                                                                           "wf_state_catch")
                                                                                                          (("3"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (APPLY
                                                                                               (THEN
                                                                                                (INST?)
                                                                                                (ASSERT)
                                                                                                (EXPAND
                                                                                                 "<<")))
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (SKOSIMP*)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "wf_Body")
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "var_names")
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "emptyset")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "subterm")
                                                                                                    (("2"
                                                                                                      (SKOSIMP*)
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("3"
                                                                                            (SKOSIMP*)
                                                                                            (("3"
                                                                                              (APPLY
                                                                                               (THEN
                                                                                                (INST?)
                                                                                                (ASSERT)
                                                                                                (EXPAND
                                                                                                 "<<")))
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (APPLY
                                                                                           (THEN
                                                                                            (INST?)
                                                                                            (ASSERT)
                                                                                            (EXPAND
                                                                                             "<<")))
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (APPLY
                                                                               (BRANCH
                                                                                (SPLIT
                                                                                 -1)
                                                                                ((THEN
                                                                                  (FLATTEN)
                                                                                  (ASSERT)))))
                                                                              (("1"
                                                                                (INST
                                                                                 -6
                                                                                 "x!1 - 1")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (APPLY
                                                                                     (REPEAT
                                                                                      (INST?
                                                                                       -6
                                                                                       :WHERE
                                                                                       -4)))
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (TYPEPRED
                                                                                       "b!1")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -6
                                                                                         "test(b!1)")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (EXPAND
                                                                                             "<<")
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "wf_Body")
                                                                                              (("2"
                                                                                                (SPLIT
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (SKOSIMP*)
                                                                                                  (("1"
                                                                                                    (INST?)
                                                                                                    (("1"
                                                                                                      (INST?
                                                                                                       -8)
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (REWRITE
                                                                                                           "var_names"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (AUTO-REWRITE
                                                                                                             "union"
                                                                                                             "member"
                                                                                                             "emptyset")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (CASE-REPLACE
                                                                                                                 "While(test(b!1), body(b!1)) = b!1")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (REWRITE
                                                                                                                     "var_names"
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (APPLY-EXTENSIONALITY
                                                                                                                   :HIDE?
                                                                                                                   T)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (SKOSIMP*)
                                                                                                  (("2"
                                                                                                    (INST
                                                                                                     -4
                                                                                                     "b1!1")
                                                                                                    (("2"
                                                                                                      (EXPAND
                                                                                                       "subterm"
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (CASE-REPLACE
                                                                                                           "While[Name](test[Name](b!1), body[Name](b!1)) = b!1")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (INST
                                                                                                               -10
                                                                                                               "b1!1")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (SPLIT
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (PROPAX)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (EXPAND
                                                                                                                     "subterm"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (PROPAX)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (APPLY-EXTENSIONALITY
                                                                                                             :HIDE?
                                                                                                             T)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (EXPAND
                                                                                 "execute_assert")
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "check_assertion")
                                                                                  (("2"
                                                                                    (SKOSIMP*)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -7
                                                                                       "x!1 - 1")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (APPLY
                                                                                           (REPEAT
                                                                                            (INST?
                                                                                             -7
                                                                                             :WHERE
                                                                                             -3)))
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -4)
                                                                                              (("1"
                                                                                                (LIFT-IF)
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (SPLIT
                                                                                                     28)
                                                                                                    (("1"
                                                                                                      (SKOSIMP*)
                                                                                                      (("1"
                                                                                                        (SPLIT
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (PROPAX)
                                                                                                          NIL
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (SKOSIMP*)
                                                                                                          (("2"
                                                                                                            (USE
                                                                                                             "wf_update_PState")
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              (("2"
                                                                                                                (SKOSIMP*)
                                                                                                                (("2"
                                                                                                                  (EXPAND
                                                                                                                   "update_PState")
                                                                                                                  (("2"
                                                                                                                    (USE
                                                                                                                     "wf_state_raise")
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (PROPAX)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (APPLY
                                                                                             (THEN
                                                                                              (INST?)
                                                                                              (ASSERT)
                                                                                              (EXPAND
                                                                                               "<<")))
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKOSIMP*)
        (("2" (TYPEPRED "b!1")
          (("2" (EXPAND "id") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL)
     ("2" (USE "wf_nat") NIL NIL))
    NIL)
   PROVED
   ((|wf_induction| FORMULA-DECL NIL |wf_induction| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|wf_Body_preserved_by_proper_subterm| FORMULA-DECL NIL |WellFormedProgram|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(MethodCall?) -> Expr]" |Body_adt| NIL)
    (|lookup_mthd| CONST-DECL "lift[(methods(p))]" |ProgramFunctions| NIL)
    (|NullPointer| ADT-CONSTRUCTOR-DECL "(NullPointer?)" |Excpt_adt| NIL)
    (|NullPointer?| ADT-RECOGNIZER-DECL "[Excpt -> boolean]" |Excpt_adt| NIL)
    (|get_class_in_classes| FORMULA-DECL NIL |ProgramFunctions| NIL)
    (|method_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|wf_state_update_stack| FORMULA-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|wf_state_update_local| FORMULA-DECL NIL |State| NIL)
    (|old_val_arg!1| SKOLEM-CONST-DECL "Val[Name]" |AnnotatedProgramSemantics|
     NIL)
    (|update_local| CONST-DECL "PState" |State| NIL)
    (|catch| CONST-DECL "PState" |State| NIL)
    (|wf_state_catch| FORMULA-DECL NIL |State| NIL)
    (|inv!2| SKOLEM-CONST-DECL "(wf_BoolExpr[Name](id(p!1)))"
     |AnnotatedProgramSemantics| NIL)
    (|m2!2| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|m3!2| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|inv!2| SKOLEM-CONST-DECL "(wf_BoolExpr[Name](id(p!1)))"
     |AnnotatedProgramSemantics| NIL)
    (|wf_state_raise| FORMULA-DECL NIL |State| NIL)
    (|JMLExc| ADT-CONSTRUCTOR-DECL "(JMLExc?)" |Excpt_adt| NIL)
    (|JMLExc?| ADT-RECOGNIZER-DECL "[Excpt -> boolean]" |Excpt_adt| NIL)
    (|raise| CONST-DECL "PState" |State| NIL)
    (|lookup_inv| CONST-DECL "BoolExpr" |ProgramFunctions| NIL)
    (|wf_Class| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Classes| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|m2!2| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|a!1| SKOLEM-CONST-DECL "Val[Name]" |AnnotatedProgramSemantics| NIL)
    (|m!1| SKOLEM-CONST-DECL "Method[Name]" |AnnotatedProgramSemantics| NIL)
    (|name| ADT-ACCESSOR-DECL "[(MethodCall?) -> Name]" |Body_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|wf_state_arg_is_local| FORMULA-DECL NIL |State| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|m2!2| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|inv!2| SKOLEM-CONST-DECL "(wf_BoolExpr[Name](id(p!1)))"
     |AnnotatedProgramSemantics| NIL)
    (|m1!2| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|md!1| SKOLEM-CONST-DECL "(wf_Method(id(p!1)))"
     |AnnotatedProgramSemantics| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|tgt| ADT-ACCESSOR-DECL "[(MethodCall?) -> Expr]" |Body_adt| NIL)
    (|Null?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RefVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RefExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|r| ADT-ACCESSOR-DECL "[(RExpr?) -> RefExpr]" |Body_adt| NIL)
    (|v1!1| SKOLEM-CONST-DECL "Val[Name]" |AnnotatedProgramSemantics| NIL)
    (|then_stmt| ADT-ACCESSOR-DECL "[(IfThenElse?) -> Stmt]" |Body_adt| NIL)
    (|else_stmt| ADT-ACCESSOR-DECL "[(IfThenElse?) -> Stmt]" |Body_adt| NIL)
    (|update_store| CONST-DECL "Store" |State| NIL)
    (|wf_update_GhostVars| FORMULA-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |Body_adt| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|expr| ADT-ACCESSOR-DECL "[D: {X: Body | Assert?(X) OR StmtExpr?(X)} ->
   {X: Body |
            IF StmtExpr?(D)
              THEN     Assign?(X) OR BExpr?(X) OR CondExpr?(X)
                    OR MethodCall?(X) OR NExpr?(X) OR RExpr?(X)
            ELSE     TT?(X) OR FF?(X) OR Neg?(X) OR Conj?(X) OR Eq?(X)
                  OR BoolVarEval?(X)
            ENDIF}]"
     |Body_adt| NIL)
    (|try| ADT-ACCESSOR-DECL "[(TryCatch?) -> Stmt]" |Body_adt| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|finally| ADT-ACCESSOR-DECL "[(TryCatch?) -> Stmt]" |Body_adt| NIL)
    (|tau1!1| SKOLEM-CONST-DECL "APState" |AnnotatedProgramSemantics| NIL)
    (|catch| ADT-ACCESSOR-DECL "[(TryCatch?) -> Stmt]" |Body_adt| NIL)
    (|Skip| ADT-CONSTRUCTOR-DECL "(Skip?)" |Body_adt| NIL)
    (|body| ADT-ACCESSOR-DECL "[(While?) -> Stmt]" |Body_adt| NIL)
    (|While| ADT-CONSTRUCTOR-DECL "[[BoolExpr, Stmt] -> (While?)]" |Body_adt|
     NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|Body_While_extensionality| FORMULA-DECL NIL |Body_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|Throwable| ADT-CONSTRUCTOR-DECL "(Throwable?)" |Excpt_adt| NIL)
    (|Throwable?| ADT-RECOGNIZER-DECL "[Excpt -> boolean]" |Excpt_adt| NIL)
    (|s1| ADT-ACCESSOR-DECL "[(Sequence?) -> Stmt]" |Body_adt| NIL)
    (|s2| ADT-ACCESSOR-DECL "[(Sequence?) -> Stmt]" |Body_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|CaseJML| ADT-CONSTRUCTOR-DECL "[list[[BoolExpr, Stmt]] -> (CaseJML?)]"
     |Body_adt| NIL)
    (|IfThenElse| ADT-CONSTRUCTOR-DECL
     "[[BoolExpr, Stmt, Stmt] -> (IfThenElse?)]" |Body_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|branches| ADT-ACCESSOR-DECL "[(CaseJML?) -> list[[BoolExpr, Stmt]]]"
     |Body_adt| NIL)
    (|p!2| SKOLEM-CONST-DECL "Program[Name]" |AnnotatedProgramSemantics| NIL)
    (|b!2| SKOLEM-CONST-DECL "(wf_Body(id(p!2)))" |AnnotatedProgramSemantics|
     NIL)
    (|n| ADT-ACCESSOR-DECL "[(NExpr?) -> NumExpr]" |Body_adt| NIL)
    (|NumExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|check_for_exception| CONST-DECL "bool" |Semantics| NIL)
    (|else_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|then_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (|b| ADT-ACCESSOR-DECL "[(Bool?) -> bool]" |Val_adt| NIL)
    (|v1!1| SKOLEM-CONST-DECL "Val[Name]" |AnnotatedProgramSemantics| NIL)
    (|Bool?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|derive_boolean_expr_type| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL)
    (|test| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | While?(X) OR IfThenElse?(X) OR CondExpr?(X)} -> BoolExpr]"
     |Body_adt| NIL)
    (|update| CONST-DECL "PState" |State| NIL)
    (|target| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Name]" |Body_adt| NIL)
    (|wf_update_PState| FORMULA-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|v!1| SKOLEM-CONST-DECL "Val[Name]" |AnnotatedProgramSemantics| NIL)
    (|wf_state_update| FORMULA-DECL NIL |State| NIL)
    (|derive_bottom_iff_exception_step| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|source| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Expr]" |Body_adt| NIL)
    (|b| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | BExpr?(X) OR Neg?(X)} -> BoolExpr]" |Body_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|b!1| SKOLEM-CONST-DECL "(wf_Body(p!1))" |AnnotatedProgramSemantics| NIL)
    (|b1| ADT-ACCESSOR-DECL "[D: {X: Body | Eq?(X) OR Conj?(X) OR Plus?(X)} ->
   {X: Body |
            IF Plus?(D) THEN Int?(X) OR Plus?(X) OR NumVarEval?(X)
            ELSE IF Conj?(D)
                   THEN     TT?(X) OR FF?(X) OR Neg?(X) OR Conj?(X)
                         OR Eq?(X) OR BoolVarEval?(X)
                 ELSE     Assign?(X) OR BExpr?(X) OR CondExpr?(X)
                       OR MethodCall?(X) OR NExpr?(X) OR RExpr?(X)
                 ENDIF
            ENDIF}]"
     |Body_adt| NIL)
    (|NumVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Int?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)
    (|Plus?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|p!1| SKOLEM-CONST-DECL "Program[Name]" |AnnotatedProgramSemantics| NIL)
    (<< ADT-DEF-DECL "(well_founded?[Body])" |Body_adt| NIL)
    (|b2| ADT-ACCESSOR-DECL "[D: {X: Body | Eq?(X) OR Conj?(X) OR Plus?(X)} ->
   {X: Body |
            IF Plus?(D) THEN Int?(X) OR Plus?(X) OR NumVarEval?(X)
            ELSE IF Conj?(D)
                   THEN     TT?(X) OR FF?(X) OR Neg?(X) OR Conj?(X)
                         OR Eq?(X) OR BoolVarEval?(X)
                 ELSE     Assign?(X) OR BExpr?(X) OR CondExpr?(X)
                       OR MethodCall?(X) OR NExpr?(X) OR RExpr?(X)
                 ENDIF
            ENDIF}]"
     |Body_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|derive| DEF-DECL "bool" |Semantics| NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL))
   73969 10796 T SHOSTAK))
 (|on_method_entry_AP_TCC1| 0
  (|on_method_entry_AP_TCC1-1| NIL 3391506354 3403272078
   ("" (EXPAND "id") (("" (PROPAX) NIL NIL)) NIL) PROVED
   ((|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)) 1 1 T NIL))
 (|on_method_entry_AP_TCC2| 0
  (|on_method_entry_AP_TCC2-1| NIL 3401609002 3403272079
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (EXPAND "on_method_entry")
        (("" (ASSERT)
          (("" (SPLIT -1)
            (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (FLATTEN) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL))
   37 37 T NIL))
 (|determ_step_AP_TCC1| 0
  (|determ_step_AP_TCC1-1| NIL 3401609002 3403272079 ("" (SUBTYPE-TCC) NIL NIL)
   PROVED ((|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)) 57 57 NIL
   NIL))
 (|determ_step_AP| 0
  (|determ_step_AP-1| NIL 3396347126 3403272080
   ("" (SKOSIMP*) (("" (USE "derive_determ_step") (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   PROVED
   ((|derive_determ_step| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (< CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL))
   29 29 T SHOSTAK))
 (|derive_bottom_iff_exception_step_AP| 0
  (|derive_bottom_iff_exception_step_AP-1| NIL 3396347163 3403272080
   ("" (SKOSIMP*)
    (("" (USE "derive_bottom_iff_exception_step") (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   PROVED
   ((|derive_bottom_iff_exception_step| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (< CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL))
   7 7 T SHOSTAK))
 (|derive_boolean_expr_type_AP_TCC1| 0
  (|derive_boolean_expr_type_AP_TCC1-1| NIL 3401609002 3403272080
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   71 71 NIL NIL))
 (|derive_boolean_expr_type_AP| 0
  (|derive_boolean_expr_type_AP-1| NIL 3396347184 3403272081
   ("" (SKOSIMP*)
    (("" (USE "derive_boolean_expr_type")
      (("1" (ASSERT) NIL NIL)
       ("2" (TYPEPRED "b!1") (("2" (EXPAND "id") (("2" (PROPAX) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL)
    (|b!1| SKOLEM-CONST-DECL "(wf_BoolExpr(p!1))" |AnnotatedProgramSemantics|
     NIL)
    (|p!1| SKOLEM-CONST-DECL "Program[Name]" |AnnotatedProgramSemantics| NIL)
    (|derive_boolean_expr_type| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (< CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   29 29 T SHOSTAK)))
(|APSemanticsProperties|
 (|non_interference_of_set_stmt_TCC1| 0
  (|non_interference_of_set_stmt_TCC1-1| NIL 3401609268 3403272081
   ("" (SKOSIMP*)
    (("" (EXPAND "id")
      (("" (USE "wf_Body_preserved_by_proper_subterm" ("b2" "source(c!1)"))
        (("" (ASSERT) (("" (EXPAND "<<") (("" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Body_preserved_by_proper_subterm| FORMULA-DECL NIL |WellFormedProgram|
     NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|source| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Expr]" |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |APSemanticsProperties| NIL)
    (<< ADT-DEF-DECL "(well_founded?[Body])" |Body_adt| NIL))
   30 30 T NIL))
 (|non_interference_of_set_stmt_TCC2| 0
  (|non_interference_of_set_stmt_TCC2-1| NIL 3401609268 3403272081
   ("" (SKOSIMP*) (("" (EXPAND "id") (("" (PROPAX) NIL NIL)) NIL)) NIL) PROVED
   ((|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)) 2 2 T NIL))
 (|non_interference_of_set_stmt| 0
  (|non_interference_of_set_stmt-1| NIL 3389426699 3403272083
   ("" (SKOSIMP*)
    (("" (EXPAND "derive")
      (("" (EXPAND "spec_expr_has_no_side_effects")
        (("" (EXPAND "execute_set")
          (("" (ASSERT)
            (("" (PROP)
              (("" (SKOSIMP)
                (("" (INST?)
                  (("1" (ASSERT)
                    (("1" (REPLACE -7)
                      (("1" (LIFT-IF)
                        (("1" (ASSERT)
                          (("1" (EXPAND "update_GhostVars")
                            (("1" (EXPAND "update_store")
                              (("1" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|derive| DEF-DECL "bool" |Semantics| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |APSemanticsProperties| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) NIL
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_store| CONST-DECL "Store" |State| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL)
   143 142 T NIL))
 (|CaseJML_exclusive_branches_semantics_TCC1| 0
  (|CaseJML_exclusive_branches_semantics_TCC1-1| NIL 3401609268 3403272083
   ("" (SKOSIMP*)
    (("" (EXPAND "id")
      (("" (TYPEPRED "bs!1")
        (("" (EXPAND "wf_Branches")
          (("" (REWRITE "every_is_forall")
            (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|every_is_forall| FORMULA-DECL NIL |listfuncs| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |APSemanticsProperties| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|wf_Stmt| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL))
   7 7 T NIL))
 (|CaseJML_exclusive_branches_semantics_TCC2| 0
  (|CaseJML_exclusive_branches_semantics_TCC2-1| NIL 3401609268 3403272083
   ("" (SKOSIMP*)
    (("" (TYPEPRED "proj_1(b2!1)")
      (("" (EXPAND "wf_BoolExpr")
        (("" (ASSERT) (("" (EXPAND "id") (("" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |APSemanticsProperties| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Stmt| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL))
   8 8 T NIL))
 (|CaseJML_exclusive_branches_semantics_TCC3| 0
  (|CaseJML_exclusive_branches_semantics_TCC3-1| NIL 3401609268 3403272083
   ("" (SKOSIMP*)
    (("" (EXPAND "id")
      (("" (TYPEPRED "bs!1") (("" (REWRITE "wf_Body_CaseJML") NIL NIL)) NIL))
      NIL))
    NIL)
   PROVED
   ((|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |APSemanticsProperties| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|wf_Body_CaseJML| FORMULA-DECL NIL |WellFormedProgram| NIL))
   4 4 T NIL))
 (|CaseJML_exclusive_branches_semantics_TCC4| 0
  (|CaseJML_exclusive_branches_semantics_TCC4-1| NIL 3401609268 3403272083
   ("" (SKOSIMP*)
    (("" (EXPAND "id")
      (("" (TYPEPRED "proj_2(b1!1)")
        (("" (EXPAND "wf_Stmt") (("" (PROPAX) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   PROVED
   ((|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|wf_Stmt| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |APSemanticsProperties| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   4 4 T NIL))
 (|CaseJML_exclusive_branches_semantics| 0
  (|CaseJML_exclusive_branches_semantics-2| NIL 3398071500 3403272091
   ("" (INDUCT "bs")
    (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)
     ("2" (SKOSIMP*)
      (("2" (EXPAND "derive" -7)
        (("2" (ASSERT)
          (("2" (EXPAND "execute_CaseJML")
            (("2" (EXPAND "derive" -7)
              (("2" (SKOSIMP*)
                (("2" (EXPAND "check_for_exception")
                  (("2" (PROP)
                    (("2" (LIFT-IF)
                      (("2" (EXPAND "member" -6)
                        (("2" (SPLIT -6)
                          (("1" (HIDE -5 -8)
                            (("1" (REPLACE -1 :HIDE? T)
                              (("1" (INST? -5)
                                (("1" (ASSERT)
                                  (("1" (FLATTEN)
                                    (("1" (REPLACE -6 -2 :HIDE? T)
                                      (("1" (ASSERT)
                                        (("1" (REPLACE -5 :HIDE? T)
                                          (("1" (INST? 3)
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (CASE "b1!1 = cons1_var!1")
                            (("1" (HIDE -6 -9)
                              (("1" (REPLACE -1 :HIDE? T)
                                (("1" (INST? -6)
                                  (("1" (ASSERT)
                                    (("1" (FLATTEN)
                                      (("1" (REPLACE -7 -3 :HIDE? T)
                                        (("1" (REPLACE -6 :HIDE? T)
                                          (("1" (ASSERT)
                                            (("1" (INST 3 "m2!1")
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2"
                              (INST - "p!1" "s1!1" "s2!1" "Unit" "m2!1" "b1!1")
                              (("2"
                                (INST -8 "cons1_var!1" "tau!1" "v1!1" "m1!1")
                                (("1" (EXPAND "before" -8)
                                  (("1" (ASSERT)
                                    (("1" (FLATTEN)
                                      (("1" (REPLACE -9 -3 :HIDE? T)
                                        (("1" (REPLACE -8 :DIR RL :HIDE? T)
                                          (("1" (ASSERT)
                                            (("1" (GROUND)
                                              (("1" (REVEAL -3)
                                                (("1" (SKOSIMP)
                                                  (("1" (INST?)
                                                    (("1" (ASSERT)
                                                      (("1"
                                                        (EXPAND "before" -1)
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (SKOSIMP)
                                                (("2" (INST?)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("3" (EXPAND "derive" -3)
                                                (("3" (PROPAX) NIL NIL)) NIL)
                                               ("4" (EXPAND "wf_Branches")
                                                (("4" (EXPAND "every" -4)
                                                  (("4" (FLATTEN) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL)
                                 ("3" (EXPAND "wf_Branches")
                                  (("3" (EXPAND "every")
                                    (("3" (EXPAND "wf_Stmt")
                                      (("3" (EXPAND "wf_BoolExpr")
                                        (("3" (FLATTEN)
                                          (("3" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKOSIMP*)
        (("3" (EXPAND "id")
          (("3" (TYPEPRED "proj_2(b1!1)")
            (("3" (EXPAND "wf_Stmt") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("4" (HIDE 2)
      (("4" (SKOSIMP*)
        (("4" (EXPAND "id") (("4" (REWRITE "wf_Body_CaseJML") NIL NIL)) NIL))
        NIL))
      NIL)
     ("5" (HIDE 2)
      (("5" (SKOSIMP*)
        (("5" (EXPAND "id")
          (("5" (TYPEPRED "proj_1(b2!1)")
            (("5" (EXPAND "wf_BoolExpr") (("5" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("6" (HIDE 2)
      (("6" (SKOSIMP*)
        (("6" (EXPAND "id")
          (("6" (TYPEPRED "proj_1(b1!1)")
            (("6" (EXPAND "wf_BoolExpr") (("6" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_Body_CaseJML| FORMULA-DECL NIL |WellFormedProgram| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|check_for_exception| CONST-DECL "bool" |Semantics| NIL)
    (|m1!1| SKOLEM-CONST-DECL "nat" |APSemanticsProperties| NIL)
    (|n!1| SKOLEM-CONST-DECL "nat" |APSemanticsProperties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|p!1| SKOLEM-CONST-DECL "Program[Name]" |APSemanticsProperties| NIL)
    (|cons1_var!1| SKOLEM-CONST-DECL "[BoolExpr[Name], Stmt[Name]]"
     |APSemanticsProperties| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |APSemanticsProperties| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Stmt| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL)
    (|derive| DEF-DECL "bool" |Semantics| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Bool?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Bool| ADT-CONSTRUCTOR-DECL "[bool -> (Bool?)]" |Val_adt| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|before| DEF-DECL "boolean" |listfuncs| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|CaseJML| ADT-CONSTRUCTOR-DECL "[list[[BoolExpr, Stmt]] -> (CaseJML?)]"
     |Body_adt| NIL))
   723 721 T NIL)
  (|CaseJML_exclusive_branches_semantics-1| NIL 3389427193 3397561497
   ("" (INDUCT "bs")
    (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)
     ("2" (SKOSIMP*)
      (("2" (EXPAND "derive" -6)
        (("2" (ASSERT)
          (("2" (EXPAND "execute_CaseJML")
            (("2" (EXPAND "derive" -6)
              (("2" (SKOSIMP*)
                (("2" (EXPAND "check_for_exception")
                  (("2" (PROP)
                    (("2" (LIFT-IF)
                      (("2" (EXPAND "member" -5)
                        (("2" (SPLIT -5)
                          (("1" (HIDE -4 -7)
                            (("1" (REPLACE -1 :HIDE? T)
                              (("1" (INST?)
                                (("1" (ASSERT)
                                  (("1" (FLATTEN)
                                    (("1" (REPLACE -5 -2 :HIDE? T)
                                      (("1" (ASSERT)
                                        (("1" (REPLACE -4 :HIDE? T)
                                          (("1" (INST?) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (CASE "b1!1 = cons1_var!1")
                            (("1" (HIDE -5 -8)
                              (("1" (REPLACE -1 :HIDE? T)
                                (("1" (INST?)
                                  (("1" (ASSERT)
                                    (("1" (FLATTEN)
                                      (("1" (REPLACE -6 -3 :HIDE? T)
                                        (("1" (REPLACE -5 :HIDE? T)
                                          (("1" (ASSERT)
                                            (("1" (INST 3 "m2!1" "Unit") NIL
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2"
                              (INST - "p!1" "s1!1" "s2!1" "Unit" "m2!1" "b1!1")
                              (("2"
                                (INST -7 "cons1_var!1" "tau!1" "v1!1" "m1!1")
                                (("1" (EXPAND "member" -7)
                                  (("1" (EXPAND "before" -7)
                                    (("1" (ASSERT)
                                      (("1" (FLATTEN)
                                        (("1" (REPLACE -8 -3 :HIDE? T)
                                          (("1" (REPLACE -7 :HIDE? T)
                                            (("1" (ASSERT)
                                              (("1" (SPLIT -4)
                                                (("1" (PROPAX) NIL NIL)
                                                 ("2" (REVEAL -3)
                                                  (("2" (SKOSIMP)
                                                    (("2" (POSTPONE) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP)
                                                  (("3" (INST?)
                                                    (("3" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("4" (EXPAND "derive" -3)
                                                  (("4" (FLATTEN) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL)
                                 ("3" (TYPEPRED "cons1_var!1`1")
                                  (("3" (POSTPONE) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   495 494 T NIL)))

