(AnnEventPreservesRelatedStates
 (IMP_VariableNames_TCC1 0
  (IMP_VariableNames_TCC1-1 nil 3403865307 nil
   ("" (assuming-tcc) nil nil) unchecked nil nil nil nil nil))
 (IMP_RelatedStatesProperties_TCC1 0
  (IMP_RelatedStatesProperties_TCC1-1 nil 3403865307 nil
   ("" (assuming-tcc) nil nil) unchecked nil nil nil nil nil))
 (IMP_RelatedStatesProperties_TCC2 0
  (IMP_RelatedStatesProperties_TCC2-1 nil 3403865307 nil
   ("" (assuming-tcc) nil nil) unchecked nil nil nil nil nil))
 (IMP_RelatedStatesProperties_TCC3 0
  (IMP_RelatedStatesProperties_TCC3-1 nil 3403907822 nil
   ("" (existence-tcc) nil nil) nil nil nil nil nil nil))
 (IMP_RelatedStatesProperties_TCC4 0
  (IMP_RelatedStatesProperties_TCC4-1 nil 3403907822 nil
   ("" (existence-tcc) nil nil) nil nil nil nil nil nil))
 (ann_action_preserves_related_states_TCC1 0
  (ann_action_preserves_related_states_TCC1-1 nil 3403865307 nil
   ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (ann_action_preserves_related_states 0
  (ann_action_preserves_related_states-1 nil 3403883355 3403892348
   ("" (induct "a")
    (("1" (skosimp*)
      (("1" (expand* "ann_action" "execute_action" "derive")
        (("1" (prop)
          (("1" (rewrite -1)
            (("1" (expand* "related_states" "MP_modeled?")
              (("1" (prop)
                (("1" (hide -5)
                  (("1" (rewrite -11)
                    (("1"
                      (expand* "wf_state" "wf_AState" "wf_ghoststate")
                      (("1" (prop)
                        (("1" (expand "is_ghost")
                          (("1" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2"
                  (expand* "MVA_modeled?" "MVA_cp_modeled?"
                   "MVA_cps_modeled?" "MVA_vars_modeled?")
                  (("2" (ground)
                    (("2" (replace -14)
                      (("2" (beta) (("2" (propax) nil nil)) nil)) nil))
                    nil))
                  nil)
                 ("3"
                  (expand* "Program_modeled?" "Program_gvs_modeled?")
                  (("3" (replace -12) (("3" (ground) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (skosimp*)
      (("2" (expand "execute_action" -9)
        (("2" (expand "ann_action" -8)
          (("2" (expand "derive" -8)
            (("2" (assert)
              (("2" (skosimp*)
                (("2"
                  (name "stA2"
                        "update(stA(astate(sMP1!1)))(target(cons1_var!1))(eval(source(cons1_var!1))(stA(astate(sMP1!1)), st(pstate(sMP1!1))))")
                  (("2" (replace -1)
                    (("2"
                      (inst - "mp!1" "t!1 WITH [action := cons2_var!1]"
                       "m2!1"
                       "sMP1!1 WITH [astate := astate(sMP1!1) WITH [stA := stA2]]"
                       "sMP2!1" "tau!1" "sAP2!1")
                      (("2"
                        (case "defined?(eval(source(cons1_var!1))(stA(astate(sMP1!1)), st(pstate(sMP1!1)))) AND
                                                                             MP_modeled?(mp!1)(sMP1!1 WITH [astate := astate(sMP1!1) WITH [stA := stA2]], tau!1)")
                        (("1" (assert)
                          (("1" (prop)
                            (("1" (hide-all-but (-1 -13 1))
                              (("1"
                                (expand* "derive" "execute_set")
                                (("1"
                                  (skosimp*)
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (inst 1 "t1!1")
                              (("2"
                                (assert)
                                (("2"
                                  (replace -6 :dir rl :hide? t)
                                  (("2"
                                    (hide-all-but (-8 1))
                                    (("2"
                                      (expand "suffix")
                                      (("2"
                                        (skolem!)
                                        (("2"
                                          (inst
                                           1
                                           "append(l3!1, (: cons1_var!1 :))")
                                          (("2"
                                            (use
                                             "append_assoc[OneAction]")
                                            (("2"
                                              (rewrite -1)
                                              (("2"
                                                (expand "append" 1 2)
                                                (("2"
                                                  (expand "append" 1 2)
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (hide-all-but (-7 1))
                              (("3"
                                (expand "wf_Action")
                                (("3"
                                  (skosimp)
                                  (("3"
                                    (inst?)
                                    (("3"
                                      (expand "member" -2)
                                      (("3" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("4" (hide 3)
                              (("4"
                                (expand "related_states")
                                (("4"
                                  (prop)
                                  (("1"
                                    (hide-all-but (-1 -3 -5 -9 1))
                                    (("1"
                                      (replace -2 1 :dir rl :hide? t)
                                      (("1"
                                        (expand "wf_state")
                                        (("1"
                                          (prop)
                                          (("1"
                                            (expand "wf_AState")
                                            (("1"
                                              (prop)
                                              (("1"
                                                (expand "wf_Store")
                                                (("1"
                                                  (skosimp)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (expand "update")
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (prop)
                                                          (("1"
                                                            (expand
                                                             "wf_Action")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "wf_ghoststate")
                                            (("2"
                                              (skolem!)
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (expand "is_ghost")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (use "derive_yields_wf_state_AP")
                                    (("1" (assert) nil nil)
                                     ("2"
                                      (use
                                       "one_action_translation_wf_Body")
                                      (("2"
                                        (expand "member" -1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide -2 -9 -10 -12 -13 3)
                          (("2" (expand* "derive" "execute_set")
                            (("2" (skosimp*)
                              (("2"
                                (expand*
                                 "well_behaved_MVA"
                                 "actions_have_no_side_effects")
                                (("2"
                                  (flatten)
                                  (("2"
                                    (inst - "t1!1" "cons1_var!1")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (split -)
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (expand "related_states")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace
                                                   -1
                                                   :dir
                                                   rl
                                                   :hide?
                                                   t)
                                                  (("1"
                                                    (expand
                                                     "eval_action_behavior")
                                                    (("1"
                                                      (inst?
                                                       -
                                                       ("sMVA"
                                                        "astate(sMP1!1)"))
                                                      (("1"
                                                        (split -)
                                                        (("1"
                                                          (case
                                                           "eval(source(cons1_var!1))(stA(astate(sMP1!1)), st(pstate(sAP1!1))) = v!1")
                                                          (("1"
                                                            (hide -2)
                                                            (("1"
                                                              (case
                                                               "st(pstate(sAP1!1)) = st(pstate(sMP1!1))")
                                                              (("1"
                                                                (replace
                                                                 -1
                                                                 :hide?
                                                                 t)
                                                                (("1"
                                                                  (replace
                                                                   -1
                                                                   :hide?
                                                                   t)
                                                                  (("1"
                                                                    (lemma
                                                                     "derive_bottom_iff_exception_step_AP")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "defined?")
                                                                          (("1"
                                                                            (expand*
                                                                             "update_GhostVars"
                                                                             "update_store")
                                                                            (("1"
                                                                              (replace
                                                                               -14
                                                                               2
                                                                               :hide?
                                                                               t)
                                                                              (("1"
                                                                                (expand*
                                                                                 "wf_Action"
                                                                                 "var_names")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1
                                                                                         2
                                                                                         :dir
                                                                                         rl
                                                                                         :hide?
                                                                                         t)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (-2
                                                                                            -4
                                                                                            -6
                                                                                            -7
                                                                                            2))
                                                                                          (("1"
                                                                                            (expand*
                                                                                             "MP_modeled?"
                                                                                             "MVA_modeled?"
                                                                                             "Program_modeled?")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "MVA_cp_modeled?")
                                                                                                (("1"
                                                                                                  (lift-if)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "wf_new_vars")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "MVA_cps_modeled?")
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         -4)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (prop)
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "wf_new_vars")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -3
                                                                                                                   "q!1"
                                                                                                                   "f!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (expand
                                                                                                 "MVA_vars_modeled?")
                                                                                                (("3"
                                                                                                  (skosimp)
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "update")
                                                                                                    (("3"
                                                                                                      (lift-if)
                                                                                                      (("3"
                                                                                                        (prop)
                                                                                                        (("3"
                                                                                                          (inst?)
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("4"
                                                                                                (expand
                                                                                                 "Program_gvs_modeled?")
                                                                                                (("4"
                                                                                                  (skosimp)
                                                                                                  (("4"
                                                                                                    (inst?)
                                                                                                    (("4"
                                                                                                      (assert)
                                                                                                      (("4"
                                                                                                        (lift-if)
                                                                                                        (("4"
                                                                                                          (prop)
                                                                                                          (("4"
                                                                                                            (rewrite
                                                                                                             -1)
                                                                                                            (("4"
                                                                                                              (expand*
                                                                                                               "wf_state"
                                                                                                               "wf_ghoststate")
                                                                                                              (("4"
                                                                                                                (flatten)
                                                                                                                (("4"
                                                                                                                  (inst?)
                                                                                                                  (("4"
                                                                                                                    (expand*
                                                                                                                     "is_ghost"
                                                                                                                     "var_names")
                                                                                                                    (("4"
                                                                                                                      (assert)
                                                                                                                      (("4"
                                                                                                                        (skosimp*)
                                                                                                                        (("4"
                                                                                                                          (expand
                                                                                                                           "getGhostDecls")
                                                                                                                          (("4"
                                                                                                                            (skosimp*)
                                                                                                                            (("4"
                                                                                                                              (use
                                                                                                                               "wf_new_vars")
                                                                                                                              (("4"
                                                                                                                                (flatten)
                                                                                                                                (("4"
                                                                                                                                  (hide
                                                                                                                                   -1
                                                                                                                                   -2
                                                                                                                                   -3
                                                                                                                                   -4)
                                                                                                                                  (("4"
                                                                                                                                    (expand*
                                                                                                                                     "disjoint?"
                                                                                                                                     "empty?"
                                                                                                                                     "intersection"
                                                                                                                                     "member"
                                                                                                                                     "declared_var_names")
                                                                                                                                    (("4"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "name(f!1)")
                                                                                                                                      (("4"
                                                                                                                                        (prop)
                                                                                                                                        (("1"
                                                                                                                                          (use
                                                                                                                                           "new_vars_derived_from_mp")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -3
                                                                                                                                               "f!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide
                                                                                                                                           1
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (expand*
                                                                                                                                             "var_names"
                                                                                                                                             "getGhostDecls")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "f!2")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (use
                                                                         "one_action_source_wf_Body")
                                                                        (("2"
                                                                          (expand
                                                                           "member"
                                                                           -1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand*
                                                                 "MP_modeled?"
                                                                 "Program_modeled?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (rewrite
                                                             -1)
                                                            (("2"
                                                              (inst?)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "MP_modeled?")
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("4"
                                                          (expand
                                                           "wf_state"
                                                           -3)
                                                          (("4"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("6"
                                                          (expand
                                                           "wf_Action")
                                                          (("6"
                                                            (inst?)
                                                            (("6"
                                                              (expand
                                                               "member")
                                                              (("6"
                                                                (flatten)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace
                                           -5
                                           -8
                                           :dir
                                           rl
                                           :hide?
                                           t)
                                          (("2"
                                            (expand "suffix")
                                            (("2"
                                              (skolem!)
                                              (("2"
                                                (replace
                                                 -7
                                                 1
                                                 :dir
                                                 rl
                                                 :hide?
                                                 t)
                                                (("2"
                                                  (use
                                                   "append_member[OneAction]")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "member"
                                                       1)
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide 2)
      (("3" (skosimp)
        (("3" (expand "id")
          (("3" (skosimp)
            (("3" (use "ann_action_yields_wf_Body")
              (("3" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((ann_action_yields_wf_Body formula-decl nil
     AnnotateProgramProperties nil)
    (update const-decl "Store" MVASemantics nil)
    (eval const-decl "Val" MVASemantics nil)
    (append_member formula-decl nil listfuncs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (wf_new_vars formula-decl nil NewVariableDeclarations nil)
    (Int? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Int adt-constructor-decl "[int -> (Int?)]" Val_adt nil)
    (injective? const-decl "bool" functions nil)
    (unique const-decl "(injective?[CP, nat])" NewVariableDeclarations
     nil)
    (set type-eq-decl nil sets nil)
    (legal_names const-decl "set[Name]" VariableNames nil)
    (name_of const-decl "(injective?[CP, (legal_names(mp))])"
     NewVariableDeclarations nil)
    (getGhostDecls const-decl "finite_set[FieldDecl]" ProgramFunctions
     nil)
    (new_vars_derived_from_mp formula-decl nil NewVariableDeclarations
     nil)
    (disjoint? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (declared_var_names const-decl "finite_set[Name]" ProgramFunctions
     nil)
    (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil) nil
    (update_store const-decl "Store" State nil)
    (one_action_source_wf_Body formula-decl nil
     AnnotateProgramProperties nil)
    (derive_bottom_iff_exception_step_AP formula-decl nil
     AnnotatedProgramSemantics nil)
    (eval_action_behavior const-decl "boolean" Equivalence nil)
    (actions_have_no_side_effects const-decl "boolean" Equivalence nil)
    (wf_Store const-decl "boolean" MVASemantics nil)
    (one_action_translation_wf_Body formula-decl nil
     AnnotateProgramProperties nil)
    nil
    (Set adt-constructor-decl "[[Name, Expr] -> (Set?)]" Body_adt nil)
    nil
    (derive_yields_wf_state_AP formula-decl nil
     AnnotatedProgramSemantics nil)
    (member def-decl "bool" list_props nil)
    (append def-decl "list[T]" list_props nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (append_assoc formula-decl nil list_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (MP_modeled? const-decl "boolean" Equivalence nil)
    (Program_gvs_modeled? const-decl "boolean" Equivalence nil)
    (Program_modeled? const-decl "boolean" Equivalence nil)
    (MVA_cp_modeled? const-decl "boolean" Equivalence nil)
    (MVA_vars_modeled? const-decl "boolean" Equivalence nil)
    (MVA_cps_modeled? const-decl "boolean" Equivalence nil)
    (MVA_modeled? const-decl "boolean" Equivalence nil)
    (wf_AState const-decl "boolean" MVASemantics nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (is_ghost const-decl "boolean" SemanticsJML nil)
    (list_induction formula-decl nil list_adt nil)
    (Name formal-nonempty-type-decl nil AnnEventPreservesRelatedStates
     nil)
    (Expr type-eq-decl nil Body_adt nil)
    (CP formal-nonempty-type-decl nil AnnEventPreservesRelatedStates
     nil)
    (OneAction type-eq-decl nil MVA nil)
    (execute_action def-decl "Store" MVASemantics nil)
    (Unit adt-constructor-decl "(Unit?)" Val_adt nil)
    (Unit? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (derive def-decl "bool" Semantics nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (on_method_exit_normal const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML
     nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML
     nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML
     nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (wf_BoolExpr const-decl "boolean" WellFormedProgram nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (FF? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TT? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (RExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)"
     AnnotatedProgramSemantics nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (list type-decl nil list_adt nil) (Action type-eq-decl nil MVA nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (complete const-decl "boolean" MVASemantics nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVASemantics nil)
    (Store type-eq-decl nil State nil)
    (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Excpt type-decl nil Excpt_adt nil)
    (lift type-decl nil lift_adt nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (suffix const-decl "boolean" listfuncs nil)
    (wf_Action const-decl "boolean" WellFormedMVA nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (related_states const-decl "boolean" Equivalence nil)
    (well_behaved_MVA const-decl "boolean" Equivalence nil)
    (FieldDecl type-eq-decl nil Program nil)
    (BoolExpr type-eq-decl nil Body_adt nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil)
    (Class type-eq-decl nil Program nil)
    (PreProgram type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (ann_action def-decl "Stmt" AnnotateEvent nil))
   6087364 21640 t shostak))
 (update_vars_preserves_related_states_TCC1 0
  (update_vars_preserves_related_states_TCC1-1 nil 3403865307 nil
   ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (update_vars_preserves_related_states 0
  (update_vars_preserves_related_states-1 nil 3403883664 3403886151
   ("" (skosimp*)
    (("" (expand* "update_vars" "derive")
      (("" (assert)
        (("" (skosimp*)
          (("" (case "cps(mva(mp!1))(tcp(t!1))")
            (("1" (case "wf_state(ann_program(mp!1))(tau!1)")
              (("1" (expand "derive" -9)
                (("1" (expand "execute_set")
                  (("1" (skosimp*)
                    (("1" (expand "derive" -12)
                      (("1" (expand "derive" -12)
                        (("1" (ground)
                          (("1"
                            (expand* "update_GhostVars" "update_store")
                            (("1" (replace -13 :dir rl :hide? t)
                              (("1"
                                (lemma
                                 "ann_action_preserves_related_states")
                                (("1"
                                  (inst
                                   -
                                   "mp!1"
                                   "t!1"
                                   "action(t!1)"
                                   "m2!1"
                                   "sMP1!1 WITH [astate := astate(sMP1!1) WITH [cp := tcp(t!1)]]"
                                   "sMP2!1"
                                   "tau!1"
                                   "sAP2!1")
                                  (("1"
                                    (ground)
                                    (("1"
                                      (inst 1 "t!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (use
                                           "suffix_reflexive[OneAction]")
                                          nil
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (typepred "mp!1")
                                      (("2"
                                        (expand*
                                         "wf_MP"
                                         "wf_MVA"
                                         "wf_Trans")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (inst?)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand "related_states")
                                      (("3"
                                        (hide-all-but
                                         (-2 -4 -14 -15 1))
                                        (("3"
                                          (prop)
                                          (("1"
                                            (hide -3)
                                            (("1"
                                              (expand*
                                               "wf_state"
                                               "wf_AState"
                                               "wf_ghoststate")
                                              (("1"
                                                (prop)
                                                (("1"
                                                  (expand "is_ghost")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (rewrite -6)
                                            (("2"
                                              (expand "MP_modeled?")
                                              (("2"
                                                (prop)
                                                (("1"
                                                  (expand
                                                   "MVA_modeled?")
                                                  (("1"
                                                    (prop)
                                                    (("1"
                                                      (expand
                                                       "MVA_cp_modeled?")
                                                      (("1"
                                                        (rewrite -8)
                                                        (("1"
                                                          (expand
                                                           "MVA_cps_modeled?")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (rewrite
                                                                 -5)
                                                                (("1"
                                                                  (use
                                                                   "wf_state_ghost_not_local_or_field"
                                                                   ("p"
                                                                    "ann_program(mp!1)"))
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split)
                                                                      (("1"
                                                                        (expand
                                                                         "lookup")
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (expand
                                                                             "val2int")
                                                                            (("1"
                                                                              (apply-extensionality
                                                                               3)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (use
                                                                         "new_vars_ghost_in_ann_program")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (use
                                                                             "new_vars_derived_from_mp")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "MVA_cps_modeled?")
                                                      (("2"
                                                        (skosimp)
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (rewrite
                                                               -6)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (prop)
                                                                  (("2"
                                                                    (use
                                                                     "wf_new_vars")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (expand
                                                       "MVA_vars_modeled?")
                                                      (("3"
                                                        (skosimp)
                                                        (("3"
                                                          (inst?)
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (rewrite
                                                               -7)
                                                              (("3"
                                                                (lift-if)
                                                                (("3"
                                                                  (prop)
                                                                  (("3"
                                                                    (expand*
                                                                     "wf_state"
                                                                     "wf_AState"
                                                                     "wf_Store")
                                                                    (("3"
                                                                      (flatten)
                                                                      (("3"
                                                                        (inst?)
                                                                        (("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (expand
                                                                             "var_names")
                                                                            (("3"
                                                                              (skosimp)
                                                                              (("3"
                                                                                (use
                                                                                 "wf_new_vars")
                                                                                (("3"
                                                                                  (flatten)
                                                                                  (("3"
                                                                                    (inst
                                                                                     -2
                                                                                     "f!1")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand*
                                                   "Program_modeled?"
                                                   "Program_gvs_modeled?")
                                                  (("2"
                                                    (prop)
                                                    (("2"
                                                      (skosimp)
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (prop)
                                                              (("2"
                                                                (hide
                                                                 -5)
                                                                (("2"
                                                                  (expand*
                                                                   "wf_state"
                                                                   "wf_ghoststate")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (expand*
                                                                         "is_ghost"
                                                                         "var_names")
                                                                        (("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (use
                                                                             "wf_new_vars")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 -3
                                                                                 -4)
                                                                                (("2"
                                                                                  (expand*
                                                                                   "disjoint?"
                                                                                   "empty?"
                                                                                   "intersection"
                                                                                   "member"
                                                                                   "var_names"
                                                                                   "declared_var_names")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (inst
                                                                                         1
                                                                                         "new_cp_gvd(mp!1)")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "new_cp_gvd"
                                                                                           1
                                                                                           2)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               "new_gvds"
                                                                                               "add"
                                                                                               "member")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         1
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "var_names")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "related_states" -)
                (("2" (flatten)
                  (("2" (use "derive_yields_wf_state_AP")
                    (("1" (assert) nil nil)
                     ("2" (hide-all-but (-1 1))
                      (("2" (expand "wf_Body")
                        (("2" (split)
                          (("1" (skosimp)
                            (("1" (apply (repeat (expand "var_names")))
                              (("1"
                                (expand* "add" "member" "singleton")
                                (("1"
                                  (expand*
                                   "ext_declared_var_names"
                                   "union"
                                   "member")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (hide 1 2)
                                      (("1"
                                        (expand*
                                         "var_names"
                                         "getGhostDecls")
                                        (("1"
                                          (split)
                                          (("1"
                                            (use
                                             "ann_program_defines_MVA_vars")
                                            (("1"
                                              (use "cp_new_ghostvar")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (skosimp)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (use
                                             "ann_program_defines_MVA_vars")
                                            (("2"
                                              (use
                                               "new_vars_derived_from_mp")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (ground)
                                                    (("2"
                                                      (skosimp)
                                                      (("2"
                                                        (inst? 1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst? 1)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skosimp)
                            (("2" (apply (repeat (expand "subterm")))
                              (("2"
                                (ground)
                                (("2"
                                  (rewrite -1)
                                  (("2"
                                    (beta)
                                    (("2"
                                      (expand*
                                       "var_names"
                                       "getGhostDecls")
                                      (("2"
                                        (use
                                         "ann_program_defines_MVA_vars")
                                        (("2"
                                          (use "cp_new_ghostvar")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (typepred "mp!1")
              (("2" (expand* "wf_MP" "wf_MVA" "wf_Trans")
                (("2" (flatten)
                  (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((derive def-decl "bool" Semantics nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (update_vars const-decl "Stmt" AnnotateEvent nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (PState type-eq-decl nil State nil)
    (Store type-eq-decl nil State nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (Class type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil)
    (Expr type-eq-decl nil Body_adt nil)
    (Stmt type-eq-decl nil Body_adt nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (BoolExpr type-eq-decl nil Body_adt nil)
    (FieldDecl type-eq-decl nil Program nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (OneAction type-eq-decl nil MVA nil)
    (list type-decl nil list_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (AState type-eq-decl nil MVASemantics nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (related_states const-decl "boolean" Equivalence nil)
    (wf_AState const-decl "boolean" MVASemantics nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (is_ghost const-decl "boolean" SemanticsJML nil)
    (MP_modeled? const-decl "boolean" Equivalence nil)
    (Program_gvs_modeled? const-decl "boolean" Equivalence nil)
    (Program_modeled? const-decl "boolean" Equivalence nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (declared_var_names const-decl "finite_set[Name]" ProgramFunctions
     nil)
    (intersection const-decl "set" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (new_gvds const-decl "finite_set[FieldDecl]"
     NewVariableDeclarations nil)
    (add const-decl "(nonempty?)" sets nil) nil
    (MVA_modeled? const-decl "boolean" Equivalence nil)
    (MVA_vars_modeled? const-decl "boolean" Equivalence nil) nil
    (wf_Store const-decl "boolean" MVASemantics nil)
    (wf_new_vars formula-decl nil NewVariableDeclarations nil)
    (MVA_cp_modeled? const-decl "boolean" Equivalence nil)
    (MVA_cps_modeled? const-decl "boolean" Equivalence nil)
    (wf_state_ghost_not_local_or_field formula-decl nil
     AnnotatedProgramSemantics nil)
    (i adt-accessor-decl "[(Int?) -> int]" Val_adt nil)
    (Val_Int_extensionality formula-decl nil Val_adt nil)
    (new_vars_derived_from_mp formula-decl nil NewVariableDeclarations
     nil)
    (new_vars_ghost_in_ann_program formula-decl nil
     AnnotateProgramProperties nil)
    (unique const-decl "(injective?[CP, nat])" NewVariableDeclarations
     nil)
    (name_of const-decl "(injective?[CP, (legal_names(mp))])"
     NewVariableDeclarations nil)
    (injective? const-decl "bool" functions nil)
    (legal_names const-decl "set[Name]" VariableNames nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)"
     AnnotatedProgramSemantics nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (Excpt type-decl nil Excpt_adt nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (val2int const-decl "int" State nil)
    (Int adt-constructor-decl "[int -> (Int?)]" Val_adt nil)
    (Int? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (cp const-decl "{n: Name | NOT forbidden_names(mp)(n)}"
     VariableNames nil)
    (forbidden_names const-decl "set[Name]" VariableNames nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (wf_Trans const-decl "boolean" WellFormedMVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (suffix_reflexive formula-decl nil listfuncs nil)
    (ann_action_preserves_related_states formula-decl nil
     AnnEventPreservesRelatedStates nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (update_store const-decl "Store" State nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (union const-decl "set" sets nil)
    (ext_declared_var_names const-decl "finite_set[Name]"
     ProgramFunctions nil)
    (cp_new_ghostvar formula-decl nil NewVariableDeclarations nil)
    (ann_program_defines_MVA_vars formula-decl nil
     AnnotateProgramProperties nil)
    (getGhostDecls const-decl "finite_set[FieldDecl]" ProgramFunctions
     nil)
    (singleton const-decl "(singleton?)" sets nil)
    (subterm adt-def-decl "boolean" Body_adt nil) nil
    (NumVarEval adt-constructor-decl "[Name -> (NumVarEval?)]" Body_adt
     nil)
    (NExpr adt-constructor-decl "[NumExpr -> (NExpr?)]" Body_adt nil)
    (NumExpr type-eq-decl nil Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Int? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set adt-constructor-decl "[[Name, Expr] -> (Set?)]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil) nil
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (Body type-decl nil Body_adt nil)
    (Unit? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Unit adt-constructor-decl "(Unit?)" Val_adt nil)
    (derive_yields_wf_state_AP formula-decl nil
     AnnotatedProgramSemantics nil)
    (Name formal-nonempty-type-decl nil AnnEventPreservesRelatedStates
     nil)
    (CP formal-nonempty-type-decl nil AnnEventPreservesRelatedStates
     nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (complete const-decl "boolean" MVASemantics nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil))
   2486859 24820 t shostak))
 (ann_event_preserves_related_states_TCC1 0
  (ann_event_preserves_related_states_TCC1-1 nil 3403865307 nil
   ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (ann_event_preserves_related_states_TCC2 0
  (ann_event_preserves_related_states_TCC2-1 nil 3403865307 nil
   ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (ann_event_preserves_related_states 0
  (ann_event_preserves_related_states-1 nil 3403865308 3403892948
   ("" (skosimp*)
    ((""
      (expand* "ann_event" "derive" "execute_CaseJML" "on_method_MVA")
      (("" (expand* "extend" "id")
        (("" (ground)
          (("" (lift-if)
            (("" (ground)
              (("1" (expand* "step" "derive")
                (("1" (skosimp*)
                  (("1"
                    (name-replace "t1"
                     "choose(LAMBDA (t: Transition): ts(mva(mp!1))(t) AND scp(t) = cp(astate(sMP1!1)) AND
                                                                                                            event(t) = (# etype := et!1, mname := name(m!1) #) AND
                                                                                                            guard(t)(stA(astate(sMP1!1)), st(pstate(sMP1!1))))")
                    (("1" (typepred "t1")
                      (("1" (case "cps(mva(mp!1))(scp(t1))")
                        (("1"
                          (name-replace "ts"
                           "filter_event(mva(mp!1))(et!1)(name(m!1))"
                           :hide? nil)
                          (("1" (case "ts(t1)")
                            (("1"
                              (case "is_finite({t: Transition | ts(t) AND scp(t) = scp(t1)})")
                              (("1"
                                (name
                                 "brT"
                                 "ann_trans_cp(mp!1)(scp(t1), {t: Transition | ts(t) AND scp(t) = scp(t1)})")
                                (("1"
                                  (lemma
                                   "CaseJML_exclusive_branches_semantics[Name]")
                                  (("1"
                                    (inst
                                     -1
                                     "ann_program(mp!1)"
                                     "set2list(ann_event_set(mp!1)(ts))"
                                     "sAP1!1"
                                     "sAP2!1"
                                     "Unit"
                                     "n!1"
                                     "brT")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (skolem!)
                                          (("1"
                                            (replace
                                             -2
                                             -1
                                             :dir
                                             rl
                                             :hide?
                                             t)
                                            (("1"
                                              (hide
                                               -13
                                               -14
                                               -15
                                               -16
                                               -17
                                               -18
                                               -19
                                               -20
                                               -21
                                               1
                                               3)
                                              (("1"
                                                (expand*
                                                 "derive"
                                                 "execute_CaseJML"
                                                 "ann_trans_cp"
                                                 "ann_guard_actions")
                                                (("1"
                                                  (expand*
                                                   "extend"
                                                   "id")
                                                  (("1"
                                                    (name
                                                     "bT"
                                                     "(guard_to_expression(mva(mp!1))(guard(t1)), update_vars(mp!1)(t1))")
                                                    (("1"
                                                      (case
                                                       "ann_guard_actions_set(mp!1)({t:Transition | ts(t) AND scp(t) = scp(t1)})(bT)")
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (lemma
                                                             "CaseJML_exclusive_branches_semantics[Name]")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "ann_program(mp!1)"
                                                               "set2list(ann_guard_actions_set(mp!1)({t:Transition | ts(t) AND scp(t) = scp(t1)}))"
                                                               "sAP1!1"
                                                               "sAP2!1"
                                                               "Unit"
                                                               "n1!1"
                                                               "bT")
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (skolem!)
                                                                  (("1"
                                                                    (replace
                                                                     -7
                                                                     -1
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (beta)
                                                                      (("1"
                                                                        (lemma
                                                                         "update_vars_preserves_related_states")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "mp!1"
                                                                           "t1"
                                                                           "n1!2"
                                                                           "sMP1!1"
                                                                           "sMP2!1"
                                                                           "sAP1!1"
                                                                           "sAP2!1")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "derive"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "execute_CaseJML")
                                                                    (("2"
                                                                      (expand*
                                                                       "extend"
                                                                       "id")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (skosimp)
                                                                  (("3"
                                                                    (use
                                                                     "before_distinct[[BoolExpr, Stmt]]")
                                                                    (("3"
                                                                      (use
                                                                       "before_member[[BoolExpr, Stmt]]")
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (use
                                                                           "set2list_same_elements[[BoolExpr, Stmt]]")
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (expand
                                                                               "member"
                                                                               -1)
                                                                              (("3"
                                                                                (expand
                                                                                 "ann_guard_actions_set"
                                                                                 -1)
                                                                                (("3"
                                                                                  (skosimp)
                                                                                  (("3"
                                                                                    (replace
                                                                                     -3
                                                                                     :hide?
                                                                                     t)
                                                                                    (("3"
                                                                                      (replace
                                                                                       -11
                                                                                       :dir
                                                                                       rl
                                                                                       :hide?
                                                                                       t)
                                                                                      (("3"
                                                                                        (case
                                                                                         "NOT t!1 = t1")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -3
                                                                                           -4
                                                                                           -6
                                                                                           -7
                                                                                           -8
                                                                                           -9
                                                                                           -10
                                                                                           -11
                                                                                           -20
                                                                                           2
                                                                                           4
                                                                                           5
                                                                                           6)
                                                                                          (("1"
                                                                                            (expand*
                                                                                             "well_behaved_MVA"
                                                                                             "guard_to_expression_behavior")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "t!1"
                                                                                                 "sAP1!1"
                                                                                                 "astate(sMP1!1)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -)
                                                                                                    (("1"
                                                                                                      (skosimp)
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "mva(mp!1)")
                                                                                                        (("1"
                                                                                                          (expand*
                                                                                                           "complete"
                                                                                                           "deterministic")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "t1"
                                                                                                               "t!1"
                                                                                                               "stA(astate(sMP1!1))"
                                                                                                               "st(pstate(sAP1!1))")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -14
                                                                                                                   -10
                                                                                                                   :dir
                                                                                                                   rl
                                                                                                                   :hide?
                                                                                                                   t)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "filter_event")
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "NOT v!2 = Bool(TRUE)")
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "determ_step_AP")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "ann_program(mp!1)"
                                                                                                                                 "n!2"
                                                                                                                                 "m2!2"
                                                                                                                                 "e!1"
                                                                                                                                 "v!2"
                                                                                                                                 "v!1"
                                                                                                                                 "sAP1!1"
                                                                                                                                 "sAP1!1"
                                                                                                                                 "tau!2")
                                                                                                                                (("1"
                                                                                                                                  (ground)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (use
                                                                                                                                       "derive_boolean_expr_type"
                                                                                                                                       ("p"
                                                                                                                                        "ann_program(mp!1)"))
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            1
                                                                                                                                            2))
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "FORALL (v : Val) : Bool?(v) IMPLIES b(v) OR NOT b(v)")
                                                                                                                                            (("1"
                                                                                                                                              (inst?)
                                                                                                                                              (("1"
                                                                                                                                                (prop)
                                                                                                                                                (("1"
                                                                                                                                                  (decompose-equality
                                                                                                                                                   2)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (decompose-equality
                                                                                                                                                   2)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (skosimp)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "id")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "wf_BoolExpr")
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand*
                                                                                                                             "related_states"
                                                                                                                             "MP_modeled?"
                                                                                                                             "Program_modeled?")
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (decompose-equality
                                                                                                                             1)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -5
                                                                                                       -1
                                                                                                       :dir
                                                                                                       rl
                                                                                                       :hide?
                                                                                                       t)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "filter_event")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (expand*
                                                                                                       "related_states"
                                                                                                       "MP_modeled?")
                                                                                                      (("3"
                                                                                                        (flatten)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("4"
                                                                                                      (expand*
                                                                                                       "related_states"
                                                                                                       "wf_state"
                                                                                                       "wf_state")
                                                                                                      (("4"
                                                                                                        (flatten)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("5"
                                                                                                      (expand
                                                                                                       "related_states")
                                                                                                      (("5"
                                                                                                        (flatten)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (skosimp)
                                                                  (("4"
                                                                    (replace
                                                                     -7
                                                                     -1
                                                                     :dir
                                                                     rl)
                                                                    (("4"
                                                                      (beta)
                                                                      (("4"
                                                                        (hide
                                                                         -2
                                                                         -3
                                                                         -4
                                                                         -5
                                                                         -6
                                                                         -7
                                                                         -8
                                                                         2
                                                                         3
                                                                         4)
                                                                        (("4"
                                                                          (expand*
                                                                           "well_behaved_MVA"
                                                                           "guard_to_expression_behavior")
                                                                          (("4"
                                                                            (flatten)
                                                                            (("4"
                                                                              (inst
                                                                               -
                                                                               "t1"
                                                                               "sAP1!1"
                                                                               "astate(sMP1!1)")
                                                                              (("4"
                                                                                (expand
                                                                                 "related_states")
                                                                                (("4"
                                                                                  (flatten)
                                                                                  (("4"
                                                                                    (assert)
                                                                                    (("4"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "determ_step_AP")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "ann_program(mp!1)"
                                                                                             "n!2"
                                                                                             "m1!2"
                                                                                             "e!1"
                                                                                             "v!2"
                                                                                             "v!1"
                                                                                             "sAP1!1"
                                                                                             "sAP1!1"
                                                                                             "tau!2")
                                                                                            (("1"
                                                                                              (ground)
                                                                                              (("1"
                                                                                                (expand*
                                                                                                 "MP_modeled?"
                                                                                                 "Program_modeled?")
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "wf_BoolExpr")
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "MP_modeled?")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (comment
                                                                                         "Have to do a case to get wf_state(mp!1)(sMP1!1) because expanding related_states did not gave it")
                                                                                        (("3"
                                                                                          (case
                                                                                           "wf_state(mp!1)(sMP1!1)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "wf_state"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          ";;; Have to do a case to get wf_state(mp!1)(sMP1!1) because expanding related_states did not gave it"))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("5"
                                                                  (use
                                                                   "set2list_same_elements[[BoolExpr, Stmt]]")
                                                                  (("5"
                                                                    (assert)
                                                                    (("5"
                                                                      (expand
                                                                       "member"
                                                                       1)
                                                                      (("5"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (replace
                                                                 -6
                                                                 1
                                                                 :dir
                                                                 rl
                                                                 :hide?
                                                                 t)
                                                                (("2"
                                                                  (beta)
                                                                  (("2"
                                                                    (use
                                                                     "update_vars_wf_Stmt")
                                                                    (("2"
                                                                      (use
                                                                       "guard_to_expression_wf_BoolExpr")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace
                                                         -1
                                                         1
                                                         :dir
                                                         rl
                                                         :hide?
                                                         t)
                                                        (("2"
                                                          (expand
                                                           "ann_guard_actions_set")
                                                          (("2"
                                                            (inst?)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "derive" 1)
                                          (("2"
                                            (expand "execute_CaseJML")
                                            (("2"
                                              (expand* "extend" "id")
                                              (("2"
                                                (expand "derive" 1)
                                                (("2"
                                                  (inst
                                                   1
                                                   "tau!1"
                                                   "v1!1"
                                                   "m1!1"
                                                   "m2!1")
                                                  (("2"
                                                    (ground)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (skosimp)
                                          (("3"
                                            (use
                                             "before_member[[BoolExpr, Stmt]]")
                                            (("3"
                                              (use
                                               "before_distinct[[BoolExpr, Stmt]]")
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (use
                                                   "set2list_same_elements[[BoolExpr, Stmt]]")
                                                  (("3"
                                                    (assert)
                                                    (("3"
                                                      (expand
                                                       "member"
                                                       -1)
                                                      (("3"
                                                        (expand
                                                         "ann_event_set"
                                                         -1)
                                                        (("3"
                                                          (skosimp)
                                                          (("3"
                                                            (replace
                                                             -3
                                                             :hide?
                                                             t)
                                                            (("3"
                                                              (replace
                                                               -6
                                                               :dir
                                                               rl
                                                               :hide?
                                                               t)
                                                              (("3"
                                                                (case
                                                                 "NOT q!1 = scp(t1)")
                                                                (("1"
                                                                  (expand
                                                                   "related_states")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (hide-all-but
                                                                       (-1
                                                                        -5
                                                                        -9
                                                                        -11
                                                                        -27
                                                                        -28
                                                                        1
                                                                        3))
                                                                      (("1"
                                                                        (expand*
                                                                         "ann_trans_cp"
                                                                         "derive"
                                                                         "derive"
                                                                         "derive")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand*
                                                                             "check_for_exception_final"
                                                                             "check_for_exception")
                                                                            (("1"
                                                                              (ground)
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (decompose-equality
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     -6)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       -11)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -9
                                                                                         :dir
                                                                                         rl
                                                                                         :hide?
                                                                                         t)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "MP_modeled_lookup_correspondence")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "mp!1"
                                                                                             "scp(t1)"
                                                                                             "q!1"
                                                                                             "sMP1!1"
                                                                                             "sAP1!1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (skosimp)
                                          (("4"
                                            (replace
                                             -2
                                             -1
                                             :dir
                                             rl
                                             :hide?
                                             t)
                                            (("4"
                                              (expand
                                               "related_states"
                                               -)
                                              (("4"
                                                (flatten)
                                                (("4"
                                                  (hide-all-but
                                                   (-1
                                                    -5
                                                    -7
                                                    -23
                                                    -24
                                                    1
                                                    3))
                                                  (("4"
                                                    (expand*
                                                     "ann_trans_cp"
                                                     "derive"
                                                     "derive"
                                                     "derive")
                                                    (("4"
                                                      (skosimp)
                                                      (("4"
                                                        (replace
                                                         -3
                                                         :dir
                                                         rl
                                                         :hide?
                                                         t)
                                                        (("4"
                                                          (expand*
                                                           "check_for_exception_final"
                                                           "check_for_exception")
                                                          (("4"
                                                            (ground)
                                                            (("4"
                                                              (rewrite
                                                               -1)
                                                              (("4"
                                                                (decompose-equality
                                                                 1)
                                                                (("4"
                                                                  (rewrite
                                                                   -4)
                                                                  (("4"
                                                                    (rewrite
                                                                     -7)
                                                                    (("4"
                                                                      (use
                                                                       "MP_modeled_lookup_correspondence")
                                                                      (("4"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("5"
                                          (case
                                           "ann_event_set(mp!1)(ts)(brT)")
                                          (("1"
                                            (use
                                             "set2list_same_elements[[BoolExpr, Stmt]]")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "member" 1)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace
                                             -1
                                             1
                                             :dir
                                             rl
                                             :hide?
                                             t)
                                            (("2"
                                              (expand
                                               "ann_event_set"
                                               1)
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (rewrite
                                                     "nonempty_exists")
                                                    (("2"
                                                      (inst 1 "t1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replace -1 1 :dir rl)
                                      (("2"
                                        (use "ann_trans_cp_wf")
                                        (("2"
                                          (beta)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (split -1)
                                              (("1" (prop) nil nil)
                                               ("2"
                                                (lemma
                                                 "subset_transitive[Transition]")
                                                (("2"
                                                  (inst
                                                   -
                                                   "{t: Transition | ts(t) AND scp(t) = scp(t1)}"
                                                   "ts"
                                                   "ts(mva(mp!1))")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (use
                                                       "filter_event_subset")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (expand*
                                                             "subset?"
                                                             "member")
                                                            (("2"
                                                              (skosimp)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (propax) nil nil))
                                nil)
                               ("2"
                                (hide-all-but (-2 1))
                                (("2"
                                  (lemma "finite_subset[Transition]")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (inst
                                       -
                                       "ts(mva(mp!1))"
                                       "{t: Transition | ts(t) AND scp(t) = scp(t1)}")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (expand* "subset?" "member")
                                          (("2"
                                            (skosimp)
                                            (("2"
                                              (replace
                                               -3
                                               :dir
                                               rl
                                               :hide?
                                               t)
                                              (("2"
                                                (expand "filter_event")
                                                (("2"
                                                  (flatten)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (replace -1 1 :dir rl)
                              (("2"
                                (expand "filter_event")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but (-1 1))
                          (("2" (typepred "mp!1")
                            (("2" (expand* "wf_MP" "wf_MVA" "wf_Trans")
                              (("2"
                                (flatten)
                                (("2"
                                  (inst?)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide-all-but (-1 -13 1))
                      (("2" (expand* "nonempty?" "empty?" "member")
                        (("2" (typepred "mva(mp!1)")
                          (("2" (expand* "complete" "total")
                            (("2" (flatten)
                              (("2"
                                (inst
                                 -
                                 "cp(astate(sMP1!1))"
                                 "(# etype := et!1, mname := name(m!1) #)"
                                 "stA(astate(sMP1!1))"
                                 "st(pstate(sMP1!1))")
                                (("2"
                                  (expand* "wf_state" "wf_AState")
                                  (("2"
                                    (ground)
                                    (("2"
                                      (skolem!)
                                      (("2" (inst?) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "related_states") (("2" (propax) nil nil))
                nil)
               ("3" (expand "set2list")
                (("3" (lift-if)
                  (("3" (ground)
                    (("3" (hide-all-but (1 5))
                      (("3"
                        (expand* "empty?" "member" "ann_event_set"
                         "filter_event")
                        (("3" (skosimp*)
                          (("3" (rewrite "nonempty_exists")
                            (("3" (skolem - "t")
                              (("3"
                                (typepred "t")
                                (("3"
                                  (typepred "mp!1")
                                  (("3"
                                    (expand*
                                     "wf_MP"
                                     "wf_MVA"
                                     "wf_Trans")
                                    (("3"
                                      (flatten)
                                      (("3"
                                        (inst?)
                                        (("3"
                                          (prop)
                                          (("3"
                                            (case
                                             "event(t) = (# etype := et!1, mname := name(m!1) #)")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (decompose-equality 1)
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)
    (extend const-decl "R" extend nil)
    (finite_remove application-judgement "finite_set" finite_sets nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (step const-decl "AState" MVASemantics nil)
    (CP formal-nonempty-type-decl nil AnnEventPreservesRelatedStates
     nil)
    (Name formal-nonempty-type-decl nil AnnEventPreservesRelatedStates
     nil)
    (Action type-eq-decl nil MVA nil) (Event type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (complete const-decl "boolean" MVASemantics nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVASemantics nil)
    (Store type-eq-decl nil State nil)
    (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Stmt type-eq-decl nil Body_adt nil)
    (BoolExpr type-eq-decl nil Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil)
    (FieldDecl type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Class type-eq-decl nil Program nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (finite_subset formula-decl nil finite_sets nil)
    (ann_trans_cp const-decl "[BoolExpr, Stmt]" AnnotateEvent nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (FF? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TT? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Body type-decl nil Body_adt nil)
    (wf_Stmt const-decl "boolean" WellFormedProgram nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (ann_program const-decl "Program" AnnotateProgram nil) nil nil
    (wf_BoolExpr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Unit adt-constructor-decl "(Unit?)" Val_adt nil)
    (Unit? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (ann_event_set const-decl "finite_set[[BoolExpr, Stmt]]"
     AnnotateEvent nil)
    (set2list def-decl "list[T]" set2list nil)
    (list type-decl nil list_adt nil)
    (ann_guard_actions const-decl "list[[BoolExpr, Stmt]]"
     AnnotateEvent nil)
    (PSt type-eq-decl nil State nil)
    (guard_to_expression const-decl "BoolExpr" MVASemantics nil)
    (update_vars const-decl "Stmt" AnnotateEvent nil)
    (update_vars_wf_Stmt formula-decl nil AnnotateProgramProperties
     nil)
    (guard_to_expression_wf_BoolExpr formula-decl nil
     AnnotateProgramProperties nil)
    (update_vars_preserves_related_states formula-decl nil
     AnnEventPreservesRelatedStates nil)
    (before_distinct formula-decl nil listfuncs nil)
    (guard_to_expression_behavior const-decl "boolean" Equivalence nil)
    (well_behaved_MVA const-decl "boolean" Equivalence nil)
    (MP_modeled? const-decl "boolean" Equivalence nil)
    (Program_modeled? const-decl "boolean" Equivalence nil)
    (related_states const-decl "boolean" Equivalence nil)
    (Bool? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Bool adt-constructor-decl "[bool -> (Bool?)]" Val_adt nil)
    (TRUE const-decl "bool" booleans nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil) nil
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (b adt-accessor-decl "[(Bool?) -> bool]" Val_adt nil)
    (Val_Bool_extensionality formula-decl nil Val_adt nil)
    (FALSE const-decl "bool" booleans nil)
    (id_preserves application-judgement "S" identity_props nil)
    (derive_boolean_expr_type formula-decl nil SemanticsProofs nil)
    (bijective? const-decl "bool" functions nil)
    (Excpt type-decl nil Excpt_adt nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)"
     AnnotatedProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML
     nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML
     nil)
    (on_method_exit_normal const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (determ_step_AP formula-decl nil AnnotatedProgramSemantics nil)
    (deterministic const-decl "boolean" MVASemantics nil)
    (wf_state const-decl "boolean" State nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (member const-decl "bool" sets nil)
    (set2list_same_elements formula-decl nil set2list nil)
    (before_member formula-decl nil listfuncs nil) nil nil
    (ann_guard_actions_set const-decl "finite_set[[BoolExpr, Stmt]]"
     AnnotateEvent nil)
    (check_for_exception const-decl "bool" Semantics nil)
    (check_for_exception_final const-decl "bool" Semantics nil)
    (name_of const-decl "(injective?[CP, (legal_names(mp))])"
     NewVariableDeclarations nil)
    (injective? const-decl "bool" functions nil)
    (legal_names const-decl "set[Name]" VariableNames nil)
    (val2int const-decl "int" State nil)
    (Int adt-constructor-decl "[int -> (Int?)]" Val_adt nil)
    (Int? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (MP_modeled_lookup_correspondence formula-decl nil
     RelatedStatesProperties nil)
    (forbidden_names const-decl "set[Name]" VariableNames nil)
    (cp const-decl "{n: Name | NOT forbidden_names(mp)(n)}"
     VariableNames nil)
    (nonempty_exists formula-decl nil sets_lemmas nil)
    (ann_trans_cp_wf formula-decl nil AnnotateProgramProperties nil)
    nil nil nil nil nil
    (subset_transitive formula-decl nil sets_lemmas nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset? const-decl "bool" sets nil)
    (filter_event_subset formula-decl nil AnnotateMethod nil)
    (CaseJML_exclusive_branches_semantics formula-decl nil
     APSemanticsProperties nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (is_finite const-decl "bool" finite_sets nil)
    (filter_event const-decl "finite_set[Transition]" AnnotateMethod
     nil)
    (wf_Trans const-decl "boolean" WellFormedMVA nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (total const-decl "boolean" MVASemantics nil)
    (wf_AState const-decl "boolean" MVASemantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ann_event const-decl "Stmt" AnnotateEvent nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML
     nil)
    (on_method_MVA const-decl "AState" MonitoredProgramSemantics nil)
    (derive def-decl "bool" Semantics nil))
   546936 33570 t shostak)))
(MethodCallsPreserveRelatedState
 (IMP_VariableNames_TCC1 0
  (IMP_VariableNames_TCC1-1 nil 3398591374 3401441513
   ("" (use "infinite_namespace") nil nil) unchecked nil 33 33 t nil))
 (IMP_AnnEventPreservesRelatedStates_TCC1 0
  (IMP_AnnEventPreservesRelatedStates_TCC1-1 nil 3403894040 nil
   ("" (assuming-tcc) nil nil) unfinished nil nil nil nil nil))
 (IMP_AnnEventPreservesRelatedStates_TCC2 0
  (IMP_AnnEventPreservesRelatedStates_TCC2-1 nil 3403894040 nil
   ("" (assuming-tcc) nil nil) unfinished nil nil nil nil nil))
 (on_method_entry_preserves_related_states_annotated_TCC1 0
  (on_method_entry_preserves_related_states_annotated_TCC1-1 nil
   3401441474 3403450300
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "b!1")
        (("" (use "ann_program_preserves_wf_body") nil nil)) nil))
      nil))
    nil)
   unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)
    (ann_program_preserves_wf_body formula-decl nil
     AnnotateProgramProperties nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState
     nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil)
    (FieldDecl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (BoolExpr type-eq-decl nil Body_adt nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Stmt type-eq-decl nil Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Class type-eq-decl nil Program nil)
    (PreProgram type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState
     nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (complete const-decl "boolean" MVASemantics nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil))
   1660 1470 t nil))
 (on_method_entry_preserves_related_states_annotated_TCC2 0
  (on_method_entry_preserves_related_states_annotated_TCC2-1 nil
   3401441474 3403450337
   ("" (skosimp*)
    (("" (expand "id")
      (("" (use "ann_program_preserves_wf_method") nil nil)) nil))
    nil)
   unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState
     nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState
     nil)
    (ann_program_preserves_wf_method formula-decl nil
     AnnotateProgramProperties nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (complete const-decl "boolean" MVASemantics nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Stmt type-eq-decl nil Body_adt nil)
    (BoolExpr type-eq-decl nil Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil)
    (FieldDecl type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Class type-eq-decl nil Program nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil))
   1904 1700 t nil))
 (on_method_entry_preserves_related_states_annotated_TCC3 0
  (on_method_entry_preserves_related_states_annotated_TCC3-1 nil
   3401441474 3403450341
   ("" (skosimp*) (("" (expand "id") (("" (propax) nil nil)) nil)) nil)
   unchecked ((id const-decl "(bijective?[T, T])" identity nil)) 552
   360 t nil))
 (on_method_entry_preserves_related_states_annotated_TCC4 0
  (on_method_entry_preserves_related_states_annotated_TCC4-1 nil
   3401706470 3403450342 ("" (expand "id") (("" (propax) nil nil)) nil)
   unchecked ((id const-decl "(bijective?[T, T])" identity nil)) 278
   280 t nil))
 (on_method_entry_preserves_related_states_annotated 0
  (on_method_entry_preserves_related_states_annotated-2 nil 3403466721
   3403909193
   ("" (skosimp*)
    (("" (expand* "on_method_entry_MP" "on_method_entry")
      (("" (flatten)
        (("" (assert)
          (("" (skosimp*)
            (("" (use "related_states_implies_same_exception")
              (("" (assert)
                (("" (skosimp*)
                  (("" (expand* "id" "check_assertion")
                    (("" (skosimp*)
                      (("" (expand "lookup_inv")
                        (("" (use "get_class_equivalence")
                          (("" (assert)
                            (("" (replace -1)
                              ((""
                                (assert)
                                ((""
                                  (expand "ann_class" -22)
                                  ((""
                                    (assert)
                                    ((""
                                      (lift-if -22)
                                      ((""
                                        (use "get_class_in_classes")
                                        ((""
                                          (assert)
                                          ((""
                                            (replace -12 :dir rl)
                                            ((""
                                              (replace -23)
                                              ((""
                                                (rewrite "derive" -25)
                                                ((""
                                                  (skosimp*)
                                                  ((""
                                                    (case
                                                     "related_states(mp!1)(sMP1!1, tau!1) AND v1!1 = Bool(TRUE)")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (copy -12)
                                                        (("1"
                                                          (apply
                                                           (repeat
                                                            (inst?
                                                             -1
                                                             :where
                                                             (-17
                                                              -30))))
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (case
                                                                   "related_states(mp!1)(tau1!2, tau1!1)")
                                                                  (("1"
                                                                    (rewrite
                                                                     "ann_method_pre")
                                                                    (("1"
                                                                      (copy
                                                                       -15)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -1
                                                                           :where
                                                                           (-23
                                                                            -37))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (case
                                                                               "related_states(mp!1)(tau2!2, tau2!1)")
                                                                              (("1"
                                                                                (use
                                                                                 "ann_method_pre_set")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "derive"
                                                                                     -43)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -43)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skosimp*)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -6)
                                                                                            (("2"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -24
                                                                                                 :where
                                                                                                 (-33
                                                                                                  -3))))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -24)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -35)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "related_states_implies_same_exception")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "derive"
                                                                                                               -8)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "ann_method"
                                                                                                         -6)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "derive"
                                                                                                             -6)
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    -3
                                                                                                                    -4
                                                                                                                    -5
                                                                                                                    -19
                                                                                                                    -22
                                                                                                                    -25
                                                                                                                    -26
                                                                                                                    -27
                                                                                                                    1
                                                                                                                    6))
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "methods(get_monitored_class(mp!1))(md!1)")
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "ann_event_preserves_related_states")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (hide-all-but
                                                                                                                           (-1
                                                                                                                            -4
                                                                                                                            -5
                                                                                                                            2))
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "related_states")
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "derive_yields_wf_state_AP")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "wf_Body")
                                                                                                                                    (("2"
                                                                                                                                      (split)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp)
                                                                                                                                        (("1"
                                                                                                                                          (auto-rewrite
                                                                                                                                           "var_names"
                                                                                                                                           "union"
                                                                                                                                           "member")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "singleton")
                                                                                                                                              (("1"
                                                                                                                                                (use
                                                                                                                                                 "ann_program_ext_declared_var_names")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (split)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           2
                                                                                                                                                           "new_cp_gvd(mp!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand*
                                                                                                                                                             "new_gvds"
                                                                                                                                                             "add")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "new_cp_gvd")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (case
                                                                                                                                                           "cps(mva(mp!1))(halted)")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             2
                                                                                                                                                             "new_cp_gvd(mp!1)(halted)")
                                                                                                                                                            (("1"
                                                                                                                                                              (use
                                                                                                                                                               "new_cp_gvd_new_ghostvar")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "new_cp_gvd"
                                                                                                                                                                   2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "halted")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "mva(mp!1)")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "complete")
                                                                                                                                                              (("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp)
                                                                                                                                        (("2"
                                                                                                                                          (apply
                                                                                                                                           (repeat
                                                                                                                                            (expand
                                                                                                                                             "subterm")))
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand*
                                                                                                                                 "derive"
                                                                                                                                 "execute_assert"
                                                                                                                                 "check_assertion")
                                                                                                                                (("2"
                                                                                                                                  (prop)
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (apply
                                                                                                                                       (repeat
                                                                                                                                        (expand
                                                                                                                                         "derive")))
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("2"
                                                                                                                                            (expand*
                                                                                                                                             "check_for_exception_final"
                                                                                                                                             "check_for_exception")
                                                                                                                                            (("2"
                                                                                                                                              (ground)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -5
                                                                                                                                                 :dir
                                                                                                                                                 rl
                                                                                                                                                 :hide?
                                                                                                                                                 t)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -12
                                                                                                                                                   :dir
                                                                                                                                                   rl
                                                                                                                                                   :hide?
                                                                                                                                                   t)
                                                                                                                                                  (("2"
                                                                                                                                                    (lift-if)
                                                                                                                                                    (("2"
                                                                                                                                                      (ground)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand*
                                                                                                                                                         "update_PState"
                                                                                                                                                         "raise")
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1
                                                                                                                                                           6)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "MP_modeled?")
                                                                                                                                                            (("2"
                                                                                                                                                              (prop)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand*
                                                                                                                                                                 "MVA_modeled?"
                                                                                                                                                                 "MVA_cp_modeled?"
                                                                                                                                                                 "MVA_cps_modeled?"
                                                                                                                                                                 "MVA_vars_modeled?")
                                                                                                                                                                nil
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand*
                                                                                                                                                                 "Program_modeled?"
                                                                                                                                                                 "Program_gvs_modeled?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (prop)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -3
                                                                                                                                                                     2
                                                                                                                                                                     :hide?
                                                                                                                                                                     t)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -3
                                                                                                                                                                       2
                                                                                                                                                                       :hide?
                                                                                                                                                                       t)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           -6)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             -12)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (use
                                                                                                                                                                               "MP_modeled_lookup_correspondence")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "halted")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (ground)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (typepred
                                                                                                                                                                                     "mva(mp!1)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "complete")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand*
                                                                                                                                                                                     "wf_state"
                                                                                                                                                                                     "wf_AState")
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (case
                                                                                                                       "get_monitored_class(mp!1) = down(get_class(program(mp!1))(a!1))")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "lookup_mthd_in_methods_class")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (use
                                                                                                                         "name_get_monitored_class")
                                                                                                                        (("2"
                                                                                                                          (use
                                                                                                                           "get_monitored_class_in_classes")
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "program(mp!1)")
                                                                                                                            (("2"
                                                                                                                              (expand*
                                                                                                                               "wf_Program"
                                                                                                                               "wf_program_has_unique_class_names_def")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (inst?)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "md!1")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "wf_Method")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (expand*
                                                                                                           "wf_Body"
                                                                                                           "subset?"
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -24)
                                                                                (("2"
                                                                                  (replace
                                                                                   -38)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (split
                                                                                               1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "related_states_preserved_by_raise")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (postpone)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "md!1")
                                                                              (("2"
                                                                                (expand
                                                                                 "wf_Method")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (expand*
                                                                                     "wf_Body"
                                                                                     "subset?"
                                                                                     "member")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "id")
                                                                          (("2"
                                                                            (use
                                                                             "ann_program_preserves_wf_body")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "check_for_exception_final")
                                                                    (("2"
                                                                      (expand
                                                                       "check_for_exception")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (replace
                                                                           -33)
                                                                          (("2"
                                                                            (replace
                                                                             -19)
                                                                            (("2"
                                                                              (case-replace
                                                                               "v!1 = v!3")
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      (("1"
                                                                                        (split
                                                                                         1)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skosimp*)
                                                                                          (("2"
                                                                                            (use
                                                                                             "related_states_preserved_by_raise")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (split
                                                                                 -32)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "derive_bottom_iff_exception_step"
                                                                                     ("p"
                                                                                      "mp!1"))
                                                                                    (("1"
                                                                                      (inst?
                                                                                       -1
                                                                                       :where
                                                                                       -21)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "related_states"
                                                                                           -3)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               "MP_modeled?"
                                                                                               "Program_modeled?")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (postpone)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -6)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (apply-extensionality
                                                                                             :hide?
                                                                                             t)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "program(mp!1)")
                                                                (("2"
                                                                  (expand*
                                                                   "wf_Program"
                                                                   "wf_Classes")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "wf_Class")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (replace
                                                                               -21
                                                                               :dir
                                                                               rl)
                                                                              (("2"
                                                                                (expand*
                                                                                 "wf_Body"
                                                                                 "subset?"
                                                                                 "member")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (expand
                                                             "id")
                                                            (("2"
                                                              (use
                                                               "ann_program_preserves_wf_body")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (rewrite
                                                       "derive"
                                                       -26)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (rewrite
                                                             "derive"
                                                             -27)
                                                            (("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (rewrite
                                                                 "derive"
                                                                 -28)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (rewrite
                                                                     "derive"
                                                                     -29)
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (rewrite
                                                                         "derive"
                                                                         -32)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (rewrite
                                                                               "derive"
                                                                               -33)
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (expand*
                                                                                   "check_for_exception_final"
                                                                                   "check_for_exception")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -38)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -36)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -31)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -35)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   :hide?
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "related_states_lookup_correspondence")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "halted")
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "cps(mva(mp!1))(cp(astate(sMP1!1))) AND cps(mva(mp!1))(halted)")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "mva(mp!1)")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "complete")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "related_states"
                                                                                                                     -)
                                                                                                                    (("2"
                                                                                                                      (expand*
                                                                                                                       "wf_state"
                                                                                                                       "wf_AState")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished nil 1317191 48250 t nil)
  (on_method_entry_preserves_related_states_annotated-1 nil 3400566287
   3403465803
   ("" (skosimp*)
    (("" (expand* "on_method_entry_MP" "on_method_entry")
      (("" (flatten)
        (("" (assert)
          (("" (skosimp*)
            (("" (use "related_states_implies_same_exception2")
              (("" (assert)
                (("" (skosimp*)
                  (("" (expand* "id" "check_assertion")
                    (("" (skosimp*)
                      (("" (expand "lookup_inv")
                        (("" (use "get_class_equivalence")
                          (("" (assert)
                            (("" (replace -1)
                              ((""
                                (assert)
                                ((""
                                  (expand "ann_class" -22)
                                  ((""
                                    (assert)
                                    ((""
                                      (lift-if -22)
                                      ((""
                                        (use "get_class_in_classes")
                                        ((""
                                          (assert)
                                          ((""
                                            (replace -12 :dir rl)
                                            ((""
                                              (replace -23)
                                              ((""
                                                (rewrite "derive" -25)
                                                ((""
                                                  (skosimp*)
                                                  ((""
                                                    (case
                                                     "related_states(mp!1)(sMP1!1, tau!1) AND v1!1 = Bool(TRUE)")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (copy -12)
                                                        (("1"
                                                          (apply
                                                           (repeat
                                                            (inst?
                                                             -1
                                                             :where
                                                             (-17
                                                              -30))))
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (case
                                                                   "related_states(mp!1)(tau1!2, tau1!1)")
                                                                  (("1"
                                                                    (rewrite
                                                                     "ann_method_pre")
                                                                    (("1"
                                                                      (copy
                                                                       -15)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -1
                                                                           :where
                                                                           (-23
                                                                            -37))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (case
                                                                               "related_states(mp!1)(tau2!2, tau2!1)")
                                                                              (("1"
                                                                                (use
                                                                                 "ann_method_pre_set")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "derive"
                                                                                     -43)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -43)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skosimp*)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -6)
                                                                                            (("2"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -24
                                                                                                 :where
                                                                                                 (-33
                                                                                                  -3))))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -24)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -35)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "related_states_implies_same_exception")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "derive"
                                                                                                               -8)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "ann_method"
                                                                                                         -6)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "derive"
                                                                                                             -6)
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    -3
                                                                                                                    -4
                                                                                                                    -5
                                                                                                                    -19
                                                                                                                    -22
                                                                                                                    -25
                                                                                                                    -26
                                                                                                                    -27
                                                                                                                    1
                                                                                                                    6))
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "methods(get_monitored_class(mp!1))(md!1)")
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "wf_state(ann_program(mp!1))(tau!3)")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "related_states"
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "wf_state(mp!1)(sMP2!1)")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "wf_state(ann_program(mp!1))(sAP2!1)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "ann_event_preserves_MP_modeled")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      -4
                                                                                                                                      -5
                                                                                                                                      -7
                                                                                                                                      -8
                                                                                                                                      2))
                                                                                                                                    (("1"
                                                                                                                                      (expand*
                                                                                                                                       "derive"
                                                                                                                                       "execute_assert"
                                                                                                                                       "check_assertion")
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         -4)
                                                                                                                                        (("1"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("2"
                                                                                                                                            (auto-rewrite
                                                                                                                                             "derive")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (skosimp*)
                                                                                                                                                (("2"
                                                                                                                                                  (expand*
                                                                                                                                                   "check_for_exception_final"
                                                                                                                                                   "check_for_exception")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (stop-rewrite
                                                                                                                                                       "derive")
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -6
                                                                                                                                                             :dir
                                                                                                                                                             rl
                                                                                                                                                             :hide?
                                                                                                                                                             t)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -9
                                                                                                                                                               :dir
                                                                                                                                                               rl
                                                                                                                                                               :hide?
                                                                                                                                                               t)
                                                                                                                                                              (("2"
                                                                                                                                                                (lift-if)
                                                                                                                                                                (("2"
                                                                                                                                                                  (split
                                                                                                                                                                   -13)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -2
                                                                                                                                                                       :dir
                                                                                                                                                                       rl
                                                                                                                                                                       :hide?
                                                                                                                                                                       t)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "halted_implies_JMLExc")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -13
                                                                                                                                                                             -1
                                                                                                                                                                             :hide?
                                                                                                                                                                             t)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -12
                                                                                                                                                                               -1
                                                                                                                                                                               :hide?
                                                                                                                                                                               t)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -7
                                                                                                                                                                                   :hide?
                                                                                                                                                                                   t)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -9
                                                                                                                                                                                     :hide?
                                                                                                                                                                                     t)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "MP_modeled_lookup_correspondence")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (ground)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "halted")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (typepred
                                                                                                                                                                                           "mva(mp!1)")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "complete")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("3"
                                                                                                                                                                                          (reveal
                                                                                                                                                                                           -11)
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (expand*
                                                                                                                                                                                             "wf_state"
                                                                                                                                                                                             "wf_AState")
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand*
                                                                                                                                                                       "update_PState"
                                                                                                                                                                       "raise")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1
                                                                                                                                                                         3)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand*
                                                                                                                                                                           "MP_modeled?"
                                                                                                                                                                           "halted_implies_JMLExc")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (prop)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand*
                                                                                                                                                                               "MVA_modeled?"
                                                                                                                                                                               "MVA_cp_modeled?"
                                                                                                                                                                               "MVA_cps_modeled?"
                                                                                                                                                                               "MVA_vars_modeled?")
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "Program_modeled?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (prop)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "Program_gvs_modeled?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               3)
                                                                                                                              (("2"
                                                                                                                                (use
                                                                                                                                 "derive_yields_wf_state_AP"
                                                                                                                                 ("sigma1"
                                                                                                                                  "tau!3"))
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "wf_Body")
                                                                                                                                    (("2"
                                                                                                                                      (split)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp)
                                                                                                                                        (("1"
                                                                                                                                          (auto-rewrite
                                                                                                                                           "var_names"
                                                                                                                                           "union"
                                                                                                                                           "member")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "singleton")
                                                                                                                                              (("1"
                                                                                                                                                (use
                                                                                                                                                 "ann_program_ext_declared_var_names")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (split)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           2
                                                                                                                                                           "new_cp_gvd(mp!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand*
                                                                                                                                                             "new_gvds"
                                                                                                                                                             "add")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "new_cp_gvd")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (inst
                                                                                                                                                           2
                                                                                                                                                           "new_halted_gvd(mp!1)")
                                                                                                                                                          (("2"
                                                                                                                                                            (use
                                                                                                                                                             "halted_gvd_new_ghostvar")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "new_halted_gvd"
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "halted")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp)
                                                                                                                                        (("2"
                                                                                                                                          (auto-rewrite
                                                                                                                                           "subterm")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             3)
                                                                                                                            (("2"
                                                                                                                              (expand*
                                                                                                                               "related_states")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "wf_state"
                                                                                                                                   (-6
                                                                                                                                    1))
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -5
                                                                                                                                     1
                                                                                                                                     :hide?
                                                                                                                                     t)
                                                                                                                                    (("2"
                                                                                                                                      (ground)
                                                                                                                                      (("1"
                                                                                                                                        (use
                                                                                                                                         "on_method_MVA_yields_wf_AState")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "wf_state"
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand*
                                                                                                                                         "wf_ghoststate"
                                                                                                                                         "is_ghost")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "related_states")
                                                                                                                        (("2"
                                                                                                                          (use
                                                                                                                           "derive_yields_wf_state_AP")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (use
                                                                                                                             "ann_event_wf_Body")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand*
                                                                                                                                 "subset?"
                                                                                                                                 "member"
                                                                                                                                 "filter_event")
                                                                                                                                (("2"
                                                                                                                                  (skosimp)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (case
                                                                                                                       "get_monitored_class(mp!1) = down(get_class(program(mp!1))(a!1))")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "lookup_mthd_in_methods_class")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (use
                                                                                                                         "name_get_monitored_class")
                                                                                                                        (("2"
                                                                                                                          (use
                                                                                                                           "get_monitored_class_in_classes")
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "program(mp!1)")
                                                                                                                            (("2"
                                                                                                                              (expand*
                                                                                                                               "wf_Program"
                                                                                                                               "wf_program_has_unique_class_names_def")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (inst?)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "md!1")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "wf_Method")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (expand*
                                                                                                           "wf_Body"
                                                                                                           "subset?"
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -24)
                                                                                (("2"
                                                                                  (replace
                                                                                   -38)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (split
                                                                                               1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "related_states_preserved_by_raise")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "derive_bottom_iff_exception_step"
                                                                                                       ("p"
                                                                                                        "ann_program(mp!1)"))
                                                                                                      (("2"
                                                                                                        (inst?
                                                                                                         -1
                                                                                                         :where
                                                                                                         -41)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "md!1")
                                                                              (("2"
                                                                                (expand
                                                                                 "wf_Method")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (expand*
                                                                                     "wf_Body"
                                                                                     "subset?"
                                                                                     "member")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (expand
                                                                           "id")
                                                                          (("2"
                                                                            (use
                                                                             "ann_program_preserves_wf_body")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "check_for_exception_final")
                                                                    (("2"
                                                                      (expand
                                                                       "check_for_exception")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (replace
                                                                           -33)
                                                                          (("2"
                                                                            (replace
                                                                             -19)
                                                                            (("2"
                                                                              (case-replace
                                                                               "v!1 = v!3")
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      (("1"
                                                                                        (split
                                                                                         1)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skosimp*)
                                                                                          (("2"
                                                                                            (use
                                                                                             "related_states_preserved_by_raise")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (split
                                                                                 -32)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "related_states_implies_same_exception2")
                                                                                    (("1"
                                                                                      (postpone)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (postpone)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (postpone)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (postpone)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (postpone)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (postpone)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((get_class_equivalence formula-decl nil AnnotateProgramProperties
     nil)
    (ann_class const-decl "Class" AnnotateClass nil)
    (name_of const-decl "(injective?[CP, (legal_names(mp))])"
     NewVariableDeclarations nil)
    (injective? const-decl "bool" functions nil)
    (legal_names const-decl "set[Name]" VariableNames nil)
    (Val_Int_eta formula-decl nil Val_adt nil)
    (val2int const-decl "int" State nil)
    (Int adt-constructor-decl "[int -> (Int?)]" Val_adt nil)
    (Int? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions
     nil)
    (get_monitored_class_in_classes formula-decl nil MonitoredProgram
     nil)
    (wf_program_has_unique_class_names_def const-decl "boolean"
     WellFormedProgram nil)
    (name_get_monitored_class formula-decl nil MonitoredProgram nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (singleton const-decl "(singleton?)" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (new_gvds const-decl "finite_set[FieldDecl]"
     NewVariableDeclarations nil)
    (add const-decl "(nonempty?)" sets nil)
    (ann_program_ext_declared_var_names formula-decl nil
     AnnotateProgramProperties nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (subterm adt-def-decl "boolean" Body_adt nil)
    (Assert adt-constructor-decl "[BoolExpr -> (Assert?)]" Body_adt
     nil)
    (derive_yields_wf_state_AP formula-decl nil
     AnnotatedProgramSemantics nil)
    (check_for_exception const-decl "bool" Semantics nil)
    (check_for_exception_final const-decl "bool" Semantics nil)
    (halted const-decl "CP" MVA nil)
    (wf_AState const-decl "boolean" MVASemantics nil)
    (raise const-decl "PState" State nil)
    (MP_modeled? const-decl "boolean" Equivalence nil)
    (Program_modeled? const-decl "boolean" Equivalence nil)
    (Program_gvs_modeled? const-decl "boolean" Equivalence nil)
    (MVA_modeled? const-decl "boolean" Equivalence nil)
    (MVA_cp_modeled? const-decl "boolean" Equivalence nil)
    (MVA_cps_modeled? const-decl "boolean" Equivalence nil)
    (MVA_vars_modeled? const-decl "boolean" Equivalence nil)
    (Entry adt-constructor-decl "(Entry?)" EventType_adt nil)
    (Entry? adt-recognizer-decl "[EventType -> boolean]" EventType_adt
     nil)
    (on_method_MVA_yields_wf_AState formula-decl nil
     MonitoredProgramSemantics nil)
    (is_ghost const-decl "boolean" SemanticsJML nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (filter_event const-decl "finite_set[Transition]" AnnotateMethod
     nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (ann_event const-decl "Stmt" AnnotateEvent nil)
    (ann_event_wf_Body formula-decl nil AnnotateProgramProperties nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (ann_method const-decl "Method" AnnotateMethod nil)
    (Unit? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Unit adt-constructor-decl "(Unit?)" Val_adt nil)
    (ann_method_pre_set formula-decl nil AnnotateMethod nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (derive_bottom_iff_exception_step formula-decl nil SemanticsProofs
     nil)
    (ann_program_preserves_wf_body formula-decl nil
     AnnotateProgramProperties nil)
    (ann_method_pre formula-decl nil AnnotateMethod nil)
    (Val_Bool_extensionality formula-decl nil Val_adt nil)
    (b adt-accessor-decl "[(Bool?) -> bool]" Val_adt nil)
    (wf_Class const-decl "boolean" WellFormedProgram nil)
    (wf_Classes const-decl "boolean" WellFormedProgram nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (subset? const-decl "bool" sets nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (ext_declared_var_names const-decl "finite_set[Name]"
     ProgramFunctions nil)
    (update_PState const-decl "(update_PState_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (TRUE const-decl "bool" booleans nil)
    (Bool adt-constructor-decl "[bool -> (Bool?)]" Val_adt nil)
    (Bool? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (related_states const-decl "boolean" Equivalence nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (on_method_exit_normal const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML
     nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML
     nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (wf_BoolExpr const-decl "boolean" WellFormedProgram nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (FF? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TT? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (RExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Body type-decl nil Body_adt nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)"
     AnnotatedProgramSemantics nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (Excpt type-decl nil Excpt_adt nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (halted const-decl "Name" NewVariableDeclarations nil)
    (cp const-decl "{n: Name | NOT forbidden_names(mp)(n)}"
     VariableNames nil)
    (forbidden_names const-decl "set[Name]" VariableNames nil)
    (set type-eq-decl nil sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (NumVarEval adt-constructor-decl "[Name -> (NumVarEval?)]" Body_adt
     nil)
    (NExpr adt-constructor-decl "[NumExpr -> (NExpr?)]" Body_adt nil)
    (NumExpr type-eq-decl nil Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Int? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq adt-constructor-decl "[[Expr, Expr] -> (Eq?)]" Body_adt nil)
    (Neg adt-constructor-decl "[BoolExpr -> (Neg?)]" Body_adt nil)
    (Conj adt-constructor-decl "[[BoolExpr, BoolExpr] -> (Conj?)]"
     Body_adt nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (derive def-decl "bool" Semantics nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (PreProgram type-eq-decl nil Program nil)
    (Class type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil)
    (Expr type-eq-decl nil Body_adt nil)
    (Stmt type-eq-decl nil Body_adt nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (BoolExpr type-eq-decl nil Body_adt nil)
    (FieldDecl type-eq-decl nil Program nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (lookup_inv const-decl "BoolExpr" ProgramFunctions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (id_preserves application-judgement "S" identity_props nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState
     nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState
     nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil)
    (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVASemantics nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (complete const-decl "boolean" MVASemantics nil)
    (MVA type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil)
    (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML
     nil))
   1394599 33860 t shostak))
 (on_method_entry_preserves_related_states_not_annotated_TCC1 0
  (on_method_entry_preserves_related_states_not_annotated_TCC1-1 nil
   3401441474 3401708445
   ("" (expand "id")
    (("" (skosimp*)
      (("" (typepred "b!1")
        (("" (use "ann_program_preserves_wf_body") nil nil)) nil))
      nil))
    nil)
   unchecked
   ((lift type-decl nil lift_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil))
   1223 43 t nil))
 (on_method_entry_preserves_related_states_not_annotated_TCC2 0
  (on_method_entry_preserves_related_states_not_annotated_TCC2-1 nil
   3401441474 3401709266
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "md!1")
        (("" (expand "wf_Method")
          (("" (expand "wf_Body")
            (("" (rewrite "ann_program_ext_declared_var_names")
              (("" (auto-rewrite "union" "member")
                (("" (assert)
                  (("" (flatten)
                    (("" (split 3)
                      (("1" (skosimp*)
                        (("1" (inst?) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (inst? -3) (("2" (assert) nil nil)) nil))
                        nil)
                       ("3" (skosimp*)
                        (("3" (inst? -4) (("3" (assert) nil nil)) nil))
                        nil)
                       ("4" (skosimp*)
                        (("4" (inst? -5) (("4" (assert) nil nil)) nil))
                        nil)
                       ("5" (skosimp*)
                        (("5" (inst? -6) (("5" (assert) nil nil)) nil))
                        nil)
                       ("6" (skosimp*)
                        (("6" (inst? -7) (("6" (assert) nil nil)) nil))
                        nil)
                       ("7" (skosimp*)
                        (("7" (inst? -8) (("7" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (lift type-decl nil lift_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   14781 734 t nil))
 (on_method_entry_preserves_related_states_not_annotated_TCC3 0
  (on_method_entry_preserves_related_states_not_annotated_TCC3-1 nil
   3401441474 3401708465 ("" (expand "id") (("" (propax) nil nil)) nil)
   unchecked ((id const-decl "(bijective?[T, T])" identity nil)) 417 20
   t nil))
 (on_method_entry_preserves_related_states_not_annotated_TCC4 0
  (on_method_entry_preserves_related_states_not_annotated_TCC4-1 nil
   3401706470 3401708475 ("" (expand "id") (("" (propax) nil nil)) nil)
   unchecked ((id const-decl "(bijective?[T, T])" identity nil)) 318 20
   t nil))
 (on_method_entry_preserves_related_states_not_annotated 0
  (on_method_entry_preserves_related_states_not_annotated-1 nil
   3398684696 3402673728
   ("" (skosimp*)
    (("" (expand "on_method_entry_MP")
      (("" (expand "on_method_entry")
        (("" (flatten)
          (("" (assert)
            (("" (skosimp*)
              ((""
                (apply (then
                        (use "related_states_implies_same_exception")
                        (assert) (replace -1)))
                (("" (skosimp*)
                  (("" (expand "check_assertion")
                    (("" (flatten)
                      (("" (expand "lookup_inv")
                        (("" (expand "id")
                          (("" (use "get_class_equivalence")
                            (("" (assert)
                              ((""
                                (replace -1)
                                ((""
                                  (replace -18 :dir rl)
                                  ((""
                                    (replace -9)
                                    ((""
                                      (skosimp*)
                                      ((""
                                        (copy -7)
                                        (("1"
                                          (apply
                                           (repeat
                                            (inst?
                                             -1
                                             :where
                                             (-12 -23))))
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (case
                                                   "related_states(mp!1)(tau1!2, tau1!1)")
                                                  (("1"
                                                    (copy -10)
                                                    (("1"
                                                      (apply
                                                       (repeat
                                                        (inst?
                                                         -1
                                                         :where
                                                         (-18 -29))))
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (case
                                                               "related_states(mp!1)(tau2!2, tau2!1)")
                                                              (("1"
                                                                (apply
                                                                 (repeat
                                                                  (inst?
                                                                   -13
                                                                   :where
                                                                   (-22
                                                                    -33))))
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split
                                                                     -13)
                                                                    (("1"
                                                                      (split
                                                                       -24)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "on_method_MVA")
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (split
                                                                                 -1)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (use
                                                                                     "lookup_mthd_in_methods_class")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -18)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "program(mp!1)")
                                                                                          (("1"
                                                                                            (use
                                                                                             "wf_program_methods_only_in_one_class")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "wf_program_methods_only_in_one_class")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "get_monitored_class(mp!1)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "get_class_in_classes")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "get_monitored_class_in_classes")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -3
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "name_get_monitored_class")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (case-replace
                                                                                     "sMP2!1 = s_new!1"
                                                                                     :hide?
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       :hide?
                                                                                       t)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (typepred
                                                                       "md!1")
                                                                      (("2"
                                                                        (expand
                                                                         "wf_Method")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (expand*
                                                                             "wf_Body"
                                                                             "subset?"
                                                                             "member")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (replace
                                                                 -20)
                                                                (("2"
                                                                  (replace
                                                                   -31)
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         1)
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (split
                                                                             1)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (use
                                                                                 "related_states_preserved_by_raise")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "derive_bottom_iff_exception_step"
                                                                                     ("p"
                                                                                      "ann_program(mp!1)"))
                                                                                    (("2"
                                                                                      (inst?
                                                                                       -1
                                                                                       :where
                                                                                       -33)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (typepred
                                                             "md!1")
                                                            (("2"
                                                              (expand
                                                               "wf_Method")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand*
                                                                   "wf_Body"
                                                                   "subset?"
                                                                   "member")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skosimp*)
                                                      (("2"
                                                        (expand "id")
                                                        (("2"
                                                          (use
                                                           "ann_program_preserves_wf_body")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (replace -14)
                                                    (("2"
                                                      (replace -25)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 1)
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (split
                                                                 1)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (use
                                                                     "related_states_preserved_by_raise")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (lemma
                                                                         "derive_bottom_iff_exception_step"
                                                                         ("p"
                                                                          "ann_program(mp!1)"))
                                                                        (("2"
                                                                          (inst?
                                                                           -1
                                                                           :where
                                                                           -27)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred
                                                 "program(mp!1)")
                                                (("2"
                                                  (expand "wf_Program")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand
                                                       "wf_Classes")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (use
                                                             "get_class_in_classes")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "wf_Class")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (replace
                                                                     -28
                                                                     :dir
                                                                     rl)
                                                                    (("2"
                                                                      (expand*
                                                                       "wf_Body"
                                                                       "subset?"
                                                                       "member")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skosimp*)
                                          (("2"
                                            (expand "id")
                                            (("2"
                                              (use
                                               "ann_program_preserves_wf_body")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((id const-decl "(bijective?[T, T])" identity nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (bijective? const-decl "bool" functions nil)
    (list type-decl nil list_adt nil) (<= const-decl "bool" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (is_finite const-decl "bool" finite_sets nil)
    (subset? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (lift type-decl nil lift_adt nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (id_preserves application-judgement "S" identity_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   235318 12090 t shostak))
 (on_method_exit_normal_preserves_related_states_annotated_TCC1 0
  (on_method_exit_normal_preserves_related_states_annotated_TCC1-1 nil
   3401441474 3401709295
   ("" (skosimp*)
    (("" (expand "id")
      (("" (use "ann_program_preserves_wf_method") nil nil)) nil))
    nil)
   unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)
    (lift type-decl nil lift_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (finite_set type-eq-decl nil finite_sets nil))
   1711 90 t nil))
 (on_method_exit_normal_preserves_related_states_annotated_TCC2 0
  (on_method_exit_normal_preserves_related_states_annotated_TCC2-1 nil
   3401441474 3401708498 ("" (expand "id") (("" (propax) nil nil)) nil)
   unchecked ((id const-decl "(bijective?[T, T])" identity nil)) 454 4
   t nil))
 (on_method_exit_normal_preserves_related_states_annotated_TCC3 0
  (on_method_exit_normal_preserves_related_states_annotated_TCC3-1 nil
   3401706470 3401708520 ("" (expand "id") (("" (propax) nil nil)) nil)
   unchecked ((id const-decl "(bijective?[T, T])" identity nil)) 465 3
   t nil))
 (on_method_exit_normal_preserves_related_states_annotated 0
  (on_method_exit_normal_preserves_related_states_annotated-1 nil
   3401709520 3401773707 ("" (postpone) nil nil) unfinished nil 4 4 t
   shostak))
 (on_method_exit_normal_preserves_related_states_not_annotated_TCC1 0
  (on_method_exit_normal_preserves_related_states_not_annotated_TCC1-2
   nil 3401709484 nil
   (";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
    (skosimp*)
    ((";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
      (expand "id")
      ((";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
        (typepred "md!1")
        ((";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
          (expand "wf_Method")
          ((";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
            (expand "wf_Body")
            ((";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
              (rewrite "ann_program_ext_declared_var_names")
              ((";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
                (auto-rewrite "union" "member")
                ((";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
                  (assert)
                  ((";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
                    (flatten)
                    ((";;; Proof on_method_entry_preserves_related_states_not_annotated_TCC2-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated_TCC2"
                      (split 3)
                      (("1" (skosimp*)
                        (("1" (inst?) (("1" (assert) nil)))))
                       ("2" (skosimp*)
                        (("2" (inst? -3) (("2" (assert) nil)))))
                       ("3" (skosimp*)
                        (("3" (inst? -4) (("3" (assert) nil)))))
                       ("4" (skosimp*)
                        (("4" (inst? -5) (("4" (assert) nil)))))
                       ("5" (skosimp*)
                        (("5" (inst? -6) (("5" (assert) nil)))))
                       ("6" (skosimp*)
                        (("6" (inst? -7) (("6" (assert) nil)))))
                       ("7" (skosimp*)
                        (("7" (inst? -8)
                          (("7" (assert) nil))))))))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   unchecked nil nil nil nil nil)
  (on_method_exit_normal_preserves_related_states_not_annotated_TCC1-1
   nil 3401441474 3401709377
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "md!1")
        (("" (expand "wf_Method")
          (("" (expand "wf_Body")
            (("" (rewrite "ann_program_ext_declared_var_names")
              (("" (auto-rewrite "union" "member")
                (("" (assert)
                  (("" (flatten)
                    (("" (split 3)
                      (("1" (skosimp*)
                        (("1" (assert)
                          (("1" (inst? -2) (("1" (assert) nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (inst? -3) (("2" (assert) nil nil)) nil))
                        nil)
                       ("3" (skosimp*)
                        (("3" (inst? -4) (("3" (assert) nil nil)) nil))
                        nil)
                       ("4" (skosimp*)
                        (("4" (inst? -5) (("4" (assert) nil nil)) nil))
                        nil)
                       ("5" (skosimp*)
                        (("5" (inst? -6) (("5" (assert) nil nil)) nil))
                        nil)
                       ("6" (skosimp*)
                        (("6" (inst? -7) (("6" (assert) nil nil)) nil))
                        nil)
                       ("7" (skosimp*)
                        (("7" (inst? -8) (("7" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (lift type-decl nil lift_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   6027 147 t nil))
 (on_method_exit_normal_preserves_related_states_not_annotated_TCC2 0
  (on_method_exit_normal_preserves_related_states_not_annotated_TCC2-1
   nil 3401441474 3401708533
   ("" (expand "id") (("" (propax) nil nil)) nil) unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)) 423 3 t nil))
 (on_method_exit_normal_preserves_related_states_not_annotated_TCC3 0
  (on_method_exit_normal_preserves_related_states_not_annotated_TCC3-1
   nil 3401706470 3401708543
   ("" (expand "id") (("" (propax) nil nil)) nil) unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)) 406 3 t nil))
 (on_method_exit_normal_preserves_related_states_not_annotated 0
  (on_method_exit_normal_preserves_related_states_not_annotated-1 nil
   3401427848 3401771491
   ("" (skosimp*)
    (("" (expand "on_method_exit_normal_MP")
      (("" (expand "on_method_exit_normal")
        (("" (flatten)
          (("" (assert)
            (("" (skosimp*)
              ((""
                (apply (then
                        (use "related_states_implies_same_exception")
                        (assert) (replace -1)))
                (("" (skosimp*)
                  (("" (expand "check_assertion")
                    (("" (flatten)
                      (("" (expand "lookup_inv")
                        (("" (expand "id")
                          (("" (use "get_class_equivalence")
                            (("" (assert)
                              ((""
                                (replace -1)
                                ((""
                                  (replace -11 :dir rl)
                                  ((""
                                    (replace -19)
                                    ((""
                                      (skosimp*)
                                      ((""
                                        (copy -7)
                                        (("1"
                                          (apply
                                           (repeat
                                            (inst?
                                             -1
                                             :where
                                             (-10 -21))))
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (expand
                                                 "on_method_MVA")
                                                (("1"
                                                  (lift-if -11)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (split -11)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (use
                                                           "lookup_mthd_in_methods_class")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace
                                                               -12)
                                                              (("1"
                                                                (typepred
                                                                 "program(mp!1)")
                                                                (("1"
                                                                  (use
                                                                   "wf_program_methods_only_in_one_class")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "wf_program_methods_only_in_one_class")
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "get_monitored_class(mp!1)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "get_class_in_classes")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "get_monitored_class_in_classes")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3
                                                                                       :dir
                                                                                       rl)
                                                                                      (("1"
                                                                                        (use
                                                                                         "name_get_monitored_class")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case-replace
                                                             "tau2!2 = tau1!2"
                                                             :hide?
                                                             t)
                                                            (("1"
                                                              (copy -9)
                                                              (("1"
                                                                (apply
                                                                 (repeat
                                                                  (inst?
                                                                   -1
                                                                   :where
                                                                   (-15
                                                                    -25))))
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split
                                                                     -1)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (case
                                                                         "related_states(mp!1)(tau3!1, tau2!1)")
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -12
                                                                             :where
                                                                             (-20
                                                                              -30))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -12)
                                                                              (("1"
                                                                                (replace
                                                                                 -21)
                                                                                (("1"
                                                                                  (replace
                                                                                   -31)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             5)
                                                                                            (("1"
                                                                                              (skosimp*)
                                                                                              (("1"
                                                                                                (split
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (skosimp*)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "related_states_preserved_by_raise")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "derive_bottom_iff_exception_step"
                                                                                                         ("p"
                                                                                                          "ann_program(mp!1)"))
                                                                                                        (("2"
                                                                                                          (inst?
                                                                                                           -1
                                                                                                           :where
                                                                                                           -34)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (typepred
                                                                                 "md!1")
                                                                                (("2"
                                                                                  (expand
                                                                                   "wf_Method")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       "wf_Body"
                                                                                       "subset?"
                                                                                       "member")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replace
                                                                           -27)
                                                                          (("2"
                                                                            (replace
                                                                             -17)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      (("1"
                                                                                        (split
                                                                                         1)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skosimp*)
                                                                                          (("2"
                                                                                            (use
                                                                                             "related_states_preserved_by_raise")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "derive_bottom_iff_exception_step"
                                                                                                 ("p"
                                                                                                  "ann_program(mp!1)"))
                                                                                                (("2"
                                                                                                  (inst?
                                                                                                   -1
                                                                                                   :where
                                                                                                   -29)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (typepred
                                                                       "program(mp!1)")
                                                                      (("2"
                                                                        (expand*
                                                                         "wf_Program"
                                                                         "wf_Classes")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (inst
                                                                             -4
                                                                             "down(get_class[Name](program(mp!1))(a!1))")
                                                                            (("2"
                                                                              (use
                                                                               "get_class_in_classes")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "wf_Class")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -20
                                                                                       :dir
                                                                                       rl)
                                                                                      (("2"
                                                                                        (expand*
                                                                                         "wf_Body"
                                                                                         "subset?"
                                                                                         "member")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (expand
                                                                   "id")
                                                                  (("2"
                                                                    (use
                                                                     "ann_program_preserves_wf_body")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply-extensionality
                                                               :hide?
                                                               t)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "md!1")
                                                (("2"
                                                  (expand "wf_Method")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand*
                                                       "wf_Body"
                                                       "subset?"
                                                       "member")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skosimp*)
                                          (("2"
                                            (expand "id")
                                            (("2"
                                              (use
                                               "ann_program_preserves_wf_body")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (member const-decl "bool" sets nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (bijective? const-decl "bool" functions nil)
    (list type-decl nil list_adt nil) (<= const-decl "bool" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (is_finite const-decl "bool" finite_sets nil)
    (subset? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (lift type-decl nil lift_adt nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (id_preserves application-judgement "S" identity_props nil))
   68408 1810 t nil))
 (on_method_exit_exceptional_preserves_related_states_annotated_TCC1 0
  (on_method_exit_exceptional_preserves_related_states_annotated_TCC1-1
   nil 3401441474 3401442019
   ("" (expand "id")
    (("" (skosimp*)
      (("" (typepred "b!1")
        (("" (use "ann_program_preserves_wf_body") nil nil)) nil))
      nil))
    nil)
   unchecked
   ((lift type-decl nil lift_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil))
   1427 66 t nil))
 (on_method_exit_exceptional_preserves_related_states_annotated_TCC2 0
  (on_method_exit_exceptional_preserves_related_states_annotated_TCC2-1
   nil 3401441474 3401709405
   ("" (expand "id")
    (("" (skosimp*)
      (("" (use "ann_program_preserves_wf_method") nil nil)) nil))
    nil)
   unchecked
   ((lift type-decl nil lift_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (id const-decl "(bijective?[T, T])" identity nil))
   1898 370 t nil))
 (on_method_exit_exceptional_preserves_related_states_annotated_TCC3 0
  (on_method_exit_exceptional_preserves_related_states_annotated_TCC3-1
   nil 3401441474 3401708565
   ("" (expand "id") (("" (propax) nil nil)) nil) unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)) 210 3 t nil))
 (on_method_exit_exceptional_preserves_related_states_annotated_TCC4 0
  (on_method_exit_exceptional_preserves_related_states_annotated_TCC4-1
   nil 3401706470 3401708581
   ("" (expand "id") (("" (propax) nil nil)) nil) unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)) 273 20 t nil))
 (on_method_exit_exceptional_preserves_related_states_annotated 0
  (on_method_exit_exceptional_preserves_related_states_annotated-1 nil
   3401436054 3401796959
   ("" (skosimp*)
    (("" (expand "on_method_exit_exceptional_MP")
      (("" (expand "on_method_exit_exceptional")
        (("" (flatten)
          (("" (assert)
            (("" (skosimp*)
              ((""
                (apply (then
                        (use "related_states_implies_same_exception")
                        (assert) (replace -1)))
                (("" (skosimp*)
                  (("" (auto-rewrite "id")
                    (("" (expand "check_assertion")
                      (("" (flatten)
                        (("" (skosimp*)
                          (("" (expand "lookup_inv")
                            (("" (use "get_class_equivalence")
                              ((""
                                (assert)
                                ((""
                                  (replace -1)
                                  ((""
                                    (assert)
                                    ((""
                                      (expand "ann_class" -21)
                                      ((""
                                        (assert)
                                        ((""
                                          (lift-if -21)
                                          ((""
                                            (use
                                             "get_class_in_classes")
                                            ((""
                                              (assert)
                                              ((""
                                                (replace -14 :dir rl)
                                                ((""
                                                  (case
                                                   "related_states(mp!1)(update_PState(sMP1!1, catch), update_PState(sAP1!1, catch))")
                                                  (("1"
                                                    (use
                                                     "ann_method_exc_set")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (rewrite
                                                         "derive"
                                                         -24)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -24)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (replace
                                                                   -6)
                                                                  (("2"
                                                                    (copy
                                                                     -17)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -1
                                                                         :where
                                                                         (-4
                                                                          -20))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "ann_method"
                                                                             -5)
                                                                            (("1"
                                                                              (case
                                                                               "NOT up?(ex(pstate(tau1!1)))")
                                                                              (("1"
                                                                                (replace
                                                                                 -29)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "derive"
                                                                                   -31)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      (("1"
                                                                                        (case
                                                                                         "related_states(mp!1)(tau2!2, tau!2)")
                                                                                        (("1"
                                                                                          (apply
                                                                                           (repeat
                                                                                            (inst?
                                                                                             -19
                                                                                             :where
                                                                                             (-25
                                                                                              -34))))
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split
                                                                                               -19)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "related_states(mp!1)(tau3!1, tau2!1)")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -39)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -29)
                                                                                                      (("1"
                                                                                                        (apply
                                                                                                         (then
                                                                                                          (use
                                                                                                           "related_states_implies_same_exception")
                                                                                                          (assert)
                                                                                                          (replace
                                                                                                           -1)))
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               4)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (use
                                                                                                                   "related_states_preserved_by_raise")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -37)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -27)
                                                                                                      (("2"
                                                                                                        (postpone)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "halted_implies_JMLExc(mp!1)(tau1!2, tau1!1)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "MP_modeled?(mp!1)(tau2!2, tau1!1)")
                                                                                            (("1"
                                                                                              (postpone)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (postpone)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (postpone)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (postpone)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (postpone)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (postpone)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished nil 102485 1345 t nil))
 (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC1
  0
  (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC1-1
   nil 3401441474 3401708594
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "b!1")
        (("" (use "ann_program_preserves_wf_body") nil nil)) nil))
      nil))
    nil)
   unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)
    (lift type-decl nil lift_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   652 42 t nil))
 (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC2
  0
  (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC2-2
   nil 3401709505 3401774954
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "md!1")
        (("" (expand "wf_Method")
          (("" (expand "wf_Body")
            (("" (rewrite "ann_program_ext_declared_var_names")
              (("" (auto-rewrite "union" "member")
                (("" (assert)
                  (("" (flatten)
                    (("" (split 2)
                      (("1" (skosimp*)
                        (("1" (inst?) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (inst? -3) (("2" (assert) nil nil)) nil))
                        nil)
                       ("3" (skosimp*)
                        (("3" (inst? -4) (("3" (assert) nil nil)) nil))
                        nil)
                       ("4" (skosimp*)
                        (("4" (inst? -5) (("4" (assert) nil nil)) nil))
                        nil)
                       ("5" (skosimp*)
                        (("5" (inst? -6) (("5" (assert) nil nil)) nil))
                        nil)
                       ("6" (skosimp*)
                        (("6" (inst? -7) (("6" (assert) nil nil)) nil))
                        nil)
                       ("7" (skosimp*)
                        (("7" (inst? -8) (("7" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (lift type-decl nil lift_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   7191 189 t nil)
  (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC2-1
   nil 3401441474 3401708600
   ("" (expand "id") (("" (propax) nil nil)) nil) unfinished
   ((id const-decl "(bijective?[T, T])" identity nil)) 197 1 t nil))
 (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC3
  0
  (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC3-1
   nil 3401441474 3401708606
   ("" (expand "id") (("" (propax) nil nil)) nil) unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)) 158 3 t nil))
 (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC4
  0
  (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC4-1
   nil 3401706470 3401708616
   ("" (expand "id") (("" (propax) nil nil)) nil) unchecked
   ((id const-decl "(bijective?[T, T])" identity nil)) 476 3 t nil))
 (on_method_exit_exceptional_preserves_related_states_not_annotated 0
  (on_method_exit_exceptional_preserves_related_states_not_annotated-2
   nil 3401429011 3401795928
   ("" (skosimp*)
    (("" (expand "on_method_exit_exceptional_MP")
      (("" (expand "on_method_exit_exceptional")
        (("" (flatten)
          (("" (assert)
            (("" (skosimp*)
              ((""
                (apply (then
                        (use "related_states_implies_same_exception")
                        (assert) (replace -1)))
                (("" (skosimp*)
                  (("" (expand "check_assertion")
                    (("" (flatten)
                      (("" (expand "lookup_inv")
                        (("" (expand "id")
                          (("" (use "get_class_equivalence")
                            (("" (assert)
                              ((""
                                (replace -1)
                                ((""
                                  (replace -19 :dir rl)
                                  ((""
                                    (replace -12)
                                    ((""
                                      (skosimp*)
                                      ((""
                                        (case
                                         "related_states(mp!1)(update_PState(sMP1!1, catch), update_PState(sAP1!1, catch))")
                                        (("1"
                                          (copy -9)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst?
                                               -1
                                               :where
                                               (-12 -21))))
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split -1)
                                                (("1"
                                                  (expand
                                                   "on_method_MVA")
                                                  (("1"
                                                    (lift-if -13)
                                                    (("1"
                                                      (split -13)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (use
                                                             "lookup_mthd_in_methods_class")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 -14)
                                                                (("1"
                                                                  (typepred
                                                                   "program(mp!1)")
                                                                  (("1"
                                                                    (use
                                                                     "wf_program_methods_only_in_one_class")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "wf_program_methods_only_in_one_class")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "get_monitored_class(mp!1)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (use
                                                                                 "get_class_in_classes")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (use
                                                                                     "get_monitored_class_in_classes")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -3
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (use
                                                                                           "name_get_monitored_class")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (case-replace
                                                           "tau2!2 = tau1!2"
                                                           :hide?
                                                           t)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -11
                                                               :where
                                                               (-16
                                                                -24))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split
                                                                 -11)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (case
                                                                     "related_states(mp!1)(tau3!1, tau2!1)")
                                                                    (("1"
                                                                      (apply
                                                                       (then
                                                                        (use
                                                                         "related_states_implies_same_exception")
                                                                        (assert)
                                                                        (replace
                                                                         -1)))
                                                                      (("1"
                                                                        (replace
                                                                         -29)
                                                                        (("1"
                                                                          (replace
                                                                           -21)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 4)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (use
                                                                                     "related_states_preserved_by_raise")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replace
                                                                       -26)
                                                                      (("2"
                                                                        (replace
                                                                         -18)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               1)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (use
                                                                                       "related_states_preserved_by_raise")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "derive_bottom_iff_exception_step"
                                                                                           ("p"
                                                                                            "ann_program(mp!1)"))
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :where
                                                                                             -28)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "program(mp!1)")
                                                                  (("2"
                                                                    (expand*
                                                                     "wf_Program"
                                                                     "wf_Classes")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (inst
                                                                         -4
                                                                         "down(get_class(program(mp!1))(a!1))")
                                                                        (("2"
                                                                          (use
                                                                           "get_class_in_classes")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (expand
                                                                               "wf_Class")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -29
                                                                                   :dir
                                                                                   rl)
                                                                                  (("2"
                                                                                    (expand*
                                                                                     "wf_Body"
                                                                                     "subset?"
                                                                                     "member")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply-extensionality
                                                             :hide?
                                                             t)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (typepred "md!1")
                                                  (("2"
                                                    (expand
                                                     "wf_Method")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (expand*
                                                         "wf_Body"
                                                         "subset?"
                                                         "member")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skosimp*)
                                            (("2"
                                              (expand "id")
                                              (("2"
                                                (use
                                                 "ann_program_preserves_wf_body")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (use
                                           "related_states_preserved_by_catch2")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (set type-eq-decl nil sets nil)
    (subset? const-decl "bool" sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (member const-decl "bool" sets nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (bijective? const-decl "bool" functions nil)
    (lift type-decl nil lift_adt nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (id_preserves application-judgement "S" identity_props nil))
   12239 795 t nil)
  (on_method_exit_exceptional_preserves_related_states_not_annotated-1
   nil 3401427855 3401429001
   (";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
    (skosimp*)
    ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
      (expand "on_method_entry_MP")
      ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
        (expand "on_method_entry")
        ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
          (flatten)
          ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
            (assert)
            ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
              (skosimp*)
              ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                (apply (then
                        (use "related_states_implies_same_exception")
                        (assert) (replace -1)))
                ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                  (skosimp*)
                  ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                    (expand "check_assertion")
                    ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                      (flatten)
                      ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                        (expand "lookup_inv")
                        ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                          (expand "id")
                          ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                            (use "get_class_equivalence")
                            ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                              (assert)
                              ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                                (replace -1)
                                ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                                  (replace -18 :dir rl)
                                  ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                                    (replace -9)
                                    ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                                      (skosimp*)
                                      ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                                        (copy -7)
                                        ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                                          (apply
                                           (repeat
                                            (inst?
                                             -1
                                             :where
                                             (-12 -23))))
                                          ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                                            (assert)
                                            ((";;; Proof on_method_entry_preserves_related_states_not_annotated-1 for formula MethodCallsPreserveRelatedState.on_method_entry_preserves_related_states_not_annotated"
                                              (split -1)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (case
                                                   "related_states(mp!1)(tau1!2, tau1!1)")
                                                  (("1"
                                                    (copy -10)
                                                    (("1"
                                                      (apply
                                                       (repeat
                                                        (inst?
                                                         -1
                                                         :where
                                                         (-18 -29))))
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (case
                                                               "related_states(mp!1)(tau2!2, tau2!1)")
                                                              (("1"
                                                                (apply
                                                                 (repeat
                                                                  (inst?
                                                                   -13
                                                                   :where
                                                                   (-22
                                                                    -33))))
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split
                                                                     -13)
                                                                    (("1"
                                                                      (split
                                                                       -24)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          nil)))
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "on_method_MVA")
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (split
                                                                                 -1)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (use
                                                                                     "lookup_mthd_in_methods_class")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -18)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "mp!1")
                                                                                          (("1"
                                                                                            (expand*
                                                                                             "wf_MP"
                                                                                             "wf_Program"
                                                                                             "wf_program_methods_only_in_one_class")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "get_monitored_class(mp!1)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "get_class_in_classes")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "get_monitored_class_in_classes")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -10
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "name_get_monitored_class")
                                                                                                                nil)))))))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (expand*
                                                                                     "related_states"
                                                                                     "wf_state"
                                                                                     "MP_modeled?"
                                                                                     "MVA_modeled?"
                                                                                     "MVA_cp_modeled?"
                                                                                     "MVA_cps_modeled?"
                                                                                     "MVA_vars_modeled?"
                                                                                     "Program_modeled?"
                                                                                     "Program_gvs_modeled?"
                                                                                     "halted_implies_JMLExc"
                                                                                     "wf_ghoststate"
                                                                                     "id")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (split
                                                                                           7)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "is_ghost")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)))))
                                                                                           ("2"
                                                                                            (propax)
                                                                                            nil)
                                                                                           ("3"
                                                                                            (propax)
                                                                                            nil)
                                                                                           ("4"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("4"
                                                                                              (assert)
                                                                                              nil)))
                                                                                           ("5"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("5"
                                                                                              (assert)
                                                                                              nil)))))))))))))))))))))))))
                                                                     ("2"
                                                                      (apply
                                                                       (then
                                                                        (typepred
                                                                         "mp!1")
                                                                        (expand*
                                                                         "wf_MP"
                                                                         "wf_Program"
                                                                         "wf_program_all_variables_declared"
                                                                         "ext_declared_var_names"
                                                                         "declared_var_names")
                                                                        (auto-rewrite
                                                                         "union"
                                                                         "member"
                                                                         "subset?")
                                                                        (assert)
                                                                        (skosimp*)
                                                                        (flatten)
                                                                        (inst?
                                                                         -7)
                                                                        (assert)))
                                                                      (("2"
                                                                        (expand
                                                                         "var_names"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "Union")
                                                                          (("2"
                                                                            (inst
                                                                             1
                                                                             "var_names(down(get_class(program(mp!1))(a!1)))")
                                                                            (("1"
                                                                              (expand
                                                                               "var_names"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Union")
                                                                                    (("1"
                                                                                      (inst
                                                                                       1
                                                                                       "var_names(md!1)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "var_names"
                                                                                         1)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Union")
                                                                                            (("1"
                                                                                              (inst
                                                                                               1
                                                                                               "var_names(pre_set(md!1))")
                                                                                              nil)))))))
                                                                                       ("2"
                                                                                        (inst
                                                                                         1
                                                                                         "md!1")
                                                                                        (("2"
                                                                                          (apply
                                                                                           (then
                                                                                            (replace
                                                                                             -19
                                                                                             :dir
                                                                                             rl)
                                                                                            (use
                                                                                             "lookup_mthd_in_methods_class")
                                                                                            (assert)))
                                                                                          nil)))))))))))))
                                                                             ("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (use
                                                                                 "get_class_in_classes")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))))
                                                               ("2"
                                                                (replace
                                                                 -20)
                                                                (("2"
                                                                  (replace
                                                                   -31)
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         1)
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (split
                                                                             1)
                                                                            (("1"
                                                                              (propax)
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (use
                                                                                 "related_states_preserved_by_raise")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "derive_bottom_iff_exception_step"
                                                                                     ("p"
                                                                                      "ann_program(mp!1)"))
                                                                                    (("2"
                                                                                      (inst?
                                                                                       -1
                                                                                       :where
                                                                                       -33)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil)))))))))))))))
                                                                         ("2"
                                                                          (propax)
                                                                          nil)))))))))))))))
                                                           ("2"
                                                            (apply
                                                             (then
                                                              (typepred
                                                               "mp!1")
                                                              (expand*
                                                               "wf_MP"
                                                               "wf_Program"
                                                               "wf_program_all_variables_declared"
                                                               "ext_declared_var_names"
                                                               "declared_var_names")
                                                              (auto-rewrite
                                                               "union"
                                                               "member"
                                                               "subset?")
                                                              (assert)
                                                              (skosimp*)
                                                              (flatten)
                                                              (inst?
                                                               -7)
                                                              (assert)))
                                                            (("2"
                                                              (expand
                                                               "var_names"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "Union")
                                                                (("2"
                                                                  (inst
                                                                   1
                                                                   "var_names(down(get_class(program(mp!1))(a!1)))")
                                                                  (("1"
                                                                    (expand
                                                                     "var_names"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "Union")
                                                                          (("1"
                                                                            (inst
                                                                             1
                                                                             "var_names(md!1)")
                                                                            (("1"
                                                                              (expand
                                                                               "var_names"
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "Union")
                                                                                (("1"
                                                                                  (inst
                                                                                   1
                                                                                   "var_names(pre(md!1))")
                                                                                  nil)))))
                                                                             ("2"
                                                                              (inst
                                                                               1
                                                                               "md!1")
                                                                              (("2"
                                                                                (apply
                                                                                 (then
                                                                                  (replace
                                                                                   -19
                                                                                   :dir
                                                                                   rl)
                                                                                  (use
                                                                                   "lookup_mthd_in_methods_class")
                                                                                  (assert)))
                                                                                nil)))))))))))))
                                                                   ("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (apply
                                                                       (then
                                                                        (use
                                                                         "get_class_in_classes")
                                                                        (assert)))
                                                                      nil)))))))))))))))))))
                                                   ("2"
                                                    (replace -14)
                                                    (("2"
                                                      (replace -25)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 1)
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (split
                                                                 1)
                                                                (("1"
                                                                  (propax)
                                                                  nil)
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (use
                                                                     "related_states_preserved_by_raise")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (lemma
                                                                         "derive_bottom_iff_exception_step"
                                                                         ("p"
                                                                          "ann_program(mp!1)"))
                                                                        (("2"
                                                                          (inst?
                                                                           -1
                                                                           :where
                                                                           -27)
                                                                          (("2"
                                                                            (assert)
                                                                            nil)))))))))))))))
                                                             ("2"
                                                              (propax)
                                                              nil)))))))))))))))
                                               ("2"
                                                (apply
                                                 (then
                                                  (typepred "mp!1")
                                                  (expand*
                                                   "wf_MP"
                                                   "wf_Program"
                                                   "wf_program_all_variables_declared"
                                                   "ext_declared_var_names"
                                                   "declared_var_names")
                                                  (auto-rewrite
                                                   "union"
                                                   "member"
                                                   "subset?")
                                                  (assert)
                                                  (skosimp*)
                                                  (flatten)
                                                  (inst? -7)
                                                  (assert)))
                                                (("2"
                                                  (expand
                                                   "var_names"
                                                   1)
                                                  (("2"
                                                    (expand "Union")
                                                    (("2"
                                                      (inst
                                                       1
                                                       "var_names(down(get_class(program(mp!1))(a!1)))")
                                                      (("1"
                                                        (expand
                                                         "var_names"
                                                         1)
                                                        (("1"
                                                          (assert)
                                                          nil)))
                                                       ("2"
                                                        (inst?)
                                                        (("2"
                                                          (apply
                                                           (then
                                                            (use
                                                             "get_class_in_classes")
                                                            (assert)))
                                                          nil))))))))))))))))))))))))))))))))))))))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   unfinished nil 580 2 t nil)))
(CorrectnessAnnProgram
 (IMP_VariableNames_TCC1 0
  (IMP_VariableNames_TCC1-1 nil 3396605539 3398152404
   ("" (use "infinite_namespace") nil nil) unchecked nil 1 1 t nil))
 (IMP_MethodCallsPreserveRelatedState_TCC1 0
  (IMP_MethodCallsPreserveRelatedState_TCC1-1 nil 3398689934 3403428190
   ("" (use "CP_is_enumerable") nil nil) unchecked
   ((CP_is_enumerable formula-decl nil CorrectnessAnnProgram nil))
   74832 360 t nil))
 (IMP_MethodCallsPreserveRelatedState_TCC2 0
  (IMP_MethodCallsPreserveRelatedState_TCC2-1 nil 3398689934 3403428101
   ("" (use "name_of_exists") nil nil) unchecked
   ((name_of_exists formula-decl nil CorrectnessAnnProgram nil)) 7219
   350 t nil))
 (initial_states_are_equivalent 0
  (initial_states_are_equivalent-2 nil 3396612347 3398156851
   ("" (skosimp*)
    (("" (expand "related_states")
      (("" (typepred "mp!1")
        (("" (split 1)
          (("1" (use "wf_initial_MP_state") (("1" (assert) nil nil))
            nil)
           ("2" (use "ann_program_yields_wf_program")
            (("2" (use "wf_initial_AP_state") (("2" (assert) nil nil))
              nil))
            nil)
           ("3"
            (expand* "initial_MP_state" "initial_AP_state"
             "initial_MVA_state" "initial_Program_state"
             "related_states" "MP_modeled?" "MVA_modeled?"
             "Program_modeled?")
            (("3" (split 1)
              (("1" (expand "MVA_cp_modeled?")
                (("1"
                  (case-replace
                   "get_GhostDecl(cp(mp!1), ann_program(mp!1)) = up(new_cp_gvd(mp!1))")
                  (("1" (expand "new_cp_gvd") (("1" (propax) nil nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (expand "get_GhostDecl")
                      (("2" (lift-if)
                        (("2" (assert)
                          (("2"
                            (rewrite "ann_program_add_ghost_var_decls")
                            (("2"
                              (case "defined?[Name](Int[Name](unique[CP, Name](init_cp(mva(mp!1)))))")
                              (("1"
                                (case-replace
                                 "{g: FieldDecl[Name] |
                                                        union(getGhostDecls(program(mp!1)), new_gvds(mp!1))
                                                             (g)
                                                         AND name(g) = cp(mp!1)} = union({g: FieldDecl[Name] |
                                                              (getGhostDecls(program(mp!1))(g) AND name(g) = cp(mp!1))}, {g: FieldDecl[Name] |
                                                              (new_gvds(mp!1)(g) AND
                                                               name(g) = cp(mp!1))})"
                                 :hide?
                                 t)
                                (("1"
                                  (case-replace
                                   "{g_1: FieldDecl[Name] |
                                                                              (getGhostDecls(program(mp!1))(g_1) AND
                                                                                name(g_1) = cp(mp!1))} = emptyset[FieldDecl[Name]]"
                                   :hide?
                                   t)
                                  (("1"
                                    (rewrite "union_commutative")
                                    (("1"
                                      (rewrite "union_empty")
                                      (("1"
                                        (case-replace
                                         "{g: FieldDecl[Name] |
                          (new_gvds(mp!1)(g) AND name(g) = cp(mp!1))} = singleton(new_cp_gvd(mp!1))")
                                        (("1"
                                          (rewrite "choose_singleton")
                                          (("1"
                                            (split 1)
                                            (("1" (propax) nil nil)
                                             ("2"
                                              (rewrite
                                               "nonempty_exists")
                                              (("2"
                                                (inst?)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (apply-extensionality
                                             :hide?
                                             t)
                                            (("2"
                                              (expand "singleton")
                                              (("2"
                                                (expand "new_gvds")
                                                (("2"
                                                  (auto-rewrite
                                                   "add"
                                                   "union"
                                                   "member")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (iff)
                                                      (("2"
                                                        (split 1)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (split -1)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "new_cps_gvds")
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (typepred
                                                                   "name_of(mp!1)(q!1)")
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (typepred
                                                               "cp(mp!1)")
                                                              (("3"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "new_cp_gvd")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2)
                                    (("2"
                                      (apply-extensionality :hide? t)
                                      (("2"
                                        (expand "emptyset")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (typepred "cp(mp!1)")
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (apply-extensionality :hide? t)
                                    (("2"
                                      (auto-rewrite
                                       ("add" "union" "member"))
                                      (("2"
                                        (assert)
                                        (("2"
                                          (iff)
                                          (("2" (prop) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (grind) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "MVA_cps_modeled?")
                (("2" (skosimp*)
                  (("2"
                    (case-replace
                     "get_GhostDecl(name_of(mp!1)(q!1), ann_program(mp!1)) = up((# jtype := IntType, name := name_of(mp!1)(q!1), init_val := Int(unique(q!1)) #))"
                     :hide? t)
                    (("1" (assert) nil nil)
                     ("2" (hide 2)
                      (("2" (expand "get_GhostDecl")
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2"
                              (rewrite
                               "ann_program_add_ghost_var_decls")
                              (("2"
                                (case
                                 "defined?[Name](Int[Name](unique[CP, Name](q!1)))")
                                (("1"
                                  (case-replace
                                   "{g: FieldDecl[Name] |
                                                    union(getGhostDecls(program(mp!1)), new_gvds(mp!1))
                                                         (g)
                                                     AND name(g) = name_of(mp!1)(q!1)} = union({g: FieldDecl[Name] |
                                                    getGhostDecls(program(mp!1))(g) AND name(g) = name_of(mp!1)(q!1)}, {g: FieldDecl[Name] |
                                                    new_gvds(mp!1)
                                                         (g)
                                                     AND name(g) = name_of(mp!1)(q!1)})"
                                   :hide?
                                   t)
                                  (("1"
                                    (case-replace
                                     "{g: FieldDecl[Name] |
                                                                  getGhostDecls(program(mp!1))(g) AND
                                                                   name(g) = name_of(mp!1)(q!1)} = emptyset[FieldDecl[Name]]"
                                     :hide?
                                     t)
                                    (("1"
                                      (rewrite "union_commutative")
                                      (("1"
                                        (rewrite "union_empty")
                                        (("1"
                                          (case-replace
                                           "{g_1: FieldDecl[Name] |
                          new_gvds(mp!1)(g_1) AND
                           name(g_1) = name_of(mp!1)(q!1)} =  add((# jtype := IntType, name := name_of(mp!1)(q!1), init_val := Int(unique(q!1)) #), emptyset[FieldDecl[Name]])"
                                           :hide?
                                           t)
                                          (("1"
                                            (expand "nonempty?")
                                            (("1"
                                              (rewrite "nonempty_add")
                                              (("1"
                                                (rewrite
                                                 "singleton_as_add"
                                                 :dir
                                                 rl)
                                                (("1"
                                                  (rewrite
                                                   "choose_singleton")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (apply-extensionality
                                               :hide?
                                               t)
                                              (("2"
                                                (expand*
                                                 "new_gvds"
                                                 "new_cps_gvds")
                                                (("2"
                                                  (auto-rewrite
                                                   "add"
                                                   "emptyset"
                                                   "member"
                                                   "union")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (iff)
                                                      (("2"
                                                        (split 1)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (split -1)
                                                            (("1"
                                                              (typepred
                                                               "name_of(mp!1)(q!1)")
                                                              (("1"
                                                                (expand
                                                                 "legal_names")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (expand
                                                                     "new_cp_gvd")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (expand*
                                                                 "wf_MP"
                                                                 "wf_Program")
                                                                (("2"
                                                                  (typepred
                                                                   "name_of(mp!1)")
                                                                  (("2"
                                                                    (expand
                                                                     "injective?")
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "q!1"
                                                                       "q!2")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (apply-extensionality
                                                                           :hide?
                                                                           t)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (use
                                                               "wf_new_vars")
                                                              (("3"
                                                                (expand
                                                                 "new_mva_vars_gvds")
                                                                (("3"
                                                                  (skosimp*)
                                                                  (("3"
                                                                    (typepred
                                                                     "v!1")
                                                                    (("3"
                                                                      (inst?
                                                                       -4)
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (inst?
                                                                           -4)
                                                                          (("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst?
                                                                 2)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (apply-extensionality :hide? t)
                                        (("2"
                                          (expand "emptyset")
                                          (("2"
                                            (typepred
                                             "name_of(mp!1)(q!1)")
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2)
                                    (("2"
                                      (apply-extensionality :hide? t)
                                      (("2"
                                        (auto-rewrite
                                         ("union" "member"))
                                        (("2"
                                          (assert)
                                          (("2"
                                            (iff)
                                            (("2" (prop) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (expand "every") (("3" (grind) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (expand "MVA_vars_modeled?")
                (("3" (skosimp*)
                  (("3" (split -1)
                    (("1" (expand "defined?") (("1" (propax) nil nil))
                      nil)
                     ("2" (flatten)
                      (("2" (assert)
                        (("2"
                          (case-replace
                           "get_GhostDecl(n!1, ann_program(mp!1)) = up((# jtype := jtype(down(get_MVAVarDecl(n!1, mva(mp!1)))), name := name(down(get_MVAVarDecl(n!1, mva(mp!1)))), init_val := init_val(down(get_MVAVarDecl(n!1, mva(mp!1)))) #))")
                          (("1" (assert) nil nil)
                           ("2" (hide 3)
                            (("2" (expand "get_GhostDecl")
                              (("2"
                                (lift-if)
                                (("2"
                                  (assert)
                                  (("2"
                                    (rewrite
                                     "ann_program_add_ghost_var_decls")
                                    (("2"
                                      (case-replace
                                       "({g: FieldDecl[Name] |
                                        union(getGhostDecls(program(mp!1)), new_gvds(mp!1))
                                             (g)
                                         AND name(g) = n!1}) = union({g: FieldDecl[Name] |
                                        getGhostDecls(program(mp!1))(g)
                                         AND name(g) = n!1}, {g: FieldDecl[Name] |
                                        new_gvds(mp!1)(g)
                                         AND name(g) = n!1})"
                                       :hide?
                                       t)
                                      (("1"
                                        (case-replace
                                         " {g: FieldDecl[Name] |
                                                  getGhostDecls(program(mp!1))(g) AND
                                                   name(g) = n!1} = emptyset[FieldDecl[Name]]"
                                         :hide?
                                         t)
                                        (("1"
                                          (rewrite "union_commutative")
                                          (("1"
                                            (rewrite "union_empty")
                                            (("1"
                                              (case-replace
                                               "{g_1: FieldDecl[Name] |
                          new_gvds(mp!1)(g_1) AND name(g_1) = n!1} = add((# jtype := jtype(down(get_MVAVarDecl(n!1, mva(mp!1)))),
                                                  name := name(down(get_MVAVarDecl(n!1, mva(mp!1)))),
                                                  init_val
                                                    := init_val(down(get_MVAVarDecl(n!1, mva(mp!1)))) #), emptyset[FieldDecl[Name]])"
                                               :hide?
                                               t)
                                              (("1"
                                                (expand "nonempty?")
                                                (("1"
                                                  (rewrite
                                                   "nonempty_add")
                                                  (("1"
                                                    (rewrite
                                                     "add_as_union")
                                                    (("1"
                                                      (rewrite
                                                       "union_commutative")
                                                      (("1"
                                                        (rewrite
                                                         "union_empty")
                                                        (("1"
                                                          (rewrite
                                                           "choose_singleton")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2)
                                                (("2"
                                                  (apply-extensionality
                                                   :hide?
                                                   t)
                                                  (("2"
                                                    (expand*
                                                     "new_gvds"
                                                     "new_mva_vars_gvds")
                                                    (("2"
                                                      (auto-rewrite
                                                       ("add"
                                                        "member"
                                                        "union"
                                                        "emptyset"))
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (iff)
                                                          (("2"
                                                            (expand
                                                             "get_MVAVarDecl")
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (split
                                                                   2)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split
                                                                       2)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "defined?")
                                                                            (("1"
                                                                              (typepred
                                                                               "cp(mp!1)")
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "new_cps_gvds")
                                                                            (("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (typepred
                                                                                 "name_of(mp!1)(q!1)")
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (skosimp*)
                                                                            (("3"
                                                                              (typepred
                                                                               "v!1")
                                                                              (("3"
                                                                                (typepred
                                                                                 "mp!1")
                                                                                (("3"
                                                                                  (expand
                                                                                   "wf_MP")
                                                                                  (("3"
                                                                                    (expand
                                                                                     "wf_MVA")
                                                                                    (("3"
                                                                                      (expand
                                                                                       "wf_vdsA")
                                                                                      (("3"
                                                                                        (flatten)
                                                                                        (("3"
                                                                                          (inst
                                                                                           -3
                                                                                           "choose({vd: MVAVarDecl[CP, Name] |
                                                                  vdsA(mva(mp!1))(vd) AND name(vd) = n!1})"
                                                                                           "v!1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -3)
                                                                                              (("1"
                                                                                                (apply-extensionality
                                                                                                 2
                                                                                                 :hide?
                                                                                                 t)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "nonempty?")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (inst?
                                                                               3)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (apply-extensionality
                                             :hide?
                                             t)
                                            (("2"
                                              (auto-rewrite
                                               ("union"
                                                "add"
                                                "member"
                                                "emptyset"))
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "getGhostDecls")
                                                  (("2"
                                                    (typepred "mp!1")
                                                    (("2"
                                                      (expand
                                                       "compatible")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand
                                                           "MVA_aut_vars_are_not_prog_vars")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "down(get_MVAVarDecl(n!1, mva(mp!1)))")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "get_MVAVarDecl")
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split
                                                                       1)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "declared_var_names")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (expand
                                                                               "getGhostDecls")
                                                                              (("2"
                                                                                (expand
                                                                                 "var_names")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (inst
                                                                                       4
                                                                                       "x!1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (apply-extensionality
                                           :hide?
                                           t)
                                          (("2"
                                            (auto-rewrite
                                             "add"
                                             "union"
                                             "emptyset"
                                             "member")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (iff)
                                                (("2" (prop) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("4" (use " ann_program_preserves_var_decls")
                (("4" (flatten)
                  (("4" (apply-extensionality :hide? t)
                    (("1" (expand "get_FieldDecl")
                      (("1" (lift-if)
                        (("1" (assert)
                          (("1" (lift-if)
                            (("1" (assert)
                              (("1"
                                (replace -1)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (grind) nil nil)
                     ("3" (skosimp*) (("3" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("5" (use " ann_program_preserves_var_decls")
                (("5" (flatten)
                  (("5" (apply-extensionality :hide? t)
                    (("1" (lift-if)
                      (("1" (split 1)
                        (("1" (propax) nil nil)
                         ("2" (skosimp*)
                          (("2" (assert)
                            (("2" (expand "get_LocalDecl")
                              (("2"
                                (replace -2)
                                (("2"
                                  (assert)
                                  (("2"
                                    (lift-if)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skosimp*) (("2" (assert) nil nil)) nil)
                     ("3" (skosimp*) (("3" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("6" (expand "Program_gvs_modeled?")
                (("6" (skosimp*)
                  (("6" (split -1)
                    (("1" (grind) nil nil)
                     ("2" (flatten)
                      (("2" (assert)
                        (("2" (use " ann_program_preserves_var_decls")
                          (("2" (flatten)
                            (("2" (auto-rewrite "subset?" "member")
                              (("2"
                                (assert)
                                (("2"
                                  (expand "get_GhostDecl")
                                  (("2"
                                    (lift-if)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (split 1)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (lift-if)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (rewrite
                                                 "nonempty_exists")
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (typepred "x!1")
                                                    (("1"
                                                      (inst -5 "x!1")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (rewrite
                                                               "ann_program_add_ghost_var_decls")
                                                              (("1"
                                                                (case-replace
                                                                 " {g_1: FieldDecl[Name] | union(getGhostDecls(program(mp!1)), new_gvds(mp!1))(g_1)
                                        AND name(g_1) = n!1} = {g_1: FieldDecl[Name] |
                                       getGhostDecls(program(mp!1))(g_1)
                                        AND name(g_1) = n!1}"
                                                                 :hide?
                                                                 t)
                                                                (("1"
                                                                  (hide
                                                                   2)
                                                                  (("1"
                                                                    (apply-extensionality
                                                                     :hide?
                                                                     t)
                                                                    (("1"
                                                                      (auto-rewrite
                                                                       "union"
                                                                       "member")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (iff)
                                                                          (("1"
                                                                            (split
                                                                             1)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (split
                                                                                 -1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (use
                                                                                     "wf_new_vars")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (auto-rewrite
                                                                                         "disjoint?"
                                                                                         "intersection"
                                                                                         "empty?")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -5
                                                                                             "n!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "var_names")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "declared_var_names")
                                                                                                (("2"
                                                                                                  (split
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "var_names")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         3
                                                                                                         "x!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (rewrite
                                                               "nonempty_exists")
                                                              (("2"
                                                                (inst
                                                                 1
                                                                 "x!1")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("4" (expand "halted_implies_JMLExc")
            (("4" (expand "initial_MP_state")
              (("4" (expand "initial_AP_state")
                (("4" (expand "initial_MVA_state")
                  (("4" (expand "initial_Program_state")
                    (("4" (typepred "mp!1")
                      (("4" (expand "wf_MP")
                        (("4" (expand "wf_MVA")
                          (("4" (flatten) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (bottom? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (choose const-decl "(p)" sets nil)
    (nonempty_finite_union2 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (add_as_union formula-decl nil sets_lemmas nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (pred type-eq-decl nil defined_types nil)
    (singleton_as_add formula-decl nil sets_lemmas nil)
    (nonempty_add formula-decl nil sets_lemmas nil)
    (nonempty? const-decl "bool" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (union_commutative formula-decl nil sets_lemmas nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_exists formula-decl nil sets_lemmas nil)
    (choose_singleton formula-decl nil sets_lemmas nil)
    (add const-decl "(nonempty?)" sets nil)
    (member const-decl "bool" sets nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (subset? const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (union_empty formula-decl nil sets_lemmas nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (injective? const-decl "bool" functions nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (up adt-constructor-decl "[T -> (up?)]" lift_adt nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (lift type-decl nil lift_adt nil))
   13870 4913 t nil)
  (initial_states_are_equivalent-1 nil 3394358076 3396612304
   ("" (skosimp*)
    ((""
      (expand* "initial_MP_state" "initial_AP_state"
       "initial_MVA_state" "initial_Program_state" "related_states"
       "MP_modeled?" "MVA_modeled?" "Program_modeled?")
      (("" (split 1)
        (("1" (expand "MVA_cp_modeled?")
          (("1"
            (case-replace
             "get_GhostDecl(cp(mp!1), ann_program(mp!1)) = up((# jtype := IntType, name := cp(mp!1), init_val := Int(unique(init_cp(mva(mp!1)))) #))"
             :hide? t)
            (("1" (assert) nil nil)
             ("2" (hide 2)
              (("2" (expand "get_GhostDecl")
                (("2" (lift-if)
                  (("2" (assert)
                    (("2" (rewrite "ann_program_add_ghost_var_decls")
                      (("2"
                        (case "defined?[Name](Int[Name](unique[CP, Name](init_cp(mva(mp!1)))))")
                        (("1"
                          (case-replace "{g: FieldDecl[Name] |
                      union(getGhostDecls(program(mp!1)), new_gvds(mp!1))
                           (g)
                       AND name(g) = cp(mp!1)} = union({g: FieldDecl[Name] |
                            (getGhostDecls(program(mp!1))(g) AND name(g) = cp(mp!1))}, {g: FieldDecl[Name] |
                            (new_gvds(mp!1)(g) AND
                             name(g) = cp(mp!1))})" :hide? t)
                          (("1"
                            (case-replace "{g_1: FieldDecl[Name] |
                                    (getGhostDecls(program(mp!1))(g_1) AND
                                      name(g_1) = cp(mp!1))} = emptyset[FieldDecl[Name]]"
                             :hide? t)
                            (("1" (rewrite "union_commutative")
                              (("1"
                                (rewrite "union_empty")
                                (("1"
                                  (case-replace
                                   "{g: FieldDecl[Name] |
                                      (new_gvds(mp!1)(g) AND name(g) = cp(mp!1))} = add((# jtype := IntType, name := cp(mp!1),
                             init_val := Int(unique(init_cp(mva(mp!1)))) #), union({gd : FieldDecl | EXISTS (q : (cps(mva(mp!1)))) :
                                                name(gd) = name_of(mp!1)(q) AND
                                                jtype(gd) = IntType AND
                                                init_val(gd) = Int(unique(q)) AND name(gd) = cp(mp!1)},
                            {gd : FieldDecl | EXISTS (v : (vdsA(mva(mp!1)))) :
                                                name(gd) = name(v) AND
                                                jtype(gd) = jtype(v) AND
                                                init_val(gd) = init_val(v) AND name(gd) = cp(mp!1)}))"
                                   :hide?
                                   t)
                                  (("1"
                                    (case-replace
                                     "{gd: FieldDecl |
                                            EXISTS (q: (cps(mva(mp!1)))):
                                              name(gd) = name_of(mp!1)(q) AND
                                               jtype(gd) = IntType AND
                                                init_val(gd) = Int(unique(q)) AND
                                                 name(gd) = cp(mp!1)} = emptyset[FieldDecl[Name]]"
                                     :hide?
                                     t)
                                    (("1"
                                      (case-replace
                                       "{gd_1: FieldDecl |
                                              EXISTS (v: (vdsA(mva(mp!1)))):
                                                name(gd_1) = name(v) AND
                                                 jtype(gd_1) = jtype(v) AND
                                                  init_val(gd_1) = init_val(v) AND
                                                   name(gd_1) = cp(mp!1)} = emptyset[FieldDecl[Name]]")
                                      (("1"
                                        (rewrite "union_empty")
                                        (("1"
                                          (expand "nonempty?")
                                          (("1"
                                            (rewrite
                                             "nonempty_add[FieldDecl[Name]]")
                                            (("1"
                                              (rewrite "add_as_union")
                                              (("1"
                                                (rewrite
                                                 "union_commutative")
                                                (("1"
                                                  (rewrite
                                                   "union_empty")
                                                  (("1"
                                                    (rewrite
                                                     "choose_singleton")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (apply-extensionality
                                           :hide?
                                           t)
                                          (("2"
                                            (expand "emptyset")
                                            (("2"
                                              (use "wf_new_vars")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (skosimp*)
                                                  (("2"
                                                    (typepred "v!1")
                                                    (("2"
                                                      (inst? -3)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (case-replace
                                                           "x!1 = v!1")
                                                          (("2"
                                                            (apply-extensionality
                                                             :hide?
                                                             t)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (apply-extensionality :hide? t)
                                        (("2"
                                          (expand "emptyset")
                                          (("2"
                                            (skosimp*)
                                            (("2"
                                              (use "wf_new_vars")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (inst? -1)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2)
                                    (("2"
                                      (rewrite "new_gvds_as_union")
                                      (("2"
                                        (apply-extensionality :hide? t)
                                        (("2"
                                          (auto-rewrite
                                           ("add" "union" "member"))
                                          (("2"
                                            (assert)
                                            (("2"
                                              (iff)
                                              (("2"
                                                (prop)
                                                (("1" (assert) nil nil)
                                                 ("2" (assert) nil nil)
                                                 ("3" (assert) nil nil)
                                                 ("4"
                                                  (assert)
                                                  (("4"
                                                    (skosimp*)
                                                    (("4"
                                                      (inst?)
                                                      (("4"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("5" (assert) nil nil)
                                                 ("6"
                                                  (skosimp*)
                                                  (("6"
                                                    (inst? 3)
                                                    (("6"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("7"
                                                  (skosimp*)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2"
                                (apply-extensionality :hide? t)
                                (("2"
                                  (expand "emptyset")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (typepred "cp(mp!1)")
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (apply-extensionality :hide? t)
                              (("2"
                                (auto-rewrite ("add" "union" "member"))
                                (("2"
                                  (assert)
                                  (("2"
                                    (iff)
                                    (("2" (prop) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (expand "every") (("3" (grind) nil nil)) nil))
            nil))
          nil)
         ("2" (expand "MVA_cps_modeled?")
          (("2" (skosimp*)
            (("2"
              (case-replace
               "get_GhostDecl(name_of(mp!1)(q!1), ann_program(mp!1)) = up((# jtype := IntType, name := name_of(mp!1)(q!1), init_val := Int(unique(q!1)) #))"
               :hide? t)
              (("1" (assert) nil nil)
               ("2" (hide 2)
                (("2" (expand "get_GhostDecl")
                  (("2" (lift-if)
                    (("2" (assert)
                      (("2" (rewrite "ann_program_add_ghost_var_decls")
                        (("2"
                          (case-replace "{g: FieldDecl[Name] |
                      union(getGhostDecls(program(mp!1)), new_gvds(mp!1))
                           (g)
                       AND name(g) = name_of(mp!1)(q!1)} = union({g: FieldDecl[Name] |
                      getGhostDecls(program(mp!1))(g) AND name(g) = name_of(mp!1)(q!1)}, {g: FieldDecl[Name] |
                      new_gvds(mp!1)
                           (g)
                       AND name(g) = name_of(mp!1)(q!1)})" :hide? t)
                          (("1"
                            (case-replace "{g: FieldDecl[Name] |
                            getGhostDecls(program(mp!1))(g) AND
                             name(g) = name_of(mp!1)(q!1)} = emptyset[FieldDecl[Name]]"
                             :hide? t)
                            (("1" (rewrite "union_commutative")
                              (("1"
                                (rewrite "union_empty")
                                (("1"
                                  (rewrite "new_gvds_as_union")
                                  (("1"
                                    (case-replace
                                     "{g_1: FieldDecl[Name] |
                      add((# jtype := IntType,
                             name := cp(mp!1),
                             init_val
                               := Int(unique(init_cp(mva(mp!1)))) #),
                          union({gd: FieldDecl[Name] |
                                   EXISTS (q: (cps(mva(mp!1)))):
                                     name(gd) = name_of(mp!1)(q) AND
                                      jtype(gd) = IntType AND
                                       init_val(gd) = Int(unique(q))},
                                {gd: FieldDecl[Name] |
                                   EXISTS (v: (vdsA(mva(mp!1)))):
                                     name(gd) = name(v) AND
                                      jtype(gd) = jtype(v) AND
                                       init_val(gd) = init_val(v)}))
                         (g_1)
                       AND name(g_1) = name_of(mp!1)(q!1)} = {gd: FieldDecl[Name] |
                                     name(gd) = name_of(mp!1)(q!1) AND
                                      jtype(gd) = IntType AND
                                       init_val(gd) = Int(unique(q!1))}"
                                     :hide?
                                     t)
                                    (("1"
                                      (case-replace
                                       "{gd: FieldDecl[Name] |
                      name(gd) = name_of(mp!1)(q!1) AND
                       jtype(gd) = IntType AND
                        init_val(gd) = Int(unique(q!1))} = add((# jtype := IntType, name := name_of(mp!1)(q!1), init_val := Int(unique(q!1)) #), emptyset[FieldDecl[Name]])"
                                       :hide?
                                       t)
                                      (("1"
                                        (expand "nonempty?")
                                        (("1"
                                          (rewrite "nonempty_add")
                                          (("1"
                                            (rewrite
                                             "singleton_as_add"
                                             :dir
                                             rl)
                                            (("1"
                                              (rewrite
                                               "choose_singleton")
                                              (("1" (grind) nil nil))
                                              nil)
                                             ("2" (grind) nil nil))
                                            nil)
                                           ("2" (postpone) nil nil))
                                          nil))
                                        nil)
                                       ("2" (postpone) nil nil)
                                       ("3" (postpone) nil nil))
                                      nil)
                                     ("2" (postpone) nil nil)
                                     ("3" (postpone) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (postpone) nil nil))
                            nil)
                           ("2" (postpone) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (postpone) nil nil))
              nil))
            nil))
          nil)
         ("3" (postpone) nil nil) ("4" (postpone) nil nil)
         ("5" (postpone) nil nil) ("6" (postpone) nil nil)
         ("7" (postpone) nil nil))
        nil))
      nil))
    nil)
   unfinished nil 203163 4418 t shostak))
 (derive_maintains_related_states_for_unchanged_program_TCC1 0
  (derive_maintains_related_states_for_unchanged_program_TCC1-1 nil
   3401441478 3403446089
   ("" (skosimp)
    (("" (expand "id")
      (("" (use "ann_program_preserves_wf_body") nil nil)) nil))
    nil)
   unchecked
   ((wf_Body const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (Class type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil)
    (Expr type-eq-decl nil Body_adt nil)
    (Stmt type-eq-decl nil Body_adt nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (BoolExpr type-eq-decl nil Body_adt nil)
    (FieldDecl type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (complete const-decl "boolean" MVASemantics nil)
    (MVA type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil)
    (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (ann_program_preserves_wf_body formula-decl nil
     AnnotateProgramProperties nil)
    (CP formal-nonempty-type-decl nil CorrectnessAnnProgram nil)
    (Name formal-nonempty-type-decl nil CorrectnessAnnProgram nil)
    (id const-decl "(bijective?[T, T])" identity nil))
   856 720 t nil))
 (derive_maintains_related_states_for_unchanged_program 0
  (derive_maintains_related_states_for_unchanged_program-2 nil
   3397482883 3398684678
   ("" (skosimp)
    ((""
      (lemma
       "wf_induction[[nat, nat], LAMBDA(i, j : [nat, nat]) : proj_1(i) < proj_1(j) AND proj_2(i) < proj_2(j)]")
      (("1"
        (inst -1 "LAMBDA(n1, n2 : nat) : FORALL (b: Body, v1, v2: Val)
                                                             (sMP1, sMP2: MPState, sAP1, sAP2: APState):
                                                          well_behaved_MP(mp!1) IMPLIES   subset?(var_names(b), ext_declared_var_names(program(mp!1))) IMPLIES
                                                           related_states(mp!1)(sMP1, sAP1) IMPLIES
                                                            derive(mp!1)(b, sMP1, v1, sMP2)(n1) IMPLIES
                                                             derive(ann_program(mp!1))(b, sAP1, v2, sAP2)(n2) IMPLIES
                                                              related_states(mp!1)(sMP2, sAP2) AND v1 = v2")
        (("1" (assert)
          (("1" (split -1)
            (("1" (skosimp*)
              (("1" (inst -1 "(n1!1, n2!1)")
                (("1" (apply (repeat (inst?))) (("1" (assert) nil nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (skosimp*)
                (("2" (use "related_states_implies_same_exception")
                  (("2" (assert)
                    (("2" (expand "derive" -6)
                      (("2" (expand "derive" -7)
                        (("2" (replace -1)
                          (("2" (split -6)
                            (("1"
                              (apply (then
                                      (flatten)
                                      (assert)
                                      (flatten)
                                      (assert)))
                              nil nil)
                             ("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (split -1)
                                    (("1"
                                      (apply
                                       (then
                                        (flatten)
                                        (assert)
                                        (flatten)
                                        (assert)))
                                      nil
                                      nil)
                                     ("2"
                                      (apply
                                       (then
                                        (flatten)
                                        (assert)
                                        (split -1)))
                                      (("1"
                                        (apply
                                         (then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (inst-cp -7 "(m1!1, m1!2)")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (apply
                                                 (repeat
                                                  (inst?
                                                   -8
                                                   :where
                                                   (-3 -13))))
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (apply
                                                     (then
                                                      (use
                                                       "subterm_subset_of_var"
                                                       ("b1" "b!1"))
                                                      (expand "<<")
                                                      (assert)
                                                      (assert)))
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -8
                                                           "(m2!1, m2!2)")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (repeat
                                                                (inst?
                                                                 -8
                                                                 :where
                                                                 (-5
                                                                  -16))))
                                                              (("1"
                                                                (apply
                                                                 (then
                                                                  (use
                                                                   "subterm_subset_of_var"
                                                                   ("b1"
                                                                    "b!1"
                                                                    "b2"
                                                                    "b2(b!1)"))
                                                                  (expand
                                                                   "<<")
                                                                  (assert)
                                                                  (assert)))
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (expand*
                                                                     "check_for_exception_final"
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (apply
                                                                       (then
                                                                        (use
                                                                         "related_states_implies_same_exception")
                                                                        (assert)
                                                                        (replace
                                                                         -1)))
                                                                      (("1"
                                                                        (apply
                                                                         (branch
                                                                          (split
                                                                           -8)
                                                                          ((then
                                                                            (flatten)
                                                                            (assert)))))
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply
                                         (then
                                          (flatten)
                                          (assert)
                                          (split -1)))
                                        (("1"
                                          (apply
                                           (then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))
                                          (("1"
                                            (use
                                             "related_states_implies_same_lookup")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "member")
                                                  (("1"
                                                    (inst
                                                     -8
                                                     "varname(b!1)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "var_names")
                                                        (("1"
                                                          (expand
                                                           "singleton")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (apply
                                           (then
                                            (flatten)
                                            (assert)
                                            (split -1)))
                                          (("1"
                                            (apply
                                             (then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))
                                            nil
                                            nil)
                                           ("2"
                                            (apply
                                             (then
                                              (flatten)
                                              (assert)
                                              (split -1)))
                                            (("1"
                                              (apply
                                               (then
                                                (flatten)
                                                (assert)
                                                (flatten)
                                                (assert)))
                                              nil
                                              nil)
                                             ("2"
                                              (apply
                                               (then
                                                (flatten)
                                                (assert)
                                                (split -1)))
                                              (("1"
                                                (apply
                                                 (then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -6
                                                       "(x!1`1 - 1, x!1`2 - 1)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (apply
                                                           (repeat
                                                            (inst?
                                                             -6
                                                             :where
                                                             (-3
                                                              -11))))
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (then
                                                                (use
                                                                 "subterm_subset_of_var"
                                                                 ("b1"
                                                                  "b!1"))
                                                                (expand
                                                                 "<<")
                                                                (assert)
                                                                (assert)))
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (expand*
                                                                   "check_for_exception_final"
                                                                   "check_for_exception")
                                                                  (("1"
                                                                    (apply
                                                                     (then
                                                                      (use
                                                                       "related_states_implies_same_exception")
                                                                      (assert)
                                                                      (replace
                                                                       -1)))
                                                                    (("1"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -6)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)))))
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (apply
                                                 (then
                                                  (flatten)
                                                  (assert)
                                                  (split -1)))
                                                (("1"
                                                  (apply
                                                   (then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (inst-cp
                                                       -7
                                                       "(m1!1, m1!2)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (apply
                                                           (repeat
                                                            (inst?
                                                             -8
                                                             :where
                                                             (-3
                                                              -13))))
                                                          (("1"
                                                            (apply
                                                             (then
                                                              (use
                                                               "subterm_subset_of_var"
                                                               ("b1"
                                                                "b!1"))
                                                              (expand
                                                               "<<")
                                                              (assert)
                                                              (assert)))
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (inst
                                                                 -8
                                                                 "(m2!1, m2!2)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (apply
                                                                     (repeat
                                                                      (inst?
                                                                       -8
                                                                       :where
                                                                       (-5
                                                                        -16))))
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (then
                                                                          (use
                                                                           "subterm_subset_of_var"
                                                                           ("b1"
                                                                            "b!1"
                                                                            "b2"
                                                                            "b2(b!1)"))
                                                                          (expand
                                                                           "<<")
                                                                          (assert)
                                                                          (assert)))
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (expand*
                                                                             "check_for_exception_final"
                                                                             "check_for_exception")
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (use
                                                                                 "related_states_implies_same_exception")
                                                                                (assert)
                                                                                (replace
                                                                                 -1)))
                                                                              (("1"
                                                                                (apply
                                                                                 (branch
                                                                                  (split
                                                                                   -8)
                                                                                  ((then
                                                                                    (flatten)
                                                                                    (assert)))))
                                                                                (("1"
                                                                                  (replace
                                                                                   -13)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -15)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -22)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (apply
                                                   (then
                                                    (flatten)
                                                    (assert)
                                                    (split -1)))
                                                  (("1"
                                                    (apply
                                                     (then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))
                                                    (("1"
                                                      (skosimp*)
                                                      (("1"
                                                        (inst-cp
                                                         -7
                                                         "(m1!1, m1!2)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -8
                                                               :where
                                                               (-3
                                                                -13))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (apply
                                                                 (then
                                                                  (use
                                                                   "subterm_subset_of_var"
                                                                   ("b1"
                                                                    "b!1"))
                                                                  (expand
                                                                   "<<")
                                                                  (assert)
                                                                  (assert)))
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst
                                                                     -8
                                                                     "(m2!1, m2!2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -8
                                                                           :where
                                                                           (-5
                                                                            -16))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (then
                                                                              (use
                                                                               "subterm_subset_of_var"
                                                                               ("b1"
                                                                                "b!1"
                                                                                "b2"
                                                                                "b2(b!1)"))
                                                                              (expand
                                                                               "<<")
                                                                              (assert)
                                                                              (assert)))
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (expand*
                                                                                 "check_for_exception_final"
                                                                                 "check_for_exception")
                                                                                (("1"
                                                                                  (apply
                                                                                   (then
                                                                                    (use
                                                                                     "related_states_implies_same_exception")
                                                                                    (assert)
                                                                                    (replace
                                                                                     -1)))
                                                                                  (("1"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -8)
                                                                                      ((then
                                                                                        (flatten)
                                                                                        (assert)))))
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (apply
                                                     (then
                                                      (flatten)
                                                      (assert)
                                                      (split -1)))
                                                    (("1"
                                                      (apply
                                                       (then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))
                                                      (("1"
                                                        (use
                                                         "related_states_implies_same_lookup")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (expand
                                                               "member")
                                                              (("1"
                                                                (inst?
                                                                 -8)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "var_names")
                                                                    (("1"
                                                                      (auto-rewrite
                                                                       "union"
                                                                       "member")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "singleton")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (apply
                                                       (then
                                                        (flatten)
                                                        (assert)
                                                        (split -1)))
                                                      (("1"
                                                        (apply
                                                         (then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (apply
                                                         (then
                                                          (flatten)
                                                          (assert)
                                                          (split -1)))
                                                        (("1"
                                                          (apply
                                                           (then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))
                                                          (("1"
                                                            (use
                                                             "get_address_same_in_related_states")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (use
                                                                   "get_dynamic_type_name_same_in_related_states")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply
                                                           (then
                                                            (flatten)
                                                            (assert)
                                                            (split
                                                             -1)))
                                                          (("1"
                                                            (apply
                                                             (then
                                                              (flatten)
                                                              (assert)
                                                              (flatten)
                                                              (assert)))
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -6
                                                                   "(x!1`1 - 1, x!1`2 - 1)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -6)))
                                                                      (("1"
                                                                        (apply
                                                                         (then
                                                                          (use
                                                                           "subterm_subset_of_var"
                                                                           ("b1"
                                                                            "b!1"))
                                                                          (expand
                                                                           "<<")
                                                                          (assert)
                                                                          (assert)))
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (use
                                                                                 "related_states_implies_same_exception")
                                                                                (assert)
                                                                                (replace
                                                                                 -1)))
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (apply
                                                                                   (branch
                                                                                    (split
                                                                                     -6)
                                                                                    ((then
                                                                                      (flatten)
                                                                                      (assert)))))
                                                                                  (("1"
                                                                                    (expand
                                                                                     "related_states"
                                                                                     14)
                                                                                    (("1"
                                                                                      (split
                                                                                       14)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "related_states"
                                                                                         -8)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (use
                                                                                             "MonitoredProgramSemantics.wf_update_PState")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "wf_state_update")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (use
                                                                                                       "derive_bottom_iff_exception_step"
                                                                                                       ("p"
                                                                                                        "mp!1"))
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "defined?")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "related_states"
                                                                                         -8)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (use
                                                                                             "AnnotatedProgramSemantics.wf_update_PState")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "wf_state_update")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (use
                                                                                                       "derive_bottom_iff_exception_step"
                                                                                                       ("p"
                                                                                                        "ann_program(mp!1)"))
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "defined?")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (use
                                                                                         "MP_modeled_preserved_by_update")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("4"
                                                                                        (use
                                                                                         "halted_implies_JMLExc_preserved_by_update")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          (("4"
                                                                                            (expand*
                                                                                             "update"
                                                                                             "update_field"
                                                                                             "update_local")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply
                                                             (then
                                                              (flatten)
                                                              (assert)
                                                              (split
                                                               -1)))
                                                            (("1"
                                                              (apply
                                                               (then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))
                                                              (("1"
                                                                (inst
                                                                 -5
                                                                 "(x!1`1 - 1, x!1`2 - 1)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst?
                                                                     -5)
                                                                    (("1"
                                                                      (inst?
                                                                       -5)
                                                                      (("1"
                                                                        (inst?
                                                                         -5)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (then
                                                                              (use
                                                                               "subterm_subset_of_var"
                                                                               ("b1"
                                                                                "b!1"))
                                                                              (expand
                                                                               "<<")
                                                                              (assert)
                                                                              (assert)))
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (then
                                                                (flatten)
                                                                (assert)
                                                                (split
                                                                 -1)))
                                                              (("1"
                                                                (apply
                                                                 (then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst-cp
                                                                     -6
                                                                     "(m1!1, m1!2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -7
                                                                           :where
                                                                           (-3
                                                                            -12))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (then
                                                                              (use
                                                                               "subterm_subset_of_var"
                                                                               ("b1"
                                                                                "b!1"))
                                                                              (expand
                                                                               "<<")
                                                                              (assert)
                                                                              (assert)))
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (expand
                                                                                 "check_for_exception")
                                                                                (("1"
                                                                                  (apply
                                                                                   (then
                                                                                    (use
                                                                                     "related_states_implies_same_exception")
                                                                                    (assert)
                                                                                    (replace
                                                                                     -1)))
                                                                                  (("1"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -6)
                                                                                      ((then
                                                                                        (flatten)
                                                                                        (assert)))))
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -11)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (split
                                                                                           -2)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -10
                                                                                                 "(m2!1, m2!2)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -10
                                                                                                       :where
                                                                                                       (-2
                                                                                                        -18))))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (apply
                                                                                                         (then
                                                                                                          (use
                                                                                                           "subterm_subset_of_var"
                                                                                                           ("b1"
                                                                                                            "b!1"
                                                                                                            "b2"
                                                                                                            "then_expr(b!1)"))
                                                                                                          (expand
                                                                                                           "<<")
                                                                                                          (assert)
                                                                                                          (assert)))
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -9
                                                                                               "(m2!1, m2!2)")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (repeat
                                                                                                    (inst?
                                                                                                     -9
                                                                                                     :where
                                                                                                     (-1
                                                                                                      -17))))
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (apply
                                                                                                       (then
                                                                                                        (use
                                                                                                         "subterm_subset_of_var"
                                                                                                         ("b1"
                                                                                                          "b!1"
                                                                                                          "b2"
                                                                                                          "else_expr(b!1)"))
                                                                                                        (expand
                                                                                                         "<<")
                                                                                                        (assert)
                                                                                                        (assert)))
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (apply
                                                                 (then
                                                                  (flatten)
                                                                  (assert)
                                                                  (split
                                                                   -1)))
                                                                (("1"
                                                                  (apply
                                                                   (then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))
                                                                  (("1"
                                                                    (skosimp*)
                                                                    (("1"
                                                                      (inst-cp
                                                                       -16
                                                                       "(m1!1, m1!2)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -17
                                                                             :where
                                                                             (-3
                                                                              -22))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (use
                                                                                 "subterm_subset_of_var"
                                                                                 ("b1"
                                                                                  "b!1"))
                                                                                (expand
                                                                                 "<<")
                                                                                (assert)
                                                                                (assert)))
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst-cp
                                                                                   -17
                                                                                   "(m2!1, m2!2)")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (repeat
                                                                                        (inst?
                                                                                         -18
                                                                                         :where
                                                                                         (-5
                                                                                          -26))))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (apply
                                                                                           (then
                                                                                            (use
                                                                                             "subterm_subset_of_var"
                                                                                             ("b1"
                                                                                              "b!1"
                                                                                              "b2"
                                                                                              "arg(b!1)"))
                                                                                            (expand
                                                                                             "<<")
                                                                                            (assert)
                                                                                            (assert)))
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (case
                                                                                               "up?(ex(pstate(tau2!1)))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "on_method_entry_MP")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -10)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -8)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "up?(ex(pstate(tau5!1)))")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "derive"
                                                                                                             -15)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replace
                                                                                                             -13)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "update_stack")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "o")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "update_local")
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (apply
                                                                                                 (then
                                                                                                  (use
                                                                                                   "related_states_implies_same_exception")
                                                                                                  (assert)
                                                                                                  (replace
                                                                                                   -1)))
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "Null?[Name](a!1)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -9)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "on_method_entry_MP")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "update_PState"
                                                                                                           -11)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "raise"
                                                                                                             -11)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "up?(ex(pstate(tau5!1)))")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "derive"
                                                                                                                   -16)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (replace
                                                                                                                   -14)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "update_stack")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "update_PState")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "o")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "update_local")
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -8)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -30)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           -9)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 -32)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "id")
                                                                                                                      (("1"
                                                                                                                        (use
                                                                                                                         "lookup_mthd_ann_program")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -27)
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "defined?(a!2)")
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (auto-rewrite
                                                                                                                                       "ann_method_body"
                                                                                                                                       "ann_method_pre"
                                                                                                                                       "ann_method_post"
                                                                                                                                       "ann_method_res"
                                                                                                                                       "ann_method_arg"
                                                                                                                                       "ann_method_res_type"
                                                                                                                                       "ann_method_lvars")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "lookup_mthd"
                                                                                                                                           -6)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "lookup_mthd"
                                                                                                                                             -7)
                                                                                                                                            (("1"
                                                                                                                                              (lift-if)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -6)
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (use
                                                                                                                                                           "on_method_entry_preserves_related_states_annotated")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (split
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (case-replace
                                                                                                                                                                 "old_val_arg!1 = old_val_arg!2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "defined?(old_val_arg!2)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "related_states(mp!1)(tau5!1, tau5!2)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst-cp
                                                                                                                                                                       -30
                                                                                                                                                                       "(m4!1, m4!2)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (apply
                                                                                                                                                                           (repeat
                                                                                                                                                                            (inst?
                                                                                                                                                                             -31
                                                                                                                                                                             :where
                                                                                                                                                                             (-24
                                                                                                                                                                              -46))))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (split
                                                                                                                                                                               -31)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (case
                                                                                                                                                                                 "related_states(mp!1)(tau7!1, tau7!2) AND w!1 = w!2")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (apply
                                                                                                                                                                                     (then
                                                                                                                                                                                      (use
                                                                                                                                                                                       "related_states_implies_same_exception")
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -1)))
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       -30)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "on_method_exit_normal_preserves_related_states_annotated")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (split
                                                                                                                                                                                                 -1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (apply
                                                                                                                                                                                                   (then
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "related_states_implies_same_exception")
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -1)))
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     18)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -56)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -35)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "related_states_preserved_by_update_local")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "related_states"
                                                                                                                                                                                                               -3)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "wf_state"
                                                                                                                                                                                                                 -3)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (use
                                                                                                                                                                                                                     "wf_state_arg_is_local")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_state_arg_is_local"
                                                                                                                                                                                                                         ("s"
                                                                                                                                                                                                                          "pstate(tau8!2)"
                                                                                                                                                                                                                          "p"
                                                                                                                                                                                                                          "ann_program(mp!1)"
                                                                                                                                                                                                                          "c"
                                                                                                                                                                                                                          "ann_class(mp!1)(down(get_class(program(mp!1))(a!2)))"
                                                                                                                                                                                                                          "m"
                                                                                                                                                                                                                          "ann_method(mp!1)(md!1)"))
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "lookup_mthd")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                                   -26)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                                         -3)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "ann_class")
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                             "ann_methods")
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "ann_program")
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       -55)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -39
                                                                                                                                                                                                     "(n1!1, n2!1)")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (apply
                                                                                                                                                                                                         (repeat
                                                                                                                                                                                                          (inst?
                                                                                                                                                                                                           -39
                                                                                                                                                                                                           :where
                                                                                                                                                                                                           (-3
                                                                                                                                                                                                            -4))))
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "on_method_exit_exceptional_preserves_related_states_annotated")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (split
                                                                                                                                                                                                 -1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (apply
                                                                                                                                                                                                   (then
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "related_states_implies_same_exception")
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -1)))
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     19)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -55)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -34)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "related_states_preserved_by_update_local")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "related_states"
                                                                                                                                                                                                               -3)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "wf_state"
                                                                                                                                                                                                                 -3)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (use
                                                                                                                                                                                                                     "wf_state_arg_is_local")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_state_arg_is_local"
                                                                                                                                                                                                                         ("s"
                                                                                                                                                                                                                          "pstate(tau8!2)"
                                                                                                                                                                                                                          "p"
                                                                                                                                                                                                                          "ann_program(mp!1)"
                                                                                                                                                                                                                          "c"
                                                                                                                                                                                                                          "ann_class(mp!1)(down(get_class(program(mp!1))(a!2)))"
                                                                                                                                                                                                                          "m"
                                                                                                                                                                                                                          "ann_method(mp!1)(md!1)"))
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "lookup_mthd")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                                   -25)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                                         -3)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "ann_class")
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                             "ann_methods")
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "ann_program")
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       -54)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -38
                                                                                                                                                                                                     "(n1!1, n2!1)")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (apply
                                                                                                                                                                                                         (repeat
                                                                                                                                                                                                          (inst?
                                                                                                                                                                                                           -38
                                                                                                                                                                                                           :where
                                                                                                                                                                                                           (-3
                                                                                                                                                                                                            -4))))
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   -47)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -32
                                                                                                                                                                                         "(m5!1, m5!2)")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (apply
                                                                                                                                                                                             (repeat
                                                                                                                                                                                              (inst?
                                                                                                                                                                                               -32
                                                                                                                                                                                               :where
                                                                                                                                                                                               (-1
                                                                                                                                                                                                -27))))
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (split
                                                                                                                                                                                                 -32)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (typepred
                                                                                                                                                                                                   "mp!1")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand*
                                                                                                                                                                                                     "wf_MP"
                                                                                                                                                                                                     "wf_Program"
                                                                                                                                                                                                     "wf_program_all_variables_declared"
                                                                                                                                                                                                     "ext_declared_var_names"
                                                                                                                                                                                                     "declared_var_names")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (auto-rewrite
                                                                                                                                                                                                       "subset?"
                                                                                                                                                                                                       "union"
                                                                                                                                                                                                       "member")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst?
                                                                                                                                                                                                             -7)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "var_names"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "Union")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                     1
                                                                                                                                                                                                                     "var_names(down(get_class(program(mp!1))(a!2)))")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "var_names"
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "Union")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                               1
                                                                                                                                                                                                                               "var_names(md!1)")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                 "var_names"
                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "Union")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                     1
                                                                                                                                                                                                                                     "var_names(res(md!1))")
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil)
                                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (typepred
                                                                                                                                                                                 "mp!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand*
                                                                                                                                                                                   "wf_MP"
                                                                                                                                                                                   "wf_Program"
                                                                                                                                                                                   "wf_program_all_variables_declared"
                                                                                                                                                                                   "ext_declared_var_names"
                                                                                                                                                                                   "declared_var_names")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (auto-rewrite
                                                                                                                                                                                     "subset?"
                                                                                                                                                                                     "union"
                                                                                                                                                                                     "member")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst?
                                                                                                                                                                                           -7)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "var_names"
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "Union")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   1
                                                                                                                                                                                                   "var_names(down(get_class(program(mp!1))(a!2)))")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "var_names"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "Union")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             1
                                                                                                                                                                                                             "var_names(md!1)")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "var_names"
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "Union")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   1
                                                                                                                                                                                                                   "var_names(body(md!1))")
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -41)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -43)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -22)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -31)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (use
                                                                                                                                                                               "related_states_preserved_by_update_stack")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (split
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "getLocalDecls")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst?)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "derive"
                                                                                                                                                                                     -45)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (split
                                                                                                                                                                                         -45)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (hide
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "update_stack"
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "o")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "update_local")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (use
                                                                                                                                                                                 "arg_in_getLocalDecls")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -41)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "related_states"
                                                                                                                                                                       -2)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "wf_state"
                                                                                                                                                                         -2)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "wf_state"
                                                                                                                                                                             -5)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -5
                                                                                                                                                                               "name(arg(md!1))")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   -8)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "is_local")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "lookup_local")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "var_names"
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         1
                                                                                                                                                                                         "arg(md!1)")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "ann_program_preserves_var_decls")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -2
                                                                                                                                                                                               :dir
                                                                                                                                                                                               rl)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "arg_in_getLocalDecls")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -19)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -40)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (use
                                                                                                                                                                       "related_states_implies_same_lookup"
                                                                                                                                                                       ("sMP"
                                                                                                                                                                        "tau4!1"
                                                                                                                                                                        "sAP"
                                                                                                                                                                        "tau4!2"))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "related_states"
                                                                                                                                                                             -2)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "wf_state"
                                                                                                                                                                               -2)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (use
                                                                                                                                                                                 "wf_state_arg_is_local")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (use
                                                                                                                                                                                     "wf_state_arg_is_local"
                                                                                                                                                                                     ("s"
                                                                                                                                                                                      "pstate(tau4!2)"
                                                                                                                                                                                      "p"
                                                                                                                                                                                      "ann_program(mp!1)"
                                                                                                                                                                                      "c"
                                                                                                                                                                                      "ann_class(mp!1)(down(get_class(program(mp!1))(a!2)))"
                                                                                                                                                                                      "m"
                                                                                                                                                                                      "ann_method(mp!1)(md!1)"))
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "lookup_mthd")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (split
                                                                                                                                                                                               -10)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       -3)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "lookup")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "ann_class")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "ann_methods")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "ann_program")
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "ext_declared_var_names")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (auto-rewrite
                                                                                                                                                                               "union"
                                                                                                                                                                               "member")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "var_names"
                                                                                                                                                                                     2)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       2
                                                                                                                                                                                       "arg(md!1)")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "arg_in_getLocalDecls")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (skosimp*)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -30
                                                                                                                                                                   "(n1!1, n2!1)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (apply
                                                                                                                                                                       (repeat
                                                                                                                                                                        (inst?
                                                                                                                                                                         -30
                                                                                                                                                                         :where
                                                                                                                                                                         (-3
                                                                                                                                                                          -4))))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "lookup_mthd")
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (split
                                                                                                                                             -3)
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               -5)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (use
                                                                                                                                                     "on_method_entry_preserves_related_states_not_annotated")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (split
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (case-replace
                                                                                                                                                           "old_val_arg!1 = old_val_arg!2")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "defined?(old_val_arg!2)")
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "related_states(mp!1)(tau5!1, tau5!2)")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst-cp
                                                                                                                                                                 -30
                                                                                                                                                                 "(m4!1, m4!2)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (apply
                                                                                                                                                                     (repeat
                                                                                                                                                                      (inst?
                                                                                                                                                                       -31
                                                                                                                                                                       :where
                                                                                                                                                                       (-24
                                                                                                                                                                        -46))))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (split
                                                                                                                                                                         -31)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "related_states(mp!1)(tau7!1, tau7!2) AND w!1 = w!2")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (apply
                                                                                                                                                                               (then
                                                                                                                                                                                (use
                                                                                                                                                                                 "related_states_implies_same_exception")
                                                                                                                                                                                (assert)
                                                                                                                                                                                (replace
                                                                                                                                                                                 -1)))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (split
                                                                                                                                                                                 -30)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "on_method_exit_normal_preserves_related_states_not_annotated")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (apply
                                                                                                                                                                                             (then
                                                                                                                                                                                              (use
                                                                                                                                                                                               "related_states_implies_same_exception")
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (split
                                                                                                                                                                                               19)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -56)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -35)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "related_states_preserved_by_update_local")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "related_states"
                                                                                                                                                                                                         -3)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "wf_state"
                                                                                                                                                                                                           -3)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "wf_state_arg_is_local")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "wf_state_arg_is_local"
                                                                                                                                                                                                                   ("s"
                                                                                                                                                                                                                    "pstate(tau8!2)"
                                                                                                                                                                                                                    "p"
                                                                                                                                                                                                                    "ann_program(mp!1)"))
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "ann_program")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "ann_class")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (apply
                                                                                                                                                                                                 (branch
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   -55)
                                                                                                                                                                                                  ((then
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (assert)))))
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -39
                                                                                                                                                                                               "(n1!1, n2!1)")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (apply
                                                                                                                                                                                                   (repeat
                                                                                                                                                                                                    (inst?
                                                                                                                                                                                                     -39
                                                                                                                                                                                                     :where
                                                                                                                                                                                                     (-3
                                                                                                                                                                                                      -4))))
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "on_method_exit_exceptional_preserves_related_states_not_annotated")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (apply
                                                                                                                                                                                             (then
                                                                                                                                                                                              (use
                                                                                                                                                                                               "related_states_implies_same_exception")
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (split
                                                                                                                                                                                               20)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -55)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -34)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "related_states_preserved_by_update_local")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "related_states"
                                                                                                                                                                                                         -3)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "wf_state"
                                                                                                                                                                                                           -3)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "wf_state_arg_is_local")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "wf_state_arg_is_local"
                                                                                                                                                                                                                   ("s"
                                                                                                                                                                                                                    "pstate(tau8!2)"
                                                                                                                                                                                                                    "p"
                                                                                                                                                                                                                    "ann_program(mp!1)"))
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "ann_program")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "ann_class")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (apply
                                                                                                                                                                                                 (branch
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   -54)
                                                                                                                                                                                                  ((then
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (assert)))))
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -38
                                                                                                                                                                                               "(n1!1, n2!1)")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (apply
                                                                                                                                                                                                   (repeat
                                                                                                                                                                                                    (inst?
                                                                                                                                                                                                     -38
                                                                                                                                                                                                     :where
                                                                                                                                                                                                     (-3
                                                                                                                                                                                                      -4))))
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (split
                                                                                                                                                                             -47)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -32
                                                                                                                                                                                   "(m5!1, m5!2)")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (repeat
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -32
                                                                                                                                                                                         :where
                                                                                                                                                                                         (-1
                                                                                                                                                                                          -27))))
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -32)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "mp!1")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "wf_MP"
                                                                                                                                                                                               "wf_Program"
                                                                                                                                                                                               "wf_program_all_variables_declared"
                                                                                                                                                                                               "ext_declared_var_names"
                                                                                                                                                                                               "declared_var_names")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (auto-rewrite
                                                                                                                                                                                                 "subset?"
                                                                                                                                                                                                 "union"
                                                                                                                                                                                                 "member")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst?
                                                                                                                                                                                                         -7)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "var_names"
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "Union")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 1
                                                                                                                                                                                                                 "var_names(down(get_class(program(mp!1))(a!2)))")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "var_names"
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "Union")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           "var_names(md!1)")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "var_names"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "Union")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                 "var_names(res(md!1))")
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "mp!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand*
                                                                                                                                                                             "wf_MP"
                                                                                                                                                                             "wf_Program"
                                                                                                                                                                             "wf_program_all_variables_declared"
                                                                                                                                                                             "ext_declared_var_names"
                                                                                                                                                                             "declared_var_names")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (auto-rewrite
                                                                                                                                                                               "subset?"
                                                                                                                                                                               "union"
                                                                                                                                                                               "member")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst?
                                                                                                                                                                                       -7)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "var_names"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "Union")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               1
                                                                                                                                                                                               "var_names(down(get_class(program(mp!1))(a!2)))")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "var_names"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "Union")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         1
                                                                                                                                                                                                         "var_names(md!1)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "var_names"
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "Union")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               1
                                                                                                                                                                                                               "var_names(body(md!1))")
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -43)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -22)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -31)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (use
                                                                                                                                                                       "related_states_preserved_by_update_stack")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (split
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "getLocalDecls")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst?)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "derive"
                                                                                                                                                                             -45)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (split
                                                                                                                                                                               -45)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (hide
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "update_stack"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (split
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "update_PState")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "o")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "update_local")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (use
                                                                                                                                                                         "arg_in_getLocalDecls")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (expand
                                                                                                                                                               "related_states"
                                                                                                                                                               -2)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "wf_state"
                                                                                                                                                                 -2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "wf_state"
                                                                                                                                                                     -5)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -47)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -5
                                                                                                                                                                         "name(arg(md!1))")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             -8)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "is_local")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "lookup_local")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "var_names"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   1
                                                                                                                                                                                   "arg(md!1)")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (use
                                                                                                                                                                                     "arg_in_getLocalDecls")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "ann_program")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "ann_class")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -40)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -19)
                                                                                                                                                              (("2"
                                                                                                                                                                (use
                                                                                                                                                                 "related_states_implies_same_lookup")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (split
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "related_states"
                                                                                                                                                                       -2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "wf_state"
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (use
                                                                                                                                                                             "wf_state_arg_is_local")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (use
                                                                                                                                                                                 "wf_state_arg_is_local"
                                                                                                                                                                                 ("s"
                                                                                                                                                                                  "pstate(tau4!2)"
                                                                                                                                                                                  "p"
                                                                                                                                                                                  "ann_program(mp!1)"))
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (split
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "lookup")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "ann_program")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst?)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "ann_class")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "ext_declared_var_names")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (auto-rewrite
                                                                                                                                                                         "union"
                                                                                                                                                                         "member")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "var_names"
                                                                                                                                                                               2)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 2
                                                                                                                                                                                 "arg(md!1)")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (use
                                                                                                                                                                                   "arg_in_getLocalDecls")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -30
                                                                                                                                                             "(n1!1, n2!1)")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (apply
                                                                                                                                                                 (repeat
                                                                                                                                                                  (inst?
                                                                                                                                                                   -30
                                                                                                                                                                   :where
                                                                                                                                                                   (-3
                                                                                                                                                                    -4))))
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (use
                                                                                                                                 "derive_bottom_iff_exception_step"
                                                                                                                                 ("p"
                                                                                                                                  "ann_program(mp!1)"))
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "defined?")
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -1
                                                                                                                                       :hide?
                                                                                                                                       t)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "derive"
                                                                                                                                         -34)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (apply
                                                                   (then
                                                                    (flatten)
                                                                    (assert)
                                                                    (split
                                                                     -1)))
                                                                  (("1"
                                                                    (apply
                                                                     (then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))
                                                                    (("1"
                                                                      (inst
                                                                       -5
                                                                       "(x!1`1 - 1, x!1`2 - 1)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -5)))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (use
                                                                                 "subterm_subset_of_var"
                                                                                 ("b1"
                                                                                  "b!1"))
                                                                                (expand
                                                                                 "<<")
                                                                                (assert)
                                                                                (assert)))
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (apply
                                                                     (then
                                                                      (flatten)
                                                                      (assert)
                                                                      (split
                                                                       -1)))
                                                                    (("1"
                                                                      (apply
                                                                       (then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))
                                                                      (("1"
                                                                        (inst
                                                                         -5
                                                                         "(x!1`1 - 1, x!1`2 - 1)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -5)))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (apply
                                                                                 (then
                                                                                  (use
                                                                                   "subterm_subset_of_var"
                                                                                   ("b1"
                                                                                    "b!1"))
                                                                                  (expand
                                                                                   "<<")
                                                                                  (assert)
                                                                                  (assert)))
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (apply
                                                                       (then
                                                                        (flatten)
                                                                        (assert)
                                                                        (split
                                                                         -1)))
                                                                      (("1"
                                                                        (apply
                                                                         (then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))
                                                                        (("1"
                                                                          (expand
                                                                           "execute_CaseJML")
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (split
                                                                               -4)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -7
                                                                                     "(x!1`1 - 1, x!1`2 - 1)")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (apply
                                                                                         (repeat
                                                                                          (inst?
                                                                                           -7
                                                                                           :where
                                                                                           (-2
                                                                                            -13))))
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -7)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "return_of_stmt")
                                                                                                (("1"
                                                                                                  (apply
                                                                                                   (then
                                                                                                    (use
                                                                                                     "related_states_implies_same_exception")
                                                                                                    (assert)
                                                                                                    (replace
                                                                                                     -1)))
                                                                                                  (("1"
                                                                                                    (lift-if)
                                                                                                    (("1"
                                                                                                      (apply
                                                                                                       (branch
                                                                                                        (split
                                                                                                         -7)
                                                                                                        (then
                                                                                                         (flatten)
                                                                                                         (assert))))
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("4"
                                                                                              (expand*
                                                                                               "subset?"
                                                                                               "member")
                                                                                              (("4"
                                                                                                (skosimp*)
                                                                                                (("4"
                                                                                                  (expand
                                                                                                   "var_names")
                                                                                                  (("4"
                                                                                                    (inst
                                                                                                     -10
                                                                                                     "x!2")
                                                                                                    (("4"
                                                                                                      (assert)
                                                                                                      (("4"
                                                                                                        (split
                                                                                                         21)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (apply
                                                                         (then
                                                                          (flatten)
                                                                          (assert)
                                                                          (split
                                                                           -1)))
                                                                        (("1"
                                                                          (apply
                                                                           (then
                                                                            (flatten)
                                                                            (assert)
                                                                            (flatten)
                                                                            (assert)))
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst-cp
                                                                               -7
                                                                               "(m1!1, m1!2)")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (apply
                                                                                   (repeat
                                                                                    (inst?
                                                                                     -8
                                                                                     :where
                                                                                     (-4
                                                                                      -14))))
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (then
                                                                                        (use
                                                                                         "subterm_subset_of_var"
                                                                                         ("b1"
                                                                                          "b!1"))
                                                                                        (expand
                                                                                         "<<")
                                                                                        (assert)
                                                                                        (assert)))
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -10)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "check_for_exception")
                                                                                            (("1"
                                                                                              (apply
                                                                                               (then
                                                                                                (use
                                                                                                 "related_states_implies_same_exception")
                                                                                                (assert)
                                                                                                (replace
                                                                                                 -1)))
                                                                                              (("1"
                                                                                                (apply
                                                                                                 (branch
                                                                                                  (split
                                                                                                   -7)
                                                                                                  ((then
                                                                                                    (flatten)
                                                                                                    (assert)))))
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (apply
                                                                                                     (branch
                                                                                                      (split
                                                                                                       -2)
                                                                                                      ((then
                                                                                                        (flatten)
                                                                                                        (assert)))))
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -11
                                                                                                       "(m2!1, m2!2)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (repeat
                                                                                                            (inst?
                                                                                                             -11
                                                                                                             :where
                                                                                                             (-2
                                                                                                              -20))))
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "subterm_subset_of_var"
                                                                                                                 ("b1"
                                                                                                                  "b!1"
                                                                                                                  "b2"
                                                                                                                  "then_stmt(b!1)"))
                                                                                                                (expand
                                                                                                                 "<<")
                                                                                                                (assert)
                                                                                                                (assert)))
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "return_of_stmt")
                                                                                                                (("1"
                                                                                                                  (apply
                                                                                                                   (then
                                                                                                                    (use
                                                                                                                     "related_states_implies_same_exception")
                                                                                                                    (assert)
                                                                                                                    (replace
                                                                                                                     -1)))
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (apply
                                                                                                                       (branch
                                                                                                                        (split
                                                                                                                         -9)
                                                                                                                        ((then
                                                                                                                          (flatten)
                                                                                                                          (assert)))))
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       -10
                                                                                                       "(m2!1, m2!2)")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (apply
                                                                                                           (repeat
                                                                                                            (inst?
                                                                                                             -10
                                                                                                             :where
                                                                                                             (-1
                                                                                                              -19))))
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "subterm_subset_of_var"
                                                                                                                 ("b1"
                                                                                                                  "b!1"
                                                                                                                  "b2"
                                                                                                                  "else_stmt(b!1)"))
                                                                                                                (expand
                                                                                                                 "<<")
                                                                                                                (assert)
                                                                                                                (assert)))
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "return_of_stmt")
                                                                                                                (("2"
                                                                                                                  (apply
                                                                                                                   (then
                                                                                                                    (use
                                                                                                                     "related_states_implies_same_exception")
                                                                                                                    (assert)
                                                                                                                    (replace
                                                                                                                     -1)))
                                                                                                                  (("2"
                                                                                                                    (lift-if)
                                                                                                                    (("2"
                                                                                                                      (apply
                                                                                                                       (branch
                                                                                                                        (split
                                                                                                                         -8)
                                                                                                                        ((then
                                                                                                                          (flatten)
                                                                                                                          (assert)))))
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (apply
                                                                           (then
                                                                            (flatten)
                                                                            (assert)
                                                                            (split
                                                                             -1)))
                                                                          (("1"
                                                                            (apply
                                                                             (then
                                                                              (flatten)
                                                                              (assert)
                                                                              (flatten)
                                                                              (assert)))
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -7
                                                                                 "(m1!1, m1!2)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (repeat
                                                                                      (inst?
                                                                                       -8
                                                                                       :where
                                                                                       (-4
                                                                                        -14))))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (apply
                                                                                         (then
                                                                                          (use
                                                                                           "subterm_subset_of_var"
                                                                                           ("b1"
                                                                                            "b!1"))
                                                                                          (expand
                                                                                           "<<")
                                                                                          (assert)
                                                                                          (assert)))
                                                                                        (("1"
                                                                                          (inst
                                                                                           -8
                                                                                           "(m2!1, m2!2)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -8
                                                                                                 :where
                                                                                                 (-6
                                                                                                  -16))))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (apply
                                                                                                   (then
                                                                                                    (use
                                                                                                     "subterm_subset_of_var"
                                                                                                     ("b1"
                                                                                                      "b!1"
                                                                                                      "b2"
                                                                                                      "s2(b!1)"))
                                                                                                    (expand
                                                                                                     "<<")
                                                                                                    (assert)
                                                                                                    (assert)))
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "return_of_stmt")
                                                                                                    (("1"
                                                                                                      (apply
                                                                                                       (then
                                                                                                        (use
                                                                                                         "related_states_implies_same_exception")
                                                                                                        (assert)
                                                                                                        (replace
                                                                                                         -1)))
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (branch
                                                                                                            (split
                                                                                                             -5)
                                                                                                            ((then
                                                                                                              (flatten)
                                                                                                              (assert)))))
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (apply
                                                                             (then
                                                                              (flatten)
                                                                              (assert)
                                                                              (split
                                                                               -1)))
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (flatten)
                                                                                (assert)
                                                                                (flatten)
                                                                                (assert)))
                                                                              (("1"
                                                                                (use
                                                                                 "derive_yields_wf_state_MP"
                                                                                 ("sigma1"
                                                                                  "sMP1!1"
                                                                                  "sigma2"
                                                                                  "sMP2!1"))
                                                                                (("1"
                                                                                  (use
                                                                                   "derive_yields_wf_state_AP"
                                                                                   ("sigma1"
                                                                                    "sAP1!1"
                                                                                    "sigma2"
                                                                                    "sAP2!1"
                                                                                    "v"
                                                                                    "v2!1"
                                                                                    "n"
                                                                                    "x!1`2"))
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "mp!1")
                                                                                    (("1"
                                                                                      (use
                                                                                       "ann_program_yields_wf_program")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (copy
                                                                                           -14)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "related_states"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "execute_set")
                                                                                                  (("1"
                                                                                                    (skosimp*)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -17
                                                                                                       "(x!1`1 -1, x!1`2 - 1)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (repeat
                                                                                                            (inst?
                                                                                                             -17
                                                                                                             :where
                                                                                                             (-13
                                                                                                              -23))))
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "subterm_subset_of_var"
                                                                                                                 ("b1"
                                                                                                                  "b!1"))
                                                                                                                (expand
                                                                                                                 "<<")
                                                                                                                (assert)
                                                                                                                (assert)))
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (apply
                                                                                                                     (then
                                                                                                                      (use
                                                                                                                       "related_states_implies_same_exception")
                                                                                                                      (assert)
                                                                                                                      (replace
                                                                                                                       -1)))
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (apply
                                                                                                                         (branch
                                                                                                                          (split
                                                                                                                           -16)
                                                                                                                          ((then
                                                                                                                            (flatten)
                                                                                                                            (assert)))))
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "related_states"
                                                                                                                           23)
                                                                                                                          (("1"
                                                                                                                            (auto-rewrite
                                                                                                                             "union"
                                                                                                                             "member"
                                                                                                                             "disjoint?"
                                                                                                                             "intersection"
                                                                                                                             "add"
                                                                                                                             "empty?")
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "NOT var_names(new_gvds(mp!1))(target(b!1))")
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 24)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "related_states"
                                                                                                                                   -19)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (expand*
                                                                                                                                       "MP_modeled?"
                                                                                                                                       "MVA_modeled?"
                                                                                                                                       "MVA_cp_modeled?"
                                                                                                                                       "MVA_cps_modeled?"
                                                                                                                                       "MVA_vars_modeled?"
                                                                                                                                       "Program_modeled?"
                                                                                                                                       "Program_gvs_modeled?")
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -38)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "update_GhostVars")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "update_store")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand*
                                                                                                                                                     "new_gvds"
                                                                                                                                                     "new_cp_gvd"
                                                                                                                                                     "new_cps_gvds"
                                                                                                                                                     "new_mva_vars_gvds")
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "add_as_union")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "singleton")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "var_names"
                                                                                                                                                           2)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst-cp
                                                                                                                                                               2
                                                                                                                                                               "(# jtype := IntType, name := cp(mp!1), init_val := Int(unique(init_cp(mva(mp!1)))) #)")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (skosimp*)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       2
                                                                                                                                                                       "(# jtype := IntType, name := name_of(mp!1)(q!1), init_val := Int(unique(q!1)) #)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (split
                                                                                                                                                                           2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst?
                                                                                                                                                                               1)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -27
                                                                                                                                                                               "q!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "defined?")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "wf_state"
                                                                                                                                                                     -23)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand*
                                                                                                                                                                         "wf_AState"
                                                                                                                                                                         "wf_Store")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -25
                                                                                                                                                                               "n!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "var_names"
                                                                                                                                                                                   -25)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       2
                                                                                                                                                                                       "(# name := name(f!1), jtype := jtype(f!1), init_val := init_val(f!1) #)")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (split
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?
                                                                                                                                                                                             2)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -32
                                                                                                                                                                                             "n!1")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (skosimp*)
                                                                                                                                                                    (("3"
                                                                                                                                                                      (inst
                                                                                                                                                                       -30
                                                                                                                                                                       "n!1")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (lift-if)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (split
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "defined?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (expand
                                                                                                                                                         "defined?")
                                                                                                                                                        (("2"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand*
                                                                                                                                   "related_states"
                                                                                                                                   "halted_implies_JMLExc")
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "update_GhostVars")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (expand
                                                                                                                                   "return_of_stmt")
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (case
                                                                                                                                 "ext_declared_var_names(program(mp!1))(target(b!1))")
                                                                                                                                (("1"
                                                                                                                                  (use
                                                                                                                                   "wf_new_vars")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -5
                                                                                                                                         "target(b!1)")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -4
                                                                                                                                           "target(b!1)")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "ext_declared_var_names")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "reserved_words")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "declared_var_names")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "subset?")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -23
                                                                                                                                     "target(b!1)")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "var_names")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (apply
                                                                               (then
                                                                                (flatten)
                                                                                (assert)
                                                                                (split
                                                                                 -1)))
                                                                              (("1"
                                                                                (apply
                                                                                 (then
                                                                                  (flatten)
                                                                                  (assert)
                                                                                  (flatten)
                                                                                  (assert)))
                                                                                (("1"
                                                                                  (expand
                                                                                   "return_of_stmt")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (apply
                                                                                 (then
                                                                                  (flatten)
                                                                                  (assert)
                                                                                  (split
                                                                                   -1)))
                                                                                (("1"
                                                                                  (apply
                                                                                   (then
                                                                                    (flatten)
                                                                                    (assert)
                                                                                    (flatten)
                                                                                    (assert)))
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -6
                                                                                       "(x!1`1 - 1, x!1`2 - 1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (apply
                                                                                           (repeat
                                                                                            (inst?
                                                                                             -6
                                                                                             :where
                                                                                             (-4
                                                                                              -12))))
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (apply
                                                                                               (then
                                                                                                (use
                                                                                                 "subterm_subset_of_var"
                                                                                                 ("b1"
                                                                                                  "b!1"))
                                                                                                (expand
                                                                                                 "<<")
                                                                                                (assert)
                                                                                                (assert)))
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "return_of_stmt")
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (then
                                                                                                      (use
                                                                                                       "related_states_implies_same_exception")
                                                                                                      (assert)
                                                                                                      (replace
                                                                                                       -1)))
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (apply
                                                                                                         (branch
                                                                                                          (split
                                                                                                           -5)
                                                                                                          ((then
                                                                                                            (flatten)
                                                                                                            (assert)))))
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (apply
                                                                                   (then
                                                                                    (flatten)
                                                                                    (assert)
                                                                                    (split
                                                                                     -1)))
                                                                                  (("1"
                                                                                    (apply
                                                                                     (then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (flatten)
                                                                                      (assert)))
                                                                                    (("1"
                                                                                      (case
                                                                                       " related_states(mp!1)(sMP2!1, sAP2!1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "return_of_stmt")
                                                                                          (("1"
                                                                                            (apply
                                                                                             (then
                                                                                              (use
                                                                                               "related_states_implies_same_exception")
                                                                                              (assert)
                                                                                              (replace
                                                                                               -1)))
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (apply
                                                                                                 (branch
                                                                                                  (split
                                                                                                   -5)
                                                                                                  ((then
                                                                                                    (flatten)
                                                                                                    (assert)))))
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -4)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -12)
                                                                                            (("2"
                                                                                              (use
                                                                                               "related_states_preserved_by_raise")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (apply
                                                                                     (then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (split
                                                                                       -1)))
                                                                                    (("1"
                                                                                      (apply
                                                                                       (then
                                                                                        (flatten)
                                                                                        (assert)
                                                                                        (flatten)
                                                                                        (assert)))
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (comment
                                                                                           "needs extra conditions")
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil
                                                                                            ";;; needs extra conditions"))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (apply
                                                                                       (then
                                                                                        (flatten)
                                                                                        (assert)
                                                                                        (split
                                                                                         -1)))
                                                                                      (("1"
                                                                                        (apply
                                                                                         (then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))
                                                                                        (("1"
                                                                                          (inst
                                                                                           -6
                                                                                           "(x!1`1 - 1, x!1`2 -1)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -6
                                                                                                 :where
                                                                                                 (-4
                                                                                                  -12))))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -6)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "return_of_stmt")
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (then
                                                                                                            (use
                                                                                                             "related_states_implies_same_exception")
                                                                                                            (assert)
                                                                                                            (replace
                                                                                                             -1)))
                                                                                                          (("1"
                                                                                                            (apply
                                                                                                             (branch
                                                                                                              (split
                                                                                                               -5)
                                                                                                              ((then
                                                                                                                (flatten)
                                                                                                                (assert)))))
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "var_names"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (auto-rewrite
                                                                                                       "subset?"
                                                                                                       "union"
                                                                                                       "member")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -8
                                                                                                             "x!2")
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "var_names"
                                                                                                                 -8)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (case-replace
                                                                                                                 "b!1 = While(test(b!1), body(b!1))")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (apply-extensionality
                                                                                                                   :hide?
                                                                                                                   t)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (expand
                                                                                                                 "var_names")
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "emptyset")
                                                                                                                  (("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "execute_assert")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "check_assertion")
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -7
                                                                                                   "(x!1`1 - 1, x!1`2 - 1)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (apply
                                                                                                       (repeat
                                                                                                        (inst?
                                                                                                         -7
                                                                                                         :where
                                                                                                         (-3
                                                                                                          -14))))
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (then
                                                                                                            (use
                                                                                                             "subterm_subset_of_var"
                                                                                                             ("b1"
                                                                                                              "b!1"))
                                                                                                            (expand
                                                                                                             "<<")
                                                                                                            (assert)
                                                                                                            (assert)))
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (split
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "return_of_stmt")
                                                                                                                          (("1"
                                                                                                                            (apply
                                                                                                                             (then
                                                                                                                              (use
                                                                                                                               "related_states_implies_same_exception")
                                                                                                                              (assert)
                                                                                                                              (replace
                                                                                                                               -1)))
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (apply
                                                                                                                                 (branch
                                                                                                                                  (split
                                                                                                                                   -7)
                                                                                                                                  ((then
                                                                                                                                    (flatten)
                                                                                                                                    (assert)))))
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (use
                                                                                                                           "derive_bottom_iff_exception_step"
                                                                                                                           ("p"
                                                                                                                            "ann_program(mp!1)"))
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "related_states"
                                                                                                                               30)
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 30)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "related_states"
                                                                                                                                   -9)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (use
                                                                                                                                       "wf_update_PState"
                                                                                                                                       ("p"
                                                                                                                                        "mp!1"))
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "update_PState")
                                                                                                                                            (("1"
                                                                                                                                              (use
                                                                                                                                               "wf_state_raise")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "related_states"
                                                                                                                                   -9)
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (use
                                                                                                                                       "wf_update_PState"
                                                                                                                                       ("p"
                                                                                                                                        "ann_program(mp!1)"))
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "update_PState")
                                                                                                                                            (("2"
                                                                                                                                              (use
                                                                                                                                               "wf_state_raise")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (use
                                                                                                                                   "MP_modeled_preserved_by_update")
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("4"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("4"
                                                                                                                                    (replace
                                                                                                                                     -18)
                                                                                                                                    (("4"
                                                                                                                                      (expand
                                                                                                                                       "halted_implies_JMLExc")
                                                                                                                                      (("4"
                                                                                                                                        (expand
                                                                                                                                         "update_PState"
                                                                                                                                         1)
                                                                                                                                        (("4"
                                                                                                                                          (comment
                                                                                                                                           "needs rethinking about JML exceptions")
                                                                                                                                          (("4"
                                                                                                                                            (skosimp*)
                                                                                                                                            (("4"
                                                                                                                                              (expand
                                                                                                                                               "raise")
                                                                                                                                              (("4"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            ";;; needs rethinking about JML exceptions"))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("5"
                                                                                                                                  (expand
                                                                                                                                   "update_PState")
                                                                                                                                  (("5"
                                                                                                                                    (expand
                                                                                                                                     "return_of_stmt")
                                                                                                                                    (("5"
                                                                                                                                      (assert)
                                                                                                                                      (("5"
                                                                                                                                        (expand
                                                                                                                                         "raise")
                                                                                                                                        (("5"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "return_of_stmt")
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (apply
                                                                                                                           (then
                                                                                                                            (use
                                                                                                                             "related_states_implies_same_exception")
                                                                                                                            (assert)
                                                                                                                            (replace
                                                                                                                             -1)))
                                                                                                                          (("2"
                                                                                                                            (apply
                                                                                                                             (branch
                                                                                                                              (split
                                                                                                                               -5)
                                                                                                                              ((then
                                                                                                                                (flatten)
                                                                                                                                (assert)))))
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (lemma "well_founded?_product")
        (("2"
          (inst -1 "LAMBDA(i, j : nat) : i < j"
           "LAMBDA(i, j : nat) : i < j")
          (("2" (assert)
            (("2" (split -1)
              (("1" (use "wf_nat") nil nil)
               ("2" (use "wf_nat") nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished nil 200479 33169 t nil)
  (derive_maintains_related_states_for_unchanged_program-1 nil
   3396778537 3397390604
   ("" (skosimp)
    ((""
      (lemma
       "wf_induction[[nat, nat], LAMBDA(i, j : [nat, nat]) : proj_1(i) < proj_1(j) AND proj_2(i) < proj_2(j)]")
      (("1"
        (inst -1 "LAMBDA(n1, n2 : nat) : FORALL (b: Body, v1, v2: Val)
                                                 (sMP1, sMP2: MPState, sAP1, sAP2: APState):
                                              well_behaved_MP(mp!1) IMPLIES   subset?(var_names(b), declared_var_names(program(mp!1))) IMPLIES
                                               related_states(mp!1)(sMP1, sAP1) IMPLIES
                                                derive(mp!1)(b, sMP1, v1, sMP2)(n1) IMPLIES
                                                 derive(ann_program(mp!1))(b, sAP1, v2, sAP2)(n2) IMPLIES
                                                  related_states(mp!1)(sMP2, sAP2) AND v1 = v2")
        (("1" (assert)
          (("1" (split -1)
            (("1" (skosimp*)
              (("1" (inst -1 "(n1!1, n2!1)")
                (("1" (apply (repeat (inst?))) (("1" (assert) nil nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (skosimp*)
                (("2" (use "related_states_implies_same_exception")
                  (("2" (assert)
                    (("2" (expand "derive" -6)
                      (("2" (expand "derive" -7)
                        (("2" (replace -1)
                          (("2" (split -6)
                            (("1"
                              (apply (then
                                      (flatten)
                                      (assert)
                                      (flatten)
                                      (assert)))
                              nil nil)
                             ("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (split -1)
                                    (("1"
                                      (apply
                                       (then
                                        (flatten)
                                        (assert)
                                        (flatten)
                                        (assert)))
                                      nil
                                      nil)
                                     ("2"
                                      (apply
                                       (then
                                        (flatten)
                                        (assert)
                                        (split -1)))
                                      (("1"
                                        (apply
                                         (then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (inst-cp -7 "(m1!1, m1!2)")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (apply
                                                 (repeat
                                                  (inst?
                                                   -8
                                                   :where
                                                   (-3 -13))))
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (apply
                                                     (then
                                                      (use
                                                       "subterm_subset_of_var"
                                                       ("b1" "b!1"))
                                                      (expand "<<")
                                                      (assert)
                                                      (assert)))
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -8
                                                           "(m2!1, m2!2)")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (repeat
                                                                (inst?
                                                                 -8
                                                                 :where
                                                                 (-5
                                                                  -16))))
                                                              (("1"
                                                                (apply
                                                                 (then
                                                                  (use
                                                                   "subterm_subset_of_var"
                                                                   ("b1"
                                                                    "b!1"
                                                                    "b2"
                                                                    "b2(b!1)"))
                                                                  (expand
                                                                   "<<")
                                                                  (assert)
                                                                  (assert)))
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (expand*
                                                                     "check_for_exception_final"
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (apply
                                                                       (then
                                                                        (use
                                                                         "related_states_implies_same_exception")
                                                                        (assert)
                                                                        (replace
                                                                         -1)))
                                                                      (("1"
                                                                        (apply
                                                                         (branch
                                                                          (split
                                                                           -8)
                                                                          ((then
                                                                            (flatten)
                                                                            (assert)))))
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply
                                         (then
                                          (flatten)
                                          (assert)
                                          (split -1)))
                                        (("1"
                                          (apply
                                           (then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))
                                          (("1"
                                            (use
                                             "related_states_implies_same_lookup")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "member")
                                                  (("1"
                                                    (inst
                                                     -8
                                                     "varname(b!1)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "var_names"
                                                         5)
                                                        (("1"
                                                          (expand
                                                           "union")
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "some")
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (apply
                                           (then
                                            (flatten)
                                            (assert)
                                            (split -1)))
                                          (("1"
                                            (apply
                                             (then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))
                                            nil
                                            nil)
                                           ("2"
                                            (apply
                                             (then
                                              (flatten)
                                              (assert)
                                              (split -1)))
                                            (("1"
                                              (apply
                                               (then
                                                (flatten)
                                                (assert)
                                                (flatten)
                                                (assert)))
                                              nil
                                              nil)
                                             ("2"
                                              (apply
                                               (then
                                                (flatten)
                                                (assert)
                                                (split -1)))
                                              (("1"
                                                (apply
                                                 (then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -6
                                                       "(x!1`1 - 1, x!1`2 - 1)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (apply
                                                           (repeat
                                                            (inst?
                                                             -6
                                                             :where
                                                             (-3
                                                              -11))))
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (then
                                                                (use
                                                                 "subterm_subset_of_var"
                                                                 ("b1"
                                                                  "b!1"))
                                                                (expand
                                                                 "<<")
                                                                (assert)
                                                                (assert)))
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (expand*
                                                                   "check_for_exception_final"
                                                                   "check_for_exception")
                                                                  (("1"
                                                                    (apply
                                                                     (then
                                                                      (use
                                                                       "related_states_implies_same_exception")
                                                                      (assert)
                                                                      (replace
                                                                       -1)))
                                                                    (("1"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -6)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)))))
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (apply
                                                 (then
                                                  (flatten)
                                                  (assert)
                                                  (split -1)))
                                                (("1"
                                                  (apply
                                                   (then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (inst-cp
                                                       -7
                                                       "(m1!1, m1!2)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (apply
                                                           (repeat
                                                            (inst?
                                                             -8
                                                             :where
                                                             (-3
                                                              -13))))
                                                          (("1"
                                                            (apply
                                                             (then
                                                              (use
                                                               "subterm_subset_of_var"
                                                               ("b1"
                                                                "b!1"))
                                                              (expand
                                                               "<<")
                                                              (assert)
                                                              (assert)))
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (inst
                                                                 -8
                                                                 "(m2!1, m2!2)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (apply
                                                                     (repeat
                                                                      (inst?
                                                                       -8
                                                                       :where
                                                                       (-5
                                                                        -16))))
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (then
                                                                          (use
                                                                           "subterm_subset_of_var"
                                                                           ("b1"
                                                                            "b!1"
                                                                            "b2"
                                                                            "b2(b!1)"))
                                                                          (expand
                                                                           "<<")
                                                                          (assert)
                                                                          (assert)))
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (expand*
                                                                             "check_for_exception_final"
                                                                             "check_for_exception")
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (use
                                                                                 "related_states_implies_same_exception")
                                                                                (assert)
                                                                                (replace
                                                                                 -1)))
                                                                              (("1"
                                                                                (apply
                                                                                 (branch
                                                                                  (split
                                                                                   -8)
                                                                                  ((then
                                                                                    (flatten)
                                                                                    (assert)))))
                                                                                (("1"
                                                                                  (replace
                                                                                   -13)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -15)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -22)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (apply
                                                   (then
                                                    (flatten)
                                                    (assert)
                                                    (split -1)))
                                                  (("1"
                                                    (apply
                                                     (then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))
                                                    (("1"
                                                      (skosimp*)
                                                      (("1"
                                                        (inst-cp
                                                         -7
                                                         "(m1!1, m1!2)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -8
                                                               :where
                                                               (-3
                                                                -13))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (apply
                                                                 (then
                                                                  (use
                                                                   "subterm_subset_of_var"
                                                                   ("b1"
                                                                    "b!1"))
                                                                  (expand
                                                                   "<<")
                                                                  (assert)
                                                                  (assert)))
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst
                                                                     -8
                                                                     "(m2!1, m2!2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -8
                                                                           :where
                                                                           (-5
                                                                            -16))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (then
                                                                              (use
                                                                               "subterm_subset_of_var"
                                                                               ("b1"
                                                                                "b!1"
                                                                                "b2"
                                                                                "b2(b!1)"))
                                                                              (expand
                                                                               "<<")
                                                                              (assert)
                                                                              (assert)))
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (expand*
                                                                                 "check_for_exception_final"
                                                                                 "check_for_exception")
                                                                                (("1"
                                                                                  (apply
                                                                                   (then
                                                                                    (use
                                                                                     "related_states_implies_same_exception")
                                                                                    (assert)
                                                                                    (replace
                                                                                     -1)))
                                                                                  (("1"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -8)
                                                                                      ((then
                                                                                        (flatten)
                                                                                        (assert)))))
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (apply
                                                     (then
                                                      (flatten)
                                                      (assert)
                                                      (split -1)))
                                                    (("1"
                                                      (apply
                                                       (then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))
                                                      (("1"
                                                        (use
                                                         "related_states_implies_same_lookup")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (expand
                                                               "member")
                                                              (("1"
                                                                (inst?
                                                                 -8)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "var_names")
                                                                    (("1"
                                                                      (expand
                                                                       "some")
                                                                      (("1"
                                                                        (auto-rewrite
                                                                         "union"
                                                                         "member")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (apply
                                                       (then
                                                        (flatten)
                                                        (assert)
                                                        (split -1)))
                                                      (("1"
                                                        (apply
                                                         (then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (apply
                                                         (then
                                                          (flatten)
                                                          (assert)
                                                          (split -1)))
                                                        (("1"
                                                          (apply
                                                           (then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))
                                                          (("1"
                                                            (comment
                                                             "MH: I guess this will need some axiom about get_address and get_dynamic_type_name")
                                                            (("1"
                                                              (postpone)
                                                              nil
                                                              ";;; MH: I guess this will need some axiom about get_address and get_dynamic_type_name"))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply
                                                           (then
                                                            (flatten)
                                                            (assert)
                                                            (split
                                                             -1)))
                                                          (("1"
                                                            (apply
                                                             (then
                                                              (flatten)
                                                              (assert)
                                                              (flatten)
                                                              (assert)))
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -6
                                                                   "(x!1`1 - 1, x!1`2 - 1)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -6)))
                                                                      (("1"
                                                                        (apply
                                                                         (then
                                                                          (use
                                                                           "subterm_subset_of_var"
                                                                           ("b1"
                                                                            "b!1"))
                                                                          (expand
                                                                           "<<")
                                                                          (assert)
                                                                          (assert)))
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (use
                                                                                 "related_states_implies_same_exception")
                                                                                (assert)
                                                                                (replace
                                                                                 -1)))
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (apply
                                                                                   (branch
                                                                                    (split
                                                                                     -6)
                                                                                    ((then
                                                                                      (flatten)
                                                                                      (assert)))))
                                                                                  (("1"
                                                                                    (expand
                                                                                     "related_states"
                                                                                     14)
                                                                                    (("1"
                                                                                      (split
                                                                                       14)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "related_states"
                                                                                         -8)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (use
                                                                                             "MonitoredProgramSemantics.wf_update_PState")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "wf_state_update")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (use
                                                                                                       "derive_bottom_iff_exception_step"
                                                                                                       ("p"
                                                                                                        "mp!1"))
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "defined?")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "related_states"
                                                                                         -8)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (use
                                                                                             "AnnotatedProgramSemantics.wf_update_PState")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "wf_state_update")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (use
                                                                                                       "derive_bottom_iff_exception_step"
                                                                                                       ("p"
                                                                                                        "ann_program(mp!1)"))
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "defined?")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (use
                                                                                         "MP_modeled_preserved_by_update")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("4"
                                                                                        (use
                                                                                         "halted_implies_JMLExc_preserved_by_update")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply
                                                             (then
                                                              (flatten)
                                                              (assert)
                                                              (split
                                                               -1)))
                                                            (("1"
                                                              (apply
                                                               (then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))
                                                              (("1"
                                                                (inst
                                                                 -5
                                                                 "(x!1`1 - 1, x!1`2 - 1)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst?
                                                                     -5)
                                                                    (("1"
                                                                      (inst?
                                                                       -5)
                                                                      (("1"
                                                                        (inst?
                                                                         -5)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (then
                                                                              (use
                                                                               "subterm_subset_of_var"
                                                                               ("b1"
                                                                                "b!1"))
                                                                              (expand
                                                                               "<<")
                                                                              (assert)
                                                                              (assert)))
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (then
                                                                (flatten)
                                                                (assert)
                                                                (split
                                                                 -1)))
                                                              (("1"
                                                                (apply
                                                                 (then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst-cp
                                                                     -6
                                                                     "(m1!1, m1!2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -7
                                                                           :where
                                                                           (-3
                                                                            -12))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (then
                                                                              (use
                                                                               "subterm_subset_of_var"
                                                                               ("b1"
                                                                                "b!1"))
                                                                              (expand
                                                                               "<<")
                                                                              (assert)
                                                                              (assert)))
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (expand
                                                                                 "check_for_exception")
                                                                                (("1"
                                                                                  (apply
                                                                                   (then
                                                                                    (use
                                                                                     "related_states_implies_same_exception")
                                                                                    (assert)
                                                                                    (replace
                                                                                     -1)))
                                                                                  (("1"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -6)
                                                                                      ((then
                                                                                        (flatten)
                                                                                        (assert)))))
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -11)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (split
                                                                                           -2)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -10
                                                                                                 "(m2!1, m2!2)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -10
                                                                                                       :where
                                                                                                       (-2
                                                                                                        -18))))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (apply
                                                                                                         (then
                                                                                                          (use
                                                                                                           "subterm_subset_of_var"
                                                                                                           ("b1"
                                                                                                            "b!1"
                                                                                                            "b2"
                                                                                                            "then_expr(b!1)"))
                                                                                                          (expand
                                                                                                           "<<")
                                                                                                          (assert)
                                                                                                          (assert)))
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -9
                                                                                               "(m2!1, m2!2)")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (repeat
                                                                                                    (inst?
                                                                                                     -9
                                                                                                     :where
                                                                                                     (-1
                                                                                                      -17))))
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (apply
                                                                                                       (then
                                                                                                        (use
                                                                                                         "subterm_subset_of_var"
                                                                                                         ("b1"
                                                                                                          "b!1"
                                                                                                          "b2"
                                                                                                          "else_expr(b!1)"))
                                                                                                        (expand
                                                                                                         "<<")
                                                                                                        (assert)
                                                                                                        (assert)))
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (apply
                                                                 (then
                                                                  (flatten)
                                                                  (assert)
                                                                  (split
                                                                   -1)))
                                                                (("1"
                                                                  (apply
                                                                   (then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))
                                                                  (("1"
                                                                    (skosimp*)
                                                                    (("1"
                                                                      (inst-cp
                                                                       -16
                                                                       "(m1!1, m1!2)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -17
                                                                             :where
                                                                             (-3
                                                                              -22))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (use
                                                                                 "subterm_subset_of_var"
                                                                                 ("b1"
                                                                                  "b!1"))
                                                                                (expand
                                                                                 "<<")
                                                                                (assert)
                                                                                (assert)))
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst-cp
                                                                                   -17
                                                                                   "(m2!1, m2!2)")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (repeat
                                                                                        (inst?
                                                                                         -18
                                                                                         :where
                                                                                         (-5
                                                                                          -26))))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (apply
                                                                                           (then
                                                                                            (use
                                                                                             "subterm_subset_of_var"
                                                                                             ("b1"
                                                                                              "b!1"
                                                                                              "b2"
                                                                                              "arg(b!1)"))
                                                                                            (expand
                                                                                             "<<")
                                                                                            (assert)
                                                                                            (assert)))
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (case
                                                                                               "related_states(mp!1)(tau3!1, tau3!2)")
                                                                                              (("1"
                                                                                                (comment
                                                                                                 "here we would use lemma on on_method_entry")
                                                                                                (("1"
                                                                                                  (postpone)
                                                                                                  nil
                                                                                                  ";;; here we would use lemma on on_method_entry"))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (apply
                                                                   (then
                                                                    (flatten)
                                                                    (assert)
                                                                    (split
                                                                     -1)))
                                                                  (("1"
                                                                    (apply
                                                                     (then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))
                                                                    (("1"
                                                                      (inst
                                                                       -5
                                                                       "(x!1`1 - 1, x!1`2 - 1)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -5)))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (use
                                                                                 "subterm_subset_of_var"
                                                                                 ("b1"
                                                                                  "b!1"))
                                                                                (expand
                                                                                 "<<")
                                                                                (assert)
                                                                                (assert)))
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (apply
                                                                     (then
                                                                      (flatten)
                                                                      (assert)
                                                                      (split
                                                                       -1)))
                                                                    (("1"
                                                                      (apply
                                                                       (then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))
                                                                      (("1"
                                                                        (inst
                                                                         -5
                                                                         "(x!1`1 - 1, x!1`2 - 1)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -5)))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (apply
                                                                                 (then
                                                                                  (use
                                                                                   "subterm_subset_of_var"
                                                                                   ("b1"
                                                                                    "b!1"))
                                                                                  (expand
                                                                                   "<<")
                                                                                  (assert)
                                                                                  (assert)))
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (apply
                                                                       (then
                                                                        (flatten)
                                                                        (assert)
                                                                        (split
                                                                         -1)))
                                                                      (("1"
                                                                        (apply
                                                                         (then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))
                                                                        (("1"
                                                                          (expand
                                                                           "execute_CaseJML")
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (split
                                                                               -4)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -7
                                                                                     "(x!1`1 - 1, x!1`2 - 1)")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (apply
                                                                                         (repeat
                                                                                          (inst?
                                                                                           -7
                                                                                           :where
                                                                                           (-2
                                                                                            -13))))
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -7)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "return_of_stmt")
                                                                                                (("1"
                                                                                                  (apply
                                                                                                   (then
                                                                                                    (use
                                                                                                     "related_states_implies_same_exception")
                                                                                                    (assert)
                                                                                                    (replace
                                                                                                     -1)))
                                                                                                  (("1"
                                                                                                    (lift-if)
                                                                                                    (("1"
                                                                                                      (apply
                                                                                                       (branch
                                                                                                        (split
                                                                                                         -7)
                                                                                                        (then
                                                                                                         (flatten)
                                                                                                         (assert))))
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("4"
                                                                                              (expand*
                                                                                               "subset?"
                                                                                               "member")
                                                                                              (("4"
                                                                                                (skosimp*)
                                                                                                (("4"
                                                                                                  (expand
                                                                                                   "var_names")
                                                                                                  (("4"
                                                                                                    (inst
                                                                                                     -10
                                                                                                     "x!2")
                                                                                                    (("4"
                                                                                                      (assert)
                                                                                                      (("4"
                                                                                                        (expand
                                                                                                         "some")
                                                                                                        (("4"
                                                                                                          (comment
                                                                                                           "MH: again the problem with var_names of case jml")
                                                                                                          (("4"
                                                                                                            (postpone)
                                                                                                            nil
                                                                                                            ";;; MH: again the problem with var_names of case jml"))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (apply
                                                                         (then
                                                                          (flatten)
                                                                          (assert)
                                                                          (split
                                                                           -1)))
                                                                        (("1"
                                                                          (apply
                                                                           (then
                                                                            (flatten)
                                                                            (assert)
                                                                            (flatten)
                                                                            (assert)))
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst-cp
                                                                               -7
                                                                               "(m1!1, m1!2)")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (apply
                                                                                   (repeat
                                                                                    (inst?
                                                                                     -8
                                                                                     :where
                                                                                     (-4
                                                                                      -14))))
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (then
                                                                                        (use
                                                                                         "subterm_subset_of_var"
                                                                                         ("b1"
                                                                                          "b!1"))
                                                                                        (expand
                                                                                         "<<")
                                                                                        (assert)
                                                                                        (assert)))
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -10)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "check_for_exception")
                                                                                            (("1"
                                                                                              (apply
                                                                                               (then
                                                                                                (use
                                                                                                 "related_states_implies_same_exception")
                                                                                                (assert)
                                                                                                (replace
                                                                                                 -1)))
                                                                                              (("1"
                                                                                                (apply
                                                                                                 (branch
                                                                                                  (split
                                                                                                   -7)
                                                                                                  ((then
                                                                                                    (flatten)
                                                                                                    (assert)))))
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (apply
                                                                                                     (branch
                                                                                                      (split
                                                                                                       -2)
                                                                                                      ((then
                                                                                                        (flatten)
                                                                                                        (assert)))))
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -11
                                                                                                       "(m2!1, m2!2)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (repeat
                                                                                                            (inst?
                                                                                                             -11
                                                                                                             :where
                                                                                                             (-2
                                                                                                              -20))))
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "subterm_subset_of_var"
                                                                                                                 ("b1"
                                                                                                                  "b!1"
                                                                                                                  "b2"
                                                                                                                  "then_stmt(b!1)"))
                                                                                                                (expand
                                                                                                                 "<<")
                                                                                                                (assert)
                                                                                                                (assert)))
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "return_of_stmt")
                                                                                                                (("1"
                                                                                                                  (apply
                                                                                                                   (then
                                                                                                                    (use
                                                                                                                     "related_states_implies_same_exception")
                                                                                                                    (assert)
                                                                                                                    (replace
                                                                                                                     -1)))
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (apply
                                                                                                                       (branch
                                                                                                                        (split
                                                                                                                         -9)
                                                                                                                        ((then
                                                                                                                          (flatten)
                                                                                                                          (assert)))))
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       -10
                                                                                                       "(m2!1, m2!2)")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (apply
                                                                                                           (repeat
                                                                                                            (inst?
                                                                                                             -10
                                                                                                             :where
                                                                                                             (-1
                                                                                                              -19))))
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "subterm_subset_of_var"
                                                                                                                 ("b1"
                                                                                                                  "b!1"
                                                                                                                  "b2"
                                                                                                                  "else_stmt(b!1)"))
                                                                                                                (expand
                                                                                                                 "<<")
                                                                                                                (assert)
                                                                                                                (assert)))
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "return_of_stmt")
                                                                                                                (("2"
                                                                                                                  (apply
                                                                                                                   (then
                                                                                                                    (use
                                                                                                                     "related_states_implies_same_exception")
                                                                                                                    (assert)
                                                                                                                    (replace
                                                                                                                     -1)))
                                                                                                                  (("2"
                                                                                                                    (lift-if)
                                                                                                                    (("2"
                                                                                                                      (apply
                                                                                                                       (branch
                                                                                                                        (split
                                                                                                                         -8)
                                                                                                                        ((then
                                                                                                                          (flatten)
                                                                                                                          (assert)))))
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (apply
                                                                           (then
                                                                            (flatten)
                                                                            (assert)
                                                                            (split
                                                                             -1)))
                                                                          (("1"
                                                                            (apply
                                                                             (then
                                                                              (flatten)
                                                                              (assert)
                                                                              (flatten)
                                                                              (assert)))
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -7
                                                                                 "(m1!1, m1!2)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (repeat
                                                                                      (inst?
                                                                                       -8
                                                                                       :where
                                                                                       (-4
                                                                                        -14))))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (apply
                                                                                         (then
                                                                                          (use
                                                                                           "subterm_subset_of_var"
                                                                                           ("b1"
                                                                                            "b!1"))
                                                                                          (expand
                                                                                           "<<")
                                                                                          (assert)
                                                                                          (assert)))
                                                                                        (("1"
                                                                                          (inst
                                                                                           -8
                                                                                           "(m2!1, m2!2)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -8
                                                                                                 :where
                                                                                                 (-6
                                                                                                  -16))))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (apply
                                                                                                   (then
                                                                                                    (use
                                                                                                     "subterm_subset_of_var"
                                                                                                     ("b1"
                                                                                                      "b!1"
                                                                                                      "b2"
                                                                                                      "s2(b!1)"))
                                                                                                    (expand
                                                                                                     "<<")
                                                                                                    (assert)
                                                                                                    (assert)))
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "return_of_stmt")
                                                                                                    (("1"
                                                                                                      (apply
                                                                                                       (then
                                                                                                        (use
                                                                                                         "related_states_implies_same_exception")
                                                                                                        (assert)
                                                                                                        (replace
                                                                                                         -1)))
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (branch
                                                                                                            (split
                                                                                                             -5)
                                                                                                            ((then
                                                                                                              (flatten)
                                                                                                              (assert)))))
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (apply
                                                                             (then
                                                                              (flatten)
                                                                              (assert)
                                                                              (split
                                                                               -1)))
                                                                            (("1"
                                                                              (apply
                                                                               (then
                                                                                (flatten)
                                                                                (assert)
                                                                                (flatten)
                                                                                (assert)))
                                                                              (("1"
                                                                                (use
                                                                                 "derive_yields_wf_state_MP"
                                                                                 ("sigma1"
                                                                                  "sMP1!1"
                                                                                  "sigma2"
                                                                                  "sMP2!1"))
                                                                                (("1"
                                                                                  (use
                                                                                   "derive_yields_wf_state_AP"
                                                                                   ("sigma1"
                                                                                    "sAP1!1"
                                                                                    "sigma2"
                                                                                    "sAP2!1"
                                                                                    "v"
                                                                                    "v2!1"
                                                                                    "n"
                                                                                    "x!1`2"))
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "mp!1")
                                                                                    (("1"
                                                                                      (use
                                                                                       "ann_program_yields_wf_program")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (copy
                                                                                           -14)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "related_states"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "execute_set")
                                                                                                  (("1"
                                                                                                    (skosimp*)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -17
                                                                                                       "(x!1`1 -1, x!1`2 - 1)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (repeat
                                                                                                            (inst?
                                                                                                             -17
                                                                                                             :where
                                                                                                             (-13
                                                                                                              -23))))
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "subterm_subset_of_var"
                                                                                                                 ("b1"
                                                                                                                  "b!1"))
                                                                                                                (expand
                                                                                                                 "<<")
                                                                                                                (assert)
                                                                                                                (assert)))
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (apply
                                                                                                                     (then
                                                                                                                      (use
                                                                                                                       "related_states_implies_same_exception")
                                                                                                                      (assert)
                                                                                                                      (replace
                                                                                                                       -1)))
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (apply
                                                                                                                         (branch
                                                                                                                          (split
                                                                                                                           -16)
                                                                                                                          ((then
                                                                                                                            (flatten)
                                                                                                                            (assert)))))
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "related_states"
                                                                                                                           23)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             23)
                                                                                                                            (("1"
                                                                                                                              (postpone)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (postpone)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (expand
                                                                                                                               "return_of_stmt")
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (apply
                                                                               (then
                                                                                (flatten)
                                                                                (assert)
                                                                                (split
                                                                                 -1)))
                                                                              (("1"
                                                                                (apply
                                                                                 (then
                                                                                  (flatten)
                                                                                  (assert)
                                                                                  (flatten)
                                                                                  (assert)))
                                                                                (("1"
                                                                                  (expand
                                                                                   "return_of_stmt")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (apply
                                                                                 (then
                                                                                  (flatten)
                                                                                  (assert)
                                                                                  (split
                                                                                   -1)))
                                                                                (("1"
                                                                                  (apply
                                                                                   (then
                                                                                    (flatten)
                                                                                    (assert)
                                                                                    (flatten)
                                                                                    (assert)))
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -6
                                                                                       "(x!1`1 - 1, x!1`2 - 1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (apply
                                                                                           (repeat
                                                                                            (inst?
                                                                                             -6
                                                                                             :where
                                                                                             (-4
                                                                                              -12))))
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (apply
                                                                                               (then
                                                                                                (use
                                                                                                 "subterm_subset_of_var"
                                                                                                 ("b1"
                                                                                                  "b!1"))
                                                                                                (expand
                                                                                                 "<<")
                                                                                                (assert)
                                                                                                (assert)))
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "return_of_stmt")
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (then
                                                                                                      (use
                                                                                                       "related_states_implies_same_exception")
                                                                                                      (assert)
                                                                                                      (replace
                                                                                                       -1)))
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (apply
                                                                                                         (branch
                                                                                                          (split
                                                                                                           -5)
                                                                                                          ((then
                                                                                                            (flatten)
                                                                                                            (assert)))))
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (apply
                                                                                   (then
                                                                                    (flatten)
                                                                                    (assert)
                                                                                    (split
                                                                                     -1)))
                                                                                  (("1"
                                                                                    (apply
                                                                                     (then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (flatten)
                                                                                      (assert)))
                                                                                    (("1"
                                                                                      (case
                                                                                       " related_states(mp!1)(sMP2!1, sAP2!1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "return_of_stmt")
                                                                                          (("1"
                                                                                            (apply
                                                                                             (then
                                                                                              (use
                                                                                               "related_states_implies_same_exception")
                                                                                              (assert)
                                                                                              (replace
                                                                                               -1)))
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (apply
                                                                                                 (branch
                                                                                                  (split
                                                                                                   -5)
                                                                                                  ((then
                                                                                                    (flatten)
                                                                                                    (assert)))))
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "related_states"
                                                                                           1)
                                                                                          (("2"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "related_states"
                                                                                               -9)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "MonitoredProgramSemantics.wf_update_PState")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "update_PState")
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "wf_state_raise")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "related_states"
                                                                                               -9)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "AnnotatedProgramSemantics.wf_update_PState")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "update_PState")
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "wf_state_raise")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (use
                                                                                               "MP_modeled_preserved_by_update")
                                                                                              (("3"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("4"
                                                                                              (use
                                                                                               "halted_implies_JMLExc_preserved_by_update")
                                                                                              (("4"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (apply
                                                                                     (then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (split
                                                                                       -1)))
                                                                                    (("1"
                                                                                      (apply
                                                                                       (then
                                                                                        (flatten)
                                                                                        (assert)
                                                                                        (flatten)
                                                                                        (assert)))
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -9
                                                                                           "(m1!1, m1!2)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -10
                                                                                                 :where
                                                                                                 (-4
                                                                                                  -16))))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (apply
                                                                                                   (then
                                                                                                    (use
                                                                                                     "subterm_subset_of_var"
                                                                                                     ("b1"
                                                                                                      "b!1"))
                                                                                                    (expand
                                                                                                     "<<")
                                                                                                    (assert)
                                                                                                    (assert)))
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (then
                                                                                                      (use
                                                                                                       "related_states_implies_same_exception")
                                                                                                      (assert)
                                                                                                      (replace
                                                                                                       -1)))
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -7)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst-cp
                                                                                                               -12
                                                                                                               "(m2!1, m2!2)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (apply
                                                                                                                   (repeat
                                                                                                                    (inst?
                                                                                                                     -13
                                                                                                                     :where
                                                                                                                     (-2
                                                                                                                      -21))))
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (apply
                                                                                                                       (then
                                                                                                                        (use
                                                                                                                         "subterm_subset_of_var"
                                                                                                                         ("b1"
                                                                                                                          "b!1"
                                                                                                                          "b2"
                                                                                                                          "catch(b!1)"))
                                                                                                                        (expand
                                                                                                                         "<<")
                                                                                                                        (assert)
                                                                                                                        (assert)))
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -14)
                                                                                                                        (("1"
                                                                                                                          (apply
                                                                                                                           (then
                                                                                                                            (use
                                                                                                                             "related_states_implies_same_exception")
                                                                                                                            (assert)
                                                                                                                            (replace
                                                                                                                             -1)))
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -15
                                                                                                                             "(m3!1, m3!2)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (apply
                                                                                                                                 (repeat
                                                                                                                                  (inst?
                                                                                                                                   -15
                                                                                                                                   :where
                                                                                                                                   (-12
                                                                                                                                    -24))))
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (apply
                                                                                                                                     (then
                                                                                                                                      (use
                                                                                                                                       "subterm_subset_of_var"
                                                                                                                                       ("b1"
                                                                                                                                        "b!1"
                                                                                                                                        "b2"
                                                                                                                                        "finally(b!1)"))
                                                                                                                                      (expand
                                                                                                                                       "<<")
                                                                                                                                      (assert)
                                                                                                                                      (assert)))
                                                                                                                                    (("1"
                                                                                                                                      (split
                                                                                                                                       -16)
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         -15)
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -2)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -27)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "related_states"
                                                                                                                                                   26)
                                                                                                                                                  (("1"
                                                                                                                                                    (split
                                                                                                                                                     26)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "related_states"
                                                                                                                                                       -3)
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("1"
                                                                                                                                                          (use
                                                                                                                                                           "wf_update_PState"
                                                                                                                                                           ("p"
                                                                                                                                                            "mp!1"))
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (skosimp*)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "update_PState")
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "wf_state_raise")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (expand
                                                                                                                                                       "related_states"
                                                                                                                                                       -3)
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (use
                                                                                                                                                           "wf_update_PState"
                                                                                                                                                           ("p"
                                                                                                                                                            "ann_program(mp!1)"))
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (skosimp*)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "update_PState")
                                                                                                                                                                (("2"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "wf_state_raise")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (use
                                                                                                                                                       "MP_modeled_preserved_by_update")
                                                                                                                                                      (("3"
                                                                                                                                                        (postpone)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("4"
                                                                                                                                                      (expand
                                                                                                                                                       "related_states"
                                                                                                                                                       -3)
                                                                                                                                                      (("4"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("4"
                                                                                                                                                          (expand
                                                                                                                                                           "halted_implies_JMLExc")
                                                                                                                                                          (("4"
                                                                                                                                                            (expand
                                                                                                                                                             "update_PState")
                                                                                                                                                            (("4"
                                                                                                                                                              (expand
                                                                                                                                                               "raise")
                                                                                                                                                              (("4"
                                                                                                                                                                (comment
                                                                                                                                                                 "to think about")
                                                                                                                                                                (("4"
                                                                                                                                                                  (postpone)
                                                                                                                                                                  nil
                                                                                                                                                                  ";;; to think about"))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("5"
                                                                                                                                                      (expand
                                                                                                                                                       "return_of_stmt")
                                                                                                                                                      (("5"
                                                                                                                                                        (assert)
                                                                                                                                                        (("5"
                                                                                                                                                          (expand
                                                                                                                                                           "update_PState")
                                                                                                                                                          (("5"
                                                                                                                                                            (expand
                                                                                                                                                             "raise")
                                                                                                                                                            (("5"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -26)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "return_of_stmt")
                                                                                                                                                  (("2"
                                                                                                                                                    (apply
                                                                                                                                                     (then
                                                                                                                                                      (use
                                                                                                                                                       "related_states_implies_same_exception")
                                                                                                                                                      (assert)
                                                                                                                                                      (replace
                                                                                                                                                       -1)))
                                                                                                                                                    (("2"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("2"
                                                                                                                                                        (split
                                                                                                                                                         -13)
                                                                                                                                                        (("1"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "related_states"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (split
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "related_states"
                                                                                                                                             -3)
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (use
                                                                                                                                                 "wf_update_PState"
                                                                                                                                                 ("p"
                                                                                                                                                  "mp!1"))
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "update_PState")
                                                                                                                                                      (("1"
                                                                                                                                                        (rewrite
                                                                                                                                                         "wf_state_catch")
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (expand
                                                                                                                                             "related_states"
                                                                                                                                             -3)
                                                                                                                                            (("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (use
                                                                                                                                                 "wf_update_PState"
                                                                                                                                                 ("p"
                                                                                                                                                  "ann_program(mp!1)"))
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "update_PState")
                                                                                                                                                      (("2"
                                                                                                                                                        (rewrite
                                                                                                                                                         "wf_state_catch")
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (postpone)
                                                                                                                                            nil
                                                                                                                                            nil)
                                                                                                                                           ("4"
                                                                                                                                            (postpone)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (postpone)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (postpone)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (apply
                                                                                       (then
                                                                                        (flatten)
                                                                                        (assert)
                                                                                        (split
                                                                                         -1)))
                                                                                      (("2"
                                                                                        (apply
                                                                                         (then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))
                                                                                        (("2"
                                                                                          (inst
                                                                                           -5
                                                                                           "(x!1`1 - 1, x!1`2 - 1)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -5
                                                                                                 :where
                                                                                                 (-3
                                                                                                  -11))))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -5)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "return_of_stmt")
                                                                                                    (("1"
                                                                                                      (apply
                                                                                                       (then
                                                                                                        (use
                                                                                                         "related_states_implies_same_exception")
                                                                                                        (assert)
                                                                                                        (replace
                                                                                                         -1)))
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (branch
                                                                                                            (split
                                                                                                             -4)
                                                                                                            ((then
                                                                                                              (flatten)
                                                                                                              (assert)))))
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "subset?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "member")
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -7
                                                                                                           "x!2")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "var_names")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "some"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "some"
                                                                                                                   28)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (auto-rewrite
                                                                                                                       "union"
                                                                                                                       "member")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "some"
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (expand
                                                                                                                               "some")
                                                                                                                              (("3"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (lemma "well_founded?_product")
        (("2"
          (inst -1 "LAMBDA(i, j : nat) : i < j"
           "LAMBDA(i, j : nat) : i < j")
          (("2" (assert)
            (("2" (split -1)
              (("1" (use "wf_nat") nil nil)
               ("2" (use "wf_nat") nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished nil 10771 10749 t nil))
 (correctness_of_ann_program 0
  (correctness_of_ann_program-2 nil 3403446138 3403446157
   ("" (skosimp*)
    ((""
      (expand* "run_monitored_program" "run_annotated_program"
       "run_FullProgram" "derives")
      (("" (skosimp*)
        (("" (use "initial_states_are_equivalent")
          ((""
            (use "derive_maintains_related_states_for_unchanged_program")
            (("" (assert)
              ((""
                (auto-rewrite "var_names" "subset?" "union" "add"
                              "member" "singleton" "emptyset")
                (("" (assert)
                  (("" (skosimp*)
                    (("" (expand "ext_declared_var_names")
                      ((""
                        (expand* "ext_declared_var_names" "union"
                         "member")
                        (("" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((derive_maintains_related_states_for_unchanged_program formula-decl
     nil CorrectnessAnnProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (initial_AP_state const-decl "APState" AnnotatedProgramSemantics
     nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (PState type-eq-decl nil State nil)
    (Store type-eq-decl nil State nil)
    (Unit adt-constructor-decl "(Unit?)" Val_adt nil)
    (Unit? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Int adt-constructor-decl "[int -> (Int?)]" Body_adt nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NExpr adt-constructor-decl "[NumExpr -> (NExpr?)]" Body_adt nil)
    (NumExpr type-eq-decl nil Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Int? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (This const-decl "Name" Program nil)
    (RefVarEval adt-constructor-decl "[Name -> (RefVarEval?)]" Body_adt
     nil)
    (RExpr adt-constructor-decl "[RefExpr -> (RExpr?)]" Body_adt nil)
    (RefExpr type-eq-decl nil Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Null? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall adt-constructor-decl
     "[[Expr, Name, Expr] -> (MethodCall?)]" Body_adt nil)
    (StmtExpr adt-constructor-decl "[Expr -> (StmtExpr?)]" Body_adt
     nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (Class type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil)
    (Expr type-eq-decl nil Body_adt nil)
    (Stmt type-eq-decl nil Body_adt nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (BoolExpr type-eq-decl nil Body_adt nil)
    (FieldDecl type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (AState type-eq-decl nil MVASemantics nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (initial_MP_state const-decl "MPState" MonitoredProgramSemantics
     nil)
    (ext_declared_var_names const-decl "finite_set[Name]"
     ProgramFunctions nil)
    (subset? const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (Name formal-nonempty-type-decl nil CorrectnessAnnProgram nil)
    (CP formal-nonempty-type-decl nil CorrectnessAnnProgram nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (complete const-decl "boolean" MVASemantics nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (initial_states_are_equivalent formula-decl nil
     CorrectnessAnnProgram nil)
    (run_monitored_program const-decl "boolean"
     MonitoredProgramSemantics nil)
    (run_FullProgram const-decl "boolean" Semantics nil)
    (derives const-decl "bool" Semantics nil)
    (run_annotated_program const-decl "boolean"
     AnnotatedProgramSemantics nil))
   16187 4910 nil nil)
  (correctness_of_ann_program-1 nil 3396605549 3403446107
   ("" (skosimp*)
    ((""
      (expand* "run_monitored_program" "run_annotated_program"
       "run_FullProgram" "derives")
      (("" (skosimp*)
        (("" (use "initial_states_are_equivalent")
          (("" (use "ann_method_name")
            (("" (rewrite -1)
              ((""
                (use "derive_maintains_related_states_for_unchanged_program")
                (("" (assert)
                  ((""
                    (auto-rewrite "var_names" "subset?" "union" "add"
                                  "member" "singleton" "emptyset")
                    (("" (assert)
                      (("" (skosimp*)
                        (("" (expand "ext_declared_var_names")
                          ((""
                            (expand* "ext_declared_var_names" "union"
                             "member")
                            (("" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((ann_method_name formula-decl nil AnnotateMethod nil)
    (derive_maintains_related_states_for_unchanged_program formula-decl
     nil CorrectnessAnnProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (initial_AP_state const-decl "APState" AnnotatedProgramSemantics
     nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (PState type-eq-decl nil State nil)
    (Store type-eq-decl nil State nil)
    (Unit adt-constructor-decl "(Unit?)" Val_adt nil)
    (Unit? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Int adt-constructor-decl "[int -> (Int?)]" Body_adt nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NExpr adt-constructor-decl "[NumExpr -> (NExpr?)]" Body_adt nil)
    (NumExpr type-eq-decl nil Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Int? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (This const-decl "Name" Program nil)
    (RefVarEval adt-constructor-decl "[Name -> (RefVarEval?)]" Body_adt
     nil)
    (RExpr adt-constructor-decl "[RefExpr -> (RExpr?)]" Body_adt nil)
    (RefExpr type-eq-decl nil Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Null? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall adt-constructor-decl
     "[[Expr, Name, Expr] -> (MethodCall?)]" Body_adt nil)
    (StmtExpr adt-constructor-decl "[Expr -> (StmtExpr?)]" Body_adt
     nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (Class type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (FieldDecl type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (AState type-eq-decl nil MVASemantics nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (initial_MP_state const-decl "MPState" MonitoredProgramSemantics
     nil)
    (ext_declared_var_names const-decl "finite_set[Name]"
     ProgramFunctions nil)
    (subset? const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (ann_method const-decl "Method" AnnotateMethod nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Method type-eq-decl nil Program nil)
    (Expr type-eq-decl nil Body_adt nil)
    (BoolExpr type-eq-decl nil Body_adt nil)
    (Stmt type-eq-decl nil Body_adt nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Name formal-nonempty-type-decl nil CorrectnessAnnProgram nil)
    (CP formal-nonempty-type-decl nil CorrectnessAnnProgram nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (complete const-decl "boolean" MVASemantics nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (initial_states_are_equivalent formula-decl nil
     CorrectnessAnnProgram nil)
    (run_monitored_program const-decl "boolean"
     MonitoredProgramSemantics nil)
    (run_FullProgram const-decl "boolean" Semantics nil)
    (derives const-decl "bool" Semantics nil)
    (run_annotated_program const-decl "boolean"
     AnnotatedProgramSemantics nil))
   6771 6070 t nil)))

