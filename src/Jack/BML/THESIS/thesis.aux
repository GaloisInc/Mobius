\relax 
\citation{VMSpec}
\citation{FM99FFJ}
\citation{qian99formal}
\citation{pusch98proving}
\citation{KleinN04}
\citation{barthe01formal}
\citation{barthe02formal}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2} Java Bytecode Language and its Operational semantics}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Related Work}{2}}
\newlabel{relWork}{{2.1}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Notation}{3}}
\newlabel{notation}{{2.2}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Classes, Fields and Methods}{3}}
\newlabel{clazz}{{2.3}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Program Types}{4}}
\newlabel{types}{{2.4}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Expressions}{5}}
\newlabel{lang}{{2.5}{5}}
\newlabel{expr}{{1}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.5.1}Substitution}{6}}
\newlabel{subst}{{2.5.1}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6}Modeling the Object Heap}{6}}
\newlabel{heap}{{2.6}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.7}State configuration}{8}}
\newlabel{def}{{2.7}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.8}Bytecode Language and its Operational Semantics}{10}}
\newlabel{opSem}{{2.8}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Bytecode Language instructions }}{10}}
\newlabel{opSem:bclang}{{1}{10}}
\newlabel{stateTrans}{{2.1}{11}}
\newlabel{stateTransClos}{{2.2}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {3} Specification language for Java Bytecode programs}{18}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Introduction}{18}}
\newlabel{bcsl}{{3.1}{18}}
\citation{JMLRefMan}
\citation{M97oos}
\citation{BRL-JACK}
\citation{escjava}
\citation{jmlrac}
\citation{BurdyCCEKLLP03}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}A quick overview of JML}{19}}
\newlabel{BCSLprelim}{{3.2}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces class \texttt  {ListArray} with JML annotations}}{20}}
\newlabel{replaceSrc}{{2}{20}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Features of BCSL}{20}}
\newlabel{BCSLgrammar}{{3.3}{20}}
\citation{BRL-JACK}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces grammar of BCSL }}{22}}
\newlabel{BCSL}{{3}{22}}
\citation{VMSpec}
\citation{VMSpec}
\citation{VMSpec}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Compiling JML into bytecode specification language}{23}}
\newlabel{BCSLcompile}{{3.4}{23}}
\citation{ARUCom1986}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces \sc  The compilation of the postcondition in Fig. 2\hbox {}}}{24}}
\newlabel{postCompile}{{4}{24}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces \sc  Structure of the Loop Attribute}}{25}}
\newlabel{loopAttribute}{{5}{25}}
\@writefile{toc}{\contentsline {section}{\numberline {4} Weakest Precondition Calculus for Java Bytecode}{25}}
\newlabel{wpGeneral}{{4}{25}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Bytecode Programs. Background}{25}}
\newlabel{prelim}{{4.1}{25}}
\citation{ARUCom1986}
\newlabel{defLoop}{{1}{26}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}WP for a Java bytecode }{26}}
\newlabel{wp}{{4.2}{26}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.2.1}Definitions}{26}}
\newlabel{wpHelp}{{4.2.1}{26}}
\newlabel{inter}{{2}{27}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.2.2}Weakest Precondition Calculus Rules}{27}}
\newlabel{wprules}{{4.2.2}{27}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Example}{31}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.3.1}Weakest Precondition in the Presence of Loop }{31}}
\bibstyle{plain}
\bibdata{biblio,specification}
\bibcite{ARUCom1986}{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Correctness}{36}}
\bibcite{barthe02formal}{2}
\bibcite{barthe01formal}{3}
\bibcite{M97oos}{4}
\bibcite{BurdyCCEKLLP03}{5}
\bibcite{BRL-JACK}{6}
\bibcite{jmlrac}{7}
\bibcite{FM99FFJ}{8}
\bibcite{JMLRefMan}{9}
\bibcite{KleinN04}{10}
\@writefile{toc}{\contentsline {section}{\numberline {5} Verification Condition Genarator for Java Bytecode Programs}{37}}
\@writefile{toc}{\contentsline {section}{\numberline {6} Equivalence between Java Source and Bytecode Proof Obligations}{37}}
\@writefile{toc}{\contentsline {section}{\numberline {7} Fitting a verification condition generator on a small device}{37}}
\@writefile{toc}{\contentsline {section}{\numberline {8} Applications}{37}}
\@writefile{toc}{\contentsline {section}{\numberline {9} Conclusion}{37}}
\bibcite{escjava}{11}
\bibcite{VMSpec}{12}
\bibcite{pusch98proving}{13}
\bibcite{qian99formal}{14}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces The control flow graph of the source program from Fig.2\hbox {} }}{39}}
\newlabel{ctrlflow}{{6}{39}}
