\contentsline {chapter}{\numberline {1}Introduction}{5}
\contentsline {chapter}{\numberline {2} Java bytecode language and its operational semantics}{7}
\contentsline {paragraph}{The features supported}{7}
\contentsline {paragraph}{The features not supported}{8}
\contentsline {section}{\numberline {2.1}Related Work}{9}
\contentsline {section}{\numberline {2.2}Notation}{9}
\contentsline {section}{\numberline {2.3}Classes, Fields and Methods}{10}
\contentsline {section}{\numberline {2.4}Program types and values}{11}
\contentsline {section}{\numberline {2.5}State configuration}{12}
\contentsline {subsection}{\numberline {2.5.1}Modeling the Object Heap}{14}
\contentsline {subsection}{\numberline {2.5.2}Registers}{16}
\contentsline {subsection}{\numberline {2.5.3}The operand stack}{17}
\contentsline {subsection}{\numberline {2.5.4}Program counter}{17}
\contentsline {section}{\numberline {2.6}Throwing and handling exceptions}{17}
\contentsline {section}{\numberline {2.7}Bytecode Language and its Operational Semantics}{19}
\contentsline {chapter}{\numberline {3}Specification language for Java bytecode programs}{27}
\contentsline {section}{\numberline {3.1}A quick overview of JML}{28}
\contentsline {section}{\numberline {3.2}BML}{29}
\contentsline {subsection}{\numberline {3.2.1}Notation convention}{29}
\contentsline {subsection}{\numberline {3.2.2}BML Grammar}{30}
\contentsline {subsection}{\numberline {3.2.3}Interpretation of the BML grammar}{32}
\contentsline {subsubsection}{BML expressions}{32}
\contentsline {subsubsection}{BML predicates}{33}
\contentsline {subsubsection}{Class Specification}{33}
\contentsline {subsubsection}{Inter --- method specification}{34}
\contentsline {subsubsection}{Method specification case}{35}
\contentsline {subsubsection}{Intra --- method specification}{36}
\contentsline {subsubsection}{Frame conditions}{37}
\contentsline {section}{\numberline {3.3}Well formed BML specification}{39}
\contentsline {section}{\numberline {3.4}Compiling JML into BML}{39}
\contentsline {chapter}{\numberline {4}Verification condition generator for Java bytecode }{45}
\contentsline {section}{\numberline {4.1}Related work}{46}
\contentsline {section}{\numberline {4.2}Representing bytecode programs as control flow graphs}{47}
\contentsline {section}{\numberline {4.3}Extending method declarations with specification}{49}
\contentsline {section}{\numberline {4.4}Weakest precondition calculus}{50}
\contentsline {subsection}{\numberline {4.4.1}Intermediate predicates}{50}
\contentsline {subsection}{\numberline {4.4.2}Weakest precondition in the presence of exceptions}{51}
\contentsline {subsection}{\numberline {4.4.3}Rules for single instruction}{51}
\contentsline {section}{\numberline {4.5}Example}{58}
\contentsline {chapter}{\numberline {5}Correctness of the verification condition generator}{61}
\contentsline {section}{\numberline {5.1}Substitution}{61}
\contentsline {section}{\numberline {5.2}Interpretation of assertions in a state}{62}
\contentsline {section}{\numberline {5.3}Proof of Correctness }{65}
\contentsline {chapter}{\numberline {6}Equivalence between Java source and bytecode proof Obligations}{71}
\contentsline {chapter}{\numberline {7}A compact verification condition generator}{73}
\contentsline {chapter}{\numberline {8}Applications}{75}
\contentsline {chapter}{\numberline {9}Conclusion}{77}
