static_diagram BUILTIN
component
  class ANY
  class VALUE
--  feature
--    infix "<:": BOOLEAN -> VALUE
--    <=: BOOLEAN -> VALUE
--    >: BOOLEAN -> VALUE
--    >=: BOOLEAN -> VALUE
--    =: BOOLEAN -> VALUE
--    /=: BOOLEAN -> VALUE
  class STRING
    feature
      substring: BOOLEAN -> STRING
      string_prefix: BOOLEAN -> VALUE
      string_suffix: BOOLEAN -> VALUE
  end

  class NUMERIC
  class INTEGER
  class REAL
    feature
      floor: INTEGER
      ceiling: INTEGER
      round: INTEGER
  end

  class CONTAINER[T]
    feature
      in: BOOLEAN -> T
      count: INTEGER
  end

  class SET[T]
    feature
      union: SET[T] -> SET[T]
      intersect: SET[T] -> SET[T]
  end

  class BAG[T]
    feature
      merge: BAG[T] -> BAG[T]
  end

  class SEQUENCE[T]
    feature
      concatenate: SEQUENCE[T] -> SEQUENCE[T]
  end

  class TABLE[K, V]
    feature
      key: BOOLEAN -> K
      value: V -> K
  end

  class STACK[T]
    feature
      top: T
      pop: STACK[T]
  end

  VALUE inherit ANY
  CONTAINER inherit ANY
  NUMERIC inherit VALUE
  INTEGER inherit NUMERIC
  REAL inherit NUMERIC
  SET inherit CONTAINER
  LIST inherit CONTAINER
  BAG inherit CONTAINER
  SEQUENCE inherit CONTAINER
  TABLE inherit CONTAINER
end

-- static_diagram KEY_RELATIONS
-- component
--   cluster EVENTS
--   component
--     class ASSERTION persistent
--     deferred class EVENT persistent
--     class LEVEL persistent
--     class LOG persistent
--     class MESSAGE persistent
--     class STATISTIC persistent
--     class TYPE persistent

--     LEVEL inherit VALUE
    --LOG inherit SET[EVENT]
--     LOG inherit SET
--     MESSAGE inherit STRING
--     TYPE inherit VALUE

--     EVENT client LEVEL
--     EVENT client TYPE
--     EVENT client MESSAGE

--     ASSERTION inherit EVENT
--     STATISTIC inherit EVENT
--   end
  
--   cluster PROCESSING
--   component
--     class CHECKER interfaced
--     class COLLECTOR interfaced
--     class LOGGER interfaced
--     class TUNER persistent interfaced

    --COLLECTOR inherit SET[STATISTIC]
--     COLLECTOR inherit SET
    --LOGGER inherit SET[LOG]
--     LOGGER inherit SET

--     CHECKER client EVENT
--     COLLECTOR client EVENT
--     LOGGER client EVENT
--     LOGGER client LOG
--   end
-- end

static_diagram LOGGING
component
  cluster EVENTS
  component
    class ASSERTION
    
    class MESSAGE inherit STRING

    class EVENT
    feature
      system: STRING
      the_component: STRING
      type: TYPE
      timestamp: DATE
      the_description: STRING
      level: LEVEL
      printable_representation: STRING
      valid: BOOLEAN -> STRING
      legal: BOOLEAN -> TYPE
      --legal: BOOLEAN -> LEVEL
      equals: BOOLEAN -> other: EVENT
        require other /= Void;
        ensure Result <-> system=other.system and the_component=other.the_component and
                           type=other.type and timestamp=other.timestamp and
                           level=other.level;
        end
      make: EVENT
        -> system: STRING -> the_component: STRING -> type: TYPE
        -> the_description: STRING -> level: LEVEL
        require 
          valid(system);
          valid(the_component);
          legal(type);
          legal(level);
        end

      invariant
        valid(system);
        valid(the_component);
        TYPE.legal(type);
        LEVEL.legal(level);
    end

    class LEVEL
    feature
      minimum: VALUE
      maximum: VALUE
      current: VALUE
      set_value: VOID -> new_value: VALUE
        require
          minimum <= new_value;
          new_value <= maximum;
        ensure
          current = new_value;
        end
      legal: BOOLEAN -> v: VALUE
        ensure
          Result <-> minimum <= v;
          v <= maximum;
        end
      invariant
        minimum <= maximum;
    end
      
    class LOG
      feature
        events: SET[EVENT] -> EVENT_DESCRIPTION
        sources: LIST[STRING]
        store: VOID -> EVENT
        delete: VOID -> EVENT
        --delete: VOID -> EVENT_DESCRIPTION
        export: VOID -> file: FILE
        import: VOID -> file: FILE
    end

    class STATISTIC
      feature
        id: VALUE
        units: STRING
        scalar: VALUE
        start: VALUE
        increment: VALUE
        decrement: VALUE
        create: STATISTIC
          -> units: STRING -> scalar: VALUE -> start: VALUE 
          -> increment: VALUE -> decrement: VALUE
          ensure
            Result.units = units;
            Result.scalar = scalar;
            Result.start = start;
            Result.increment = increment;
            Result.decrement = decrement;
          end
    end

    class TYPE
      feature
        legal_types: SET[TYPE]
        legal: BOOLEAN -> t: TYPE
          ensure
            Result <-> t member_of legal_types;
          end
    end
  end

  cluster PROCESSING
  component
    class CHECKER
    feature
      valid: BOOLEAN
        -> assertion: ASSERTION
    end

    class COLLECTOR
    feature
      value: VALUE -> STATISTIC
      active: BOOLEAN -> STATISTIC

      report: VOID -> STATISTIC
      --report: VOID
      increment: VOID -> STATISTIC -> VALUE
      --increment: VOID -> STATISTIC
      decrement: VOID -> STATISTIC -> VALUE
      --decrement: VOID -> STATISTIC

      reset: VOID -> STATISTIC
      set: VOID -> STATISTIC -> VALUE
      register: VOID -> s: STATISTIC
        require
          not (s member_of Current);
        ensure
          not active(s);
        end
      activate: VOID -> STATISTIC
      deactivate: VOID -> STATISTIC
    end

    class LOGGER
      feature
        log: SET[LOG]
        last: EVENT
        clear: VOID
        save: VOID -> f: FILE
        close: VOID
    end

    class TUNER
      feature
        enabled: BOOLEAN -> LEVEL
        --enabled: BOOLEAN -> TYPE
        types: SET[TYPE]
        enable: VOID -> TYPE
        disable: VOID -> TYPE
        level: VOID -> l: LEVEL
    end
  end
end
