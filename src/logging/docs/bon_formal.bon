static_diagram BUILTIN
component
  class VALUE
  feature
    infix "<": BOOLEAN -> VALUE -> VALUE
    infix "<=": BOOLEAN -> VALUE -> VALUE
    infix ">": BOOLEAN -> VALUE -> VALUE
    infix ">=": BOOLEAN -> VALUE -> VALUE
    infix "=": BOOLEAN -> VALUE -> VALUE
    infix "/=": BOOLEAN -> VALUE -> VALUE
  class STRING
  feature
    substring: BOOLEAN -> VALUE
    string_suffix: BOOLEAN -> VALUE
    string_prefix: BOOLEAN -> VALUE
  class NUMERIC
  class INTEGER
  class REAL
  feature
    floor: INTEGER
    ceiling: INTEGER
    round: INTEGER
  class CONTAINER[T]
  feature
    in: BOOLEAN -> T
    count: INTEGER
  class SET[T]
  feature
    union: SET[T] -> SET[T]
    intersect: SET[T] -> SET[T]
  class BAG[T]
  feature
    merge: BAG[T] -> BAG[T]
  class SEQUENCE[T]
  feature
    concatenate: SEQUENCE[T] -> SEQUENCE[T]
  class TABLE[K, V]
  feature
    key: BOOLEAN -> K
    value: V -> K
  class STACK[T]
  feature
    top: T
    pop: STACK[T]

  NUMERIC inherit VALUE
  INTEGER inherit NUMERIC
  REAL inherit NUMERIC
  SET inherit CONTAINER
  LIST inherit CONTAINER
  BAG inherit CONTAINER
  SEQUENCE inherit CONTAINER
end

static_diagram KEY_RELATIONS
component
  cluster EVENTS
  component
    class ASSERTION persistent
    deferred class EVENT persistent
    class LEVEL persistent
    class LOG persistent
    class MESSAGE persistent
    class STATISTIC persistent
    class TYPE persistent
    class SET reused

    LEVEL inherit VALUE
    LOG inherit SET[EVENT]
    MESSAGE inherit STRING
    TYPE inherit VALUE

    EVENT client LEVEL
    EVENT client TYPE
    EVENT cilent MESSAGE

    ASSERTION inherit EVENT
    STATISTIC inherit EVENT
  end
  cluster PROCESSING
  component
    class CHECKER interfaced
    class COLLECTOR interfaced
    class LOGGER interfaced
    class TUNER persistent interfaced
    class SET reused

    COLLECTOR inherit SET[STATISTIC]
    LOGGER inherit SET[LOG]

    CHECKER client EVENT
    COLLECTOR client EVENT
    LOGGER client EVENT
    LOGGER client LOG
  end
end

static_diagram LOGGING
component
  cluster EVENTS
  component
    class ASSERTION

    class EVENT
    feature
      system: STRING
      component: STRING
      type: TYPE
      timestamp: DATE
      description: STRING
      level: LEVEL
      printable_representation: STRING
      valid: BOOLEAN -> STRING
      legal: BOOLEAN -> TYPE
      legal: BOOLEAN -> LEVEL
      equals: BOOLEAN -> other: EVENT
        requires other /= Void
        ensures Result <-> system=other.system and component=other.component and
                           type=other.type and timestamp=other.timestamp and
                           level=other.level
      create: EVENT
        -> system: STRING -> component: STRING -> type: TYPE ->
           description: STRING -> level: LEVEL
        requires valid(system)
                 valid(component)
                 legal(type)
                 legal(level)
      invariant
        valid(system)
        valid(component)
        TYPE.legal(type)
        LEVEL.legal(level)

    class LEVEL
    feature
      minimum: VALUE
      maximum: VALUE
      current: VALUE
      set_value: VOID -> new_value: VALUE
        requires
          minimum <= new_value
          new_value <= maximum
        ensures
          current = new_value
      legal: BOOLEAN -> v: VALUE
        ensures
          Result <-> minimum <= v and v <= maximum
      invariant
        minimum <= maximum
      
    class LOG
      events: SET[EVENT] -> EVENT_DESCRIPTION
      sources: LIST[STRING]
      store: VOID -> EVENT
      delete: VOID -> EVENT
      delete: VOID -> EVENT_DESCRIPTION
      export: VOID -> file: FILE
      import: VOID -> file: FILE

    class STATISTIC
      id: VALUE
      units: STRING
      scalar: VALUE
      start: VALUE
      increment: VALUE
      decrement: VALUE
      create: STATISTIC
        -> units: STRING -> scalar: VALUE -> start: VALUE, 
           increment: VALUE -> decrement: VALUE
        ensures
          Result.units = units
          Result.scalar = scalar
          Result.start = start
          Result.increment = increment
          Result.decrement = decrement

    class TYPE
      legal_types: SET[TYPE]
      legal: BOOLEAN -> t: TYPE
        ensures
          Result <-> t member_of legal_types
  end

  cluster PROCESSING
  component
    class CHECKER
    feature
      valid: BOOLEAN
        -> assertion: ASSERTION
    end

    class COLLECTOR
    feature
      value: VALUE -> STATISTIC
      active: BOOLEAN -> STATISTIC

      report: VOID -> STATISTIC
      report: VOID
      increment: VOID -> STATISTIC -> VALUE
      increment: VOID -> STATISTIC
      decrement: VOID -> STATISTIC -> VALUE
      decrement: VOID -> STATISTIC
      reset: VOID -> STATISTIC
      set: VOID -> STATISTIC -> VALUE
      register: VOID -> s: STATISTIC
        requires
          not s member_of Current
        ensures
          not active(s)
      activate: VOID -> STATISTIC
      deactivate: VOID -> STATISTIC

    class LOGGER
    feature
      log: SET[LOG]
      last: EVENT
      clear: VOID
      save: VOID -> f: FILE
      close: VOID

    class TUNER
      enabled: BOOLEAN -> LEVEL
      enabled: BOOLEAN -> TYPE
      types: SET[TYPE]
      enable: VOID -> TYPE
      disable: VOID -> TYPE
      level: VOID -> l: LEVEL
  end
end
