<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================                                                      

     BmlVCGen    
     Ant buildfile for BmlVCGen.
                                                              
     ====================================================================== -->
<project name="BmlVCGen" default="dist">
	<!-- Load properties. -->
	<property file="BmlVCGen.properties" />
	<property name="jar.file" value="${app.name}.jar" />

	<!-- Load checkstyle task. -->
	<taskdef resource="checkstyletask.properties"
	         classpath="${tools.dir}/${checkstyle.jar}"/>

	<!-- Create classpaths. -->
	<path id="BmlVCGen.classpath">
		<pathelement location="${build.dir}/classes" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="BmlVCGen.tests.classpath">
		<pathelement location="${tests.build.dir}/classes" />
		<fileset dir="${tests.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<path refid="BmlVCGen.classpath" />
	</path>
   <pathconvert property="BmlVCGen.classpath.str" 
                refid="BmlVCGen.classpath" 
                pathsep=" " dirsep="/" />

	<!-- Create required directories. -->
	<target name="mkdirs">
		<mkdir dir="${src.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/classes" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- Copy non-java files from source directories to build dir. -->
	<target name="copyfiles">
		<copy includeemptydirs="false" todir="${build.dir}/classes">
			<fileset dir="${src.dir}" excludes="**/*.launch, **/*.java, **/package.html, **/.svn/*" />
		</copy>
		<copy includeemptydirs="false" todir="${build.dir}/classes">
			<fileset dir="${res.dir}" excludes="**/.svn/*" />
		</copy>
	</target>

	<!-- Prepare environment for building. -->
	<target name="init" depends="mkdirs,copyfiles"/>

	<!-- Compile sources. -->
	<target name="build" depends="init">
		<javac debug="true" destdir="${build.dir}/classes" 
			     source="${source.level}" 
			     target="${target.level}"
			     verbose="true">
			<src path="${src.dir}" />
			<classpath refid="BmlVCGen.classpath" />
		</javac>
	</target>

	<!-- Create JAR file. -->
	<target name="dist" depends="build">
		<mkdir dir="${dist.dir}" />
		<delete file="${dist.dir}/${jar.file}" />
		<jar destfile="${dist.dir}/${jar.file}" 
			 basedir="${build.dir}/classes">
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value="${BmlVCGen.classpath.str}" />
			</manifest>
			<include name="**/*" />
		</jar>
		<copy includeemptydirs="false" todir="${dist.dir}">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</copy>
	</target>

	<!-- Create directories required for testing. -->
	<target name="tests.mkdirs">
		<mkdir dir="${tests.src.dir}" />
		<mkdir dir="${tests.build.dir}" />
		<mkdir dir="${tests.build.dir}/classes" />
		<mkdir dir="${tests.output}" />
		<mkdir dir="${tests.report}" />
	</target>

	<!-- Copy non-source files to test build directory. -->
	<target name="tests.copyfiles">
		<copy includeemptydirs="false" todir="${tests.build.dir}/classes">
			<fileset dir="${tests.src.dir}" excludes="**/*.launch, **/*.java, **/package.html, **/.svn/*" />
		</copy>
	</target>

	<!-- Prepare environment for building tests. -->
	<target name="tests.init" depends="tests.mkdirs,tests.copyfiles" />

   <!-- Build tests -->
	<target name="tests.build" depends="build,tests.init">
		<javac debug="true" destdir="${tests.build.dir}/classes" 
			source="${source.level}" target="${target.level}">
			<src path="${tests.src.dir}" />
			<classpath refid="BmlVCGen.tests.classpath" />
		</javac>
	</target>

   <!-- Run tests and create xml report. -->
	<target name="tests.run" depends="tests.build">
		<junit>
			<classpath refid="BmlVCGen.tests.classpath" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${tests.output}">
				<fileset dir="${tests.build.dir}/classes">
					<include name="**/*Test*.class" />
					<exclude name="**/Abstract*" />
					<exclude name="**/*$*" />
				</fileset>
			</batchtest>
		</junit>
	</target>
 
   <!-- Create HTML report with test results. -->
	<target name="tests.report" depends="tests.run">
		<junitreport todir="${tests.output}">
			<fileset dir="${tests.output}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${tests.report}" />
		</junitreport>
	</target>

   <!-- Run checkstyle. -->
	<target name="checkstyle">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${checkstyle.report}" />
		<checkstyle config="${checkstyle.config}">
			<fileset dir="${src.dir}" includes="**/*.java" />
			<classpath refid="BmlVCGen.classpath" />
			<formatter type="plain"/>
			<formatter type="xml" tofile="${build.dir}/${checkstyle.output}"/>
		</checkstyle>
		<xslt in="${build.dir}/${checkstyle.output}" 
			  out="${checkstyle.report}/index.html" 
			  style="${tools.dir}/${checkstyle.xsl}" />
	</target>

   <!-- Run javadoc tool. -->
	<target name="doc">
		<mkdir dir="${doc.dir}" />
		<javadoc sourcepath="${src.dir}"
			     overview="${src.dir}/overview.html"
			     classpathref="BmlVCGen.classpath"
			     defaultexcludes="yes" 
              destdir="${doc.dir}"
			     author="true"
			     use="true"
		/>
	</target>

   <!-- Delete generated files. -->
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete dir="${tests.build.dir}"/>
		<delete dir="${tests.output}"/>
		<delete dir="${tests.report}"/>
		<delete dir="${doc.dir}"/>
		<delete dir="${checkstyle.report}"/>
	</target>

</project>
