\input texinfo   @c -*-texinfo-*-
@c %**start of header

@setfilename mobius_process.info
@settitle The Mobius Programming Standard
@c Other commands that globally affect the document formatting: 
@c synindex, footnotestyle
@afourwide
@paragraphindent 0
@c firstparagraphindent 0
@c %**end of header
@c =============================================================================

@c =============================================================================
@c Definitions of new indices for this document

@c Examples below are from Escjava2-Extending.texinfo.

@c =============================================================================
@c Functions are indexed using the built-in @findex
@c Predicates are indexed using @pindex
@c @defcodeindex p
@c Constants are indexed using @kindex
@c @defcodeindex k

@c Map predicates (pindex) and constants (kindex) the function index.

@c @syncodeindex p fn
@c @syncodeindex k fn

@c =============================================================================

@c =============================================================================
@c %**summary and copyright

Initial version written by Joseph Kiniry in Summer 2007.

Current author and editor: Joseph Kiniry.

This document describes the Mobius Programming Standard, a declarative
description of ``look-and-feel'' of well-designed, well-documented,
high-quality, component-based software for the Mobius Platform.  A set
of tools to support programming against site-customized versions of the
standard are discussed.  Additionally, case studies in application of
the coding standard, both in its ``minimal'' and (via an example)
``maximal'' forms, are also included for pedagogical and expository
purposes.

This is edition
@include svnrevision

This document is a work in progress.  Suggestions, input, and new
co-authors are always welcome.

@copying
``The Mobius Programming Standard'' is licensed under the
Creative Commons Attribution-NonCommercial-ShareAlike 2.0 license.  See
@uref{http://creativecommons.org/licenses/by-nc-sa/2.0/}

Copyright @copyright{} 2007 Joseph R. Kiniry and University College
Dublin.

@quotation
You are free:
@itemize
@item
to copy, distribute, display, and perform the work
@item
to make derivative works
@end itemize

Under the following conditions:
@itemize
@item
Attribution. You must give the original author credit.
@item
Noncommercial. You may not use this work for commercial purposes.
@item
Share Alike. If you alter, transform, or build upon this work, you may
distribute the resulting work only under a license identical to this
one.
@end itemize

For any reuse or distribution, you must make clear to others the license
terms of this work.

Any of these conditions can be waived if you get permission from the
author.

Your fair use and other rights are in no way affected by the above.

This is a human-readable summary of the Legal Code.

See @uref{http://creativecommons.org/licenses/by-nc-sa/2.0/legalcode}
@end quotation

@end copying

@c %**end of summary and copyright
@c =============================================================================

@c =============================================================================
@c %**title, contents, and copyright

@titlepage
@title The Mobius Programming Standard
@subtitle July 2007
@subtitle This document describes the Mobius Programming Standard.
@author Joseph R. Kiniry <kiniry@@ucd.ie>

@c The following two commands start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying

@c To be published by the KindSoftware Research Group, School of
@c Computer Science and Informatics, University College Dublin as
@c technical report TBD
@c See @uref{http://secure.ucd.ie/}
@end titlepage

@c metadata used in HTML
@documentdescription
Mobius, Programming, Specification, Standard, Syntax, Overview,
Dictionary, Design, Architecture, BON, EBON, Business Object Notation,
Unit Testing, jUnit, Wiki, ESC/Java, ESC/Java2, Java Modeling Language,
JML, Extended Static Checking, Extended Static Checker, Design by
Contract, Java, Verification, BISL, Kiniry, PMD, FindBugs, CheckStyle,
JavaNCSS, NCSS
@end documentdescription

@c Output the table of contents at the beginning.
@contents

@c %**end of title, contents, and copyright
@c =============================================================================

@c =============================================================================
@c %**top node and master menu

@c We recommend including the copying permissions here as well as the
@c segments above.
@ifnottex
@node Top, Introduction, (dir), (dir)
@top The Mobius Software Engineering Process

@insertcopying
@end ifnottex

This document describes the Mobius Programming Standard, a declarative
description of ``look-and-feel'' of well-designed, well-documented,
high-quality, component-based software for the Mobius Platform.  A set
of tools to support programming against site-customized versions of the
standard are discussed.  Additionally, case studies in application of
the coding standard, both in its ``minimal'' and (via an example)
``maximal'' forms, are also included for pedagogical and expository
purposes.

@menu
* Introduction::                An introduction to this document.
* A Mobius Programming Standard ``Quick-Start''::  For those already familiar with coding standards.
* Facets of the Mobius Programming Standard::  Detailed descriptions of each facet of the standard.
* Project Management with Programming Standards::  How to manage the Mobius Programming Standard in the Mobius Process.
* Case Studies in Applying the Mobius Programming Standard::  Example use of the programming standard for a number of components.
* Copying::                     Your rights and freedoms.
* Index::                       Complete index.
@end menu

@c %**end top node and master menu
@c =============================================================================

@c =============================================================================
@c %**body

@c =============================================================================
@node Introduction, A Mobius Programming Standard ``Quick-Start'', Top, Top
@chapter Introduction

@cindex introduction

This document describes the Mobius Software Engineering Process, a kind
of ``recipe'' for writing well-designed, well-documented, high-quality,
component-based software for the Mobius Platform.  A set of case studies
in application of the process are also included for pedagogical and
expository purposes.

The case studies discussed were chosen because they: (a) focus on actual
components in the Mobius Program Verification Environment (PVE), (b)
were relatively small and self-contained examples, and (c) they are
either components developed from scratch or are components that are
adopted from other Open Source projects, thus show how to apply the
process to both new and existing code bases.

@menu
* Specification Languages::     A summary of the specification languages used in this process.
* Relationship to the BON Process::  How this process relates to its parent process.
@end menu

@c ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@node Specification Languages, Relationship to the BON Process, Introduction, Introduction
@section Specification Languages

@cindex specification languages

We describe Mobius framework and component architectures using two
specification languages: the Extended Business Object Notation (EBON)
and the Java Modeling Language (JML).

@c TODO: explain why BON vs. UML
@c TODO: refinement in a nutshell
@c TODO: testing and refinements: connection between scenarios and events and testing
@c TODO: documentation and refinement
@c TODO: formal literate programming
@c TODO: documentation and specification artifacts

@menu
* BON and EBON::                The (Extended) Business Object Notation.
* JML::                         The Java Modeling Language.
@end menu

@c -----------------------------------------------------------------------------
@node BON and EBON, JML, Specification Languages, Specification Languages
@subsection BON and EBON

@cindex BON
@cindex EBON
@cindex Business Object Notation
@cindex Extended Business Object Notation

An extention of the specification language BON (``Business Object
Notation'') called EBON (``Extended...'') is used for the first several
levels of specification (high-to-medium level).  

BON is a specification language developed by Kim Walden and Jean-Marc
Nerson and is documented in the book ``Seamless Object-Oriented Software
Construction,'' freely available from @uref{http://www.bon-method.com/}.
EBON enriches BON using domain-specific annotations called ``semantic
properties,'' as described the KindSoftware Coding Standard available
from @uref{http://secure.ucd.ie/}) and, soon, in the Mobius Coding
Standard available from @uref{http://mobius.inria.fr/}.

@c TODO: Fix accent in Kim's name.

EBON is a simple enough specification language that most, if not all, of
the specifications herein will be comprehensible to the reader who knows
nothing at all of BON.

@c -----------------------------------------------------------------------------
@node JML,  , BON and EBON, Specification Languages
@subsection JML

@c TODO: quick overview of JML
@c TODO: how we use JML: docs, specs, jmlrac, escjava2, jmljunit
@c TODO: relationship to EBON specifications: refinement from EBON to JML

@c ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@node Relationship to the BON Process,  , Specification Languages, Introduction
@section Relationship to the BON Process

@cindex BON process
@cindex BON process, relationship to

@c TODO: how does this process differ?
@c TODO: focus on verification

@c =============================================================================
@node A Mobius Programming Standard ``Quick-Start'', Facets of the Mobius Programming Standard, Introduction, Top
@chapter A Mobius Programming Standard ``Quick-Start''

@cindex A Mobius Programming Standard ``Quick-Start''
@cindex quick-start guide
@cindex programming standard overview
@cindex standard overview
@cindex overview

@c =============================================================================
@node Facets of the Mobius Programming Standard, Project Management with Programming Standards, A Mobius Programming Standard ``Quick-Start'', Top
@chapter Facets of the Mobius Programming Standard

@cindex facets of the Mobius Programming Standard
@cindex facets

@c ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@node Project Management with Programming Standards, Case Studies in Applying the Mobius Programming Standard, Facets of the Mobius Programming Standard, Top
@chapter Project Management with Programming Standards

@cindex project management with programming standards
@cindex project management
@cindex management

@c ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@node Case Studies in Applying the Mobius Programming Standard, Copying, Project Management with Programming Standards, Top
@chapter Case Studies in Applying the Mobius Programming Standard

@cindex case study
@cindex case studies
@cindex Mobius Programming Standard case studies

@menu
* The Mobius Logging Framework::  
* The ESC/Java2 Eclipse Plugin::  
@end menu

@c ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@node The Mobius Logging Framework, The ESC/Java2 Eclipse Plugin, Case Studies in Applying the Mobius Programming Standard, Case Studies in Applying the Mobius Programming Standard
@section The Mobius Logging Framework

@cindex Mobius Logging Framework
@cindex logging
@cindex assert

@c ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@node The ESC/Java2 Eclipse Plugin,  , The Mobius Logging Framework, Case Studies in Applying the Mobius Programming Standard
@section The ESC/Java2 Eclipse Plugin

@cindex ESC/Java2 Eclipse plugin
@cindex Eclipse plugin, ESC/Java2

@c =============================================================================
@node Copying, Index, Case Studies in Applying the Mobius Programming Standard, Top
@appendix Copying

@cindex Copying

@insertcopying

@c %**end of body
@c =============================================================================

@c =============================================================================
@c %**end of document

@node Index,  , Copying, Top
@unnumbered Index

@printindex cp

@bye

@c Local Variables:
@c auto-fill-function: nil
@c End:
